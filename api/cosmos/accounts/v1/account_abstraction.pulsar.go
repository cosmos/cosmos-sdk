// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package accountsv1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_UserOperation_6_list)(nil)

type _UserOperation_6_list struct {
	list *[]*anypb.Any
}

func (x *_UserOperation_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_UserOperation_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_UserOperation_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*anypb.Any)
	(*x.list)[i] = concreteValue
}

func (x *_UserOperation_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*anypb.Any)
	*x.list = append(*x.list, concreteValue)
}

func (x *_UserOperation_6_list) AppendMutable() protoreflect.Value {
	v := new(anypb.Any)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UserOperation_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_UserOperation_6_list) NewElement() protoreflect.Value {
	v := new(anypb.Any)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UserOperation_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_UserOperation_8_list)(nil)

type _UserOperation_8_list struct {
	list *[]*anypb.Any
}

func (x *_UserOperation_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_UserOperation_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_UserOperation_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*anypb.Any)
	(*x.list)[i] = concreteValue
}

func (x *_UserOperation_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*anypb.Any)
	*x.list = append(*x.list, concreteValue)
}

func (x *_UserOperation_8_list) AppendMutable() protoreflect.Value {
	v := new(anypb.Any)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UserOperation_8_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_UserOperation_8_list) NewElement() protoreflect.Value {
	v := new(anypb.Any)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UserOperation_8_list) IsValid() bool {
	return x.list != nil
}

var (
	md_UserOperation                           protoreflect.MessageDescriptor
	fd_UserOperation_sender                    protoreflect.FieldDescriptor
	fd_UserOperation_authentication_method     protoreflect.FieldDescriptor
	fd_UserOperation_authentication_data       protoreflect.FieldDescriptor
	fd_UserOperation_sequence                  protoreflect.FieldDescriptor
	fd_UserOperation_authentication_gas_limit  protoreflect.FieldDescriptor
	fd_UserOperation_bundler_payment_messages  protoreflect.FieldDescriptor
	fd_UserOperation_bundler_payment_gas_limit protoreflect.FieldDescriptor
	fd_UserOperation_execution_messages        protoreflect.FieldDescriptor
	fd_UserOperation_execution_gas_limit       protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_accounts_v1_account_abstraction_proto_init()
	md_UserOperation = File_cosmos_accounts_v1_account_abstraction_proto.Messages().ByName("UserOperation")
	fd_UserOperation_sender = md_UserOperation.Fields().ByName("sender")
	fd_UserOperation_authentication_method = md_UserOperation.Fields().ByName("authentication_method")
	fd_UserOperation_authentication_data = md_UserOperation.Fields().ByName("authentication_data")
	fd_UserOperation_sequence = md_UserOperation.Fields().ByName("sequence")
	fd_UserOperation_authentication_gas_limit = md_UserOperation.Fields().ByName("authentication_gas_limit")
	fd_UserOperation_bundler_payment_messages = md_UserOperation.Fields().ByName("bundler_payment_messages")
	fd_UserOperation_bundler_payment_gas_limit = md_UserOperation.Fields().ByName("bundler_payment_gas_limit")
	fd_UserOperation_execution_messages = md_UserOperation.Fields().ByName("execution_messages")
	fd_UserOperation_execution_gas_limit = md_UserOperation.Fields().ByName("execution_gas_limit")
}

var _ protoreflect.Message = (*fastReflection_UserOperation)(nil)

type fastReflection_UserOperation UserOperation

func (x *UserOperation) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UserOperation)(x)
}

func (x *UserOperation) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_accounts_v1_account_abstraction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UserOperation_messageType fastReflection_UserOperation_messageType
var _ protoreflect.MessageType = fastReflection_UserOperation_messageType{}

type fastReflection_UserOperation_messageType struct{}

func (x fastReflection_UserOperation_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UserOperation)(nil)
}
func (x fastReflection_UserOperation_messageType) New() protoreflect.Message {
	return new(fastReflection_UserOperation)
}
func (x fastReflection_UserOperation_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UserOperation
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UserOperation) Descriptor() protoreflect.MessageDescriptor {
	return md_UserOperation
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UserOperation) Type() protoreflect.MessageType {
	return _fastReflection_UserOperation_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UserOperation) New() protoreflect.Message {
	return new(fastReflection_UserOperation)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UserOperation) Interface() protoreflect.ProtoMessage {
	return (*UserOperation)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UserOperation) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_UserOperation_sender, value) {
			return
		}
	}
	if x.AuthenticationMethod != "" {
		value := protoreflect.ValueOfString(x.AuthenticationMethod)
		if !f(fd_UserOperation_authentication_method, value) {
			return
		}
	}
	if len(x.AuthenticationData) != 0 {
		value := protoreflect.ValueOfBytes(x.AuthenticationData)
		if !f(fd_UserOperation_authentication_data, value) {
			return
		}
	}
	if x.Sequence != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Sequence)
		if !f(fd_UserOperation_sequence, value) {
			return
		}
	}
	if x.AuthenticationGasLimit != uint64(0) {
		value := protoreflect.ValueOfUint64(x.AuthenticationGasLimit)
		if !f(fd_UserOperation_authentication_gas_limit, value) {
			return
		}
	}
	if len(x.BundlerPaymentMessages) != 0 {
		value := protoreflect.ValueOfList(&_UserOperation_6_list{list: &x.BundlerPaymentMessages})
		if !f(fd_UserOperation_bundler_payment_messages, value) {
			return
		}
	}
	if x.BundlerPaymentGasLimit != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BundlerPaymentGasLimit)
		if !f(fd_UserOperation_bundler_payment_gas_limit, value) {
			return
		}
	}
	if len(x.ExecutionMessages) != 0 {
		value := protoreflect.ValueOfList(&_UserOperation_8_list{list: &x.ExecutionMessages})
		if !f(fd_UserOperation_execution_messages, value) {
			return
		}
	}
	if x.ExecutionGasLimit != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ExecutionGasLimit)
		if !f(fd_UserOperation_execution_gas_limit, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UserOperation) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.accounts.v1.UserOperation.sender":
		return x.Sender != ""
	case "cosmos.accounts.v1.UserOperation.authentication_method":
		return x.AuthenticationMethod != ""
	case "cosmos.accounts.v1.UserOperation.authentication_data":
		return len(x.AuthenticationData) != 0
	case "cosmos.accounts.v1.UserOperation.sequence":
		return x.Sequence != uint64(0)
	case "cosmos.accounts.v1.UserOperation.authentication_gas_limit":
		return x.AuthenticationGasLimit != uint64(0)
	case "cosmos.accounts.v1.UserOperation.bundler_payment_messages":
		return len(x.BundlerPaymentMessages) != 0
	case "cosmos.accounts.v1.UserOperation.bundler_payment_gas_limit":
		return x.BundlerPaymentGasLimit != uint64(0)
	case "cosmos.accounts.v1.UserOperation.execution_messages":
		return len(x.ExecutionMessages) != 0
	case "cosmos.accounts.v1.UserOperation.execution_gas_limit":
		return x.ExecutionGasLimit != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.v1.UserOperation"))
		}
		panic(fmt.Errorf("message cosmos.accounts.v1.UserOperation does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserOperation) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.accounts.v1.UserOperation.sender":
		x.Sender = ""
	case "cosmos.accounts.v1.UserOperation.authentication_method":
		x.AuthenticationMethod = ""
	case "cosmos.accounts.v1.UserOperation.authentication_data":
		x.AuthenticationData = nil
	case "cosmos.accounts.v1.UserOperation.sequence":
		x.Sequence = uint64(0)
	case "cosmos.accounts.v1.UserOperation.authentication_gas_limit":
		x.AuthenticationGasLimit = uint64(0)
	case "cosmos.accounts.v1.UserOperation.bundler_payment_messages":
		x.BundlerPaymentMessages = nil
	case "cosmos.accounts.v1.UserOperation.bundler_payment_gas_limit":
		x.BundlerPaymentGasLimit = uint64(0)
	case "cosmos.accounts.v1.UserOperation.execution_messages":
		x.ExecutionMessages = nil
	case "cosmos.accounts.v1.UserOperation.execution_gas_limit":
		x.ExecutionGasLimit = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.v1.UserOperation"))
		}
		panic(fmt.Errorf("message cosmos.accounts.v1.UserOperation does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UserOperation) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.accounts.v1.UserOperation.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "cosmos.accounts.v1.UserOperation.authentication_method":
		value := x.AuthenticationMethod
		return protoreflect.ValueOfString(value)
	case "cosmos.accounts.v1.UserOperation.authentication_data":
		value := x.AuthenticationData
		return protoreflect.ValueOfBytes(value)
	case "cosmos.accounts.v1.UserOperation.sequence":
		value := x.Sequence
		return protoreflect.ValueOfUint64(value)
	case "cosmos.accounts.v1.UserOperation.authentication_gas_limit":
		value := x.AuthenticationGasLimit
		return protoreflect.ValueOfUint64(value)
	case "cosmos.accounts.v1.UserOperation.bundler_payment_messages":
		if len(x.BundlerPaymentMessages) == 0 {
			return protoreflect.ValueOfList(&_UserOperation_6_list{})
		}
		listValue := &_UserOperation_6_list{list: &x.BundlerPaymentMessages}
		return protoreflect.ValueOfList(listValue)
	case "cosmos.accounts.v1.UserOperation.bundler_payment_gas_limit":
		value := x.BundlerPaymentGasLimit
		return protoreflect.ValueOfUint64(value)
	case "cosmos.accounts.v1.UserOperation.execution_messages":
		if len(x.ExecutionMessages) == 0 {
			return protoreflect.ValueOfList(&_UserOperation_8_list{})
		}
		listValue := &_UserOperation_8_list{list: &x.ExecutionMessages}
		return protoreflect.ValueOfList(listValue)
	case "cosmos.accounts.v1.UserOperation.execution_gas_limit":
		value := x.ExecutionGasLimit
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.v1.UserOperation"))
		}
		panic(fmt.Errorf("message cosmos.accounts.v1.UserOperation does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserOperation) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.accounts.v1.UserOperation.sender":
		x.Sender = value.Interface().(string)
	case "cosmos.accounts.v1.UserOperation.authentication_method":
		x.AuthenticationMethod = value.Interface().(string)
	case "cosmos.accounts.v1.UserOperation.authentication_data":
		x.AuthenticationData = value.Bytes()
	case "cosmos.accounts.v1.UserOperation.sequence":
		x.Sequence = value.Uint()
	case "cosmos.accounts.v1.UserOperation.authentication_gas_limit":
		x.AuthenticationGasLimit = value.Uint()
	case "cosmos.accounts.v1.UserOperation.bundler_payment_messages":
		lv := value.List()
		clv := lv.(*_UserOperation_6_list)
		x.BundlerPaymentMessages = *clv.list
	case "cosmos.accounts.v1.UserOperation.bundler_payment_gas_limit":
		x.BundlerPaymentGasLimit = value.Uint()
	case "cosmos.accounts.v1.UserOperation.execution_messages":
		lv := value.List()
		clv := lv.(*_UserOperation_8_list)
		x.ExecutionMessages = *clv.list
	case "cosmos.accounts.v1.UserOperation.execution_gas_limit":
		x.ExecutionGasLimit = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.v1.UserOperation"))
		}
		panic(fmt.Errorf("message cosmos.accounts.v1.UserOperation does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserOperation) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.accounts.v1.UserOperation.bundler_payment_messages":
		if x.BundlerPaymentMessages == nil {
			x.BundlerPaymentMessages = []*anypb.Any{}
		}
		value := &_UserOperation_6_list{list: &x.BundlerPaymentMessages}
		return protoreflect.ValueOfList(value)
	case "cosmos.accounts.v1.UserOperation.execution_messages":
		if x.ExecutionMessages == nil {
			x.ExecutionMessages = []*anypb.Any{}
		}
		value := &_UserOperation_8_list{list: &x.ExecutionMessages}
		return protoreflect.ValueOfList(value)
	case "cosmos.accounts.v1.UserOperation.sender":
		panic(fmt.Errorf("field sender of message cosmos.accounts.v1.UserOperation is not mutable"))
	case "cosmos.accounts.v1.UserOperation.authentication_method":
		panic(fmt.Errorf("field authentication_method of message cosmos.accounts.v1.UserOperation is not mutable"))
	case "cosmos.accounts.v1.UserOperation.authentication_data":
		panic(fmt.Errorf("field authentication_data of message cosmos.accounts.v1.UserOperation is not mutable"))
	case "cosmos.accounts.v1.UserOperation.sequence":
		panic(fmt.Errorf("field sequence of message cosmos.accounts.v1.UserOperation is not mutable"))
	case "cosmos.accounts.v1.UserOperation.authentication_gas_limit":
		panic(fmt.Errorf("field authentication_gas_limit of message cosmos.accounts.v1.UserOperation is not mutable"))
	case "cosmos.accounts.v1.UserOperation.bundler_payment_gas_limit":
		panic(fmt.Errorf("field bundler_payment_gas_limit of message cosmos.accounts.v1.UserOperation is not mutable"))
	case "cosmos.accounts.v1.UserOperation.execution_gas_limit":
		panic(fmt.Errorf("field execution_gas_limit of message cosmos.accounts.v1.UserOperation is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.v1.UserOperation"))
		}
		panic(fmt.Errorf("message cosmos.accounts.v1.UserOperation does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UserOperation) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.accounts.v1.UserOperation.sender":
		return protoreflect.ValueOfString("")
	case "cosmos.accounts.v1.UserOperation.authentication_method":
		return protoreflect.ValueOfString("")
	case "cosmos.accounts.v1.UserOperation.authentication_data":
		return protoreflect.ValueOfBytes(nil)
	case "cosmos.accounts.v1.UserOperation.sequence":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.accounts.v1.UserOperation.authentication_gas_limit":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.accounts.v1.UserOperation.bundler_payment_messages":
		list := []*anypb.Any{}
		return protoreflect.ValueOfList(&_UserOperation_6_list{list: &list})
	case "cosmos.accounts.v1.UserOperation.bundler_payment_gas_limit":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.accounts.v1.UserOperation.execution_messages":
		list := []*anypb.Any{}
		return protoreflect.ValueOfList(&_UserOperation_8_list{list: &list})
	case "cosmos.accounts.v1.UserOperation.execution_gas_limit":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.v1.UserOperation"))
		}
		panic(fmt.Errorf("message cosmos.accounts.v1.UserOperation does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UserOperation) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.accounts.v1.UserOperation", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UserOperation) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserOperation) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UserOperation) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UserOperation) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UserOperation)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.AuthenticationMethod)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.AuthenticationData)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Sequence != 0 {
			n += 1 + runtime.Sov(uint64(x.Sequence))
		}
		if x.AuthenticationGasLimit != 0 {
			n += 1 + runtime.Sov(uint64(x.AuthenticationGasLimit))
		}
		if len(x.BundlerPaymentMessages) > 0 {
			for _, e := range x.BundlerPaymentMessages {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.BundlerPaymentGasLimit != 0 {
			n += 1 + runtime.Sov(uint64(x.BundlerPaymentGasLimit))
		}
		if len(x.ExecutionMessages) > 0 {
			for _, e := range x.ExecutionMessages {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.ExecutionGasLimit != 0 {
			n += 1 + runtime.Sov(uint64(x.ExecutionGasLimit))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UserOperation)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ExecutionGasLimit != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ExecutionGasLimit))
			i--
			dAtA[i] = 0x48
		}
		if len(x.ExecutionMessages) > 0 {
			for iNdEx := len(x.ExecutionMessages) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ExecutionMessages[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x42
			}
		}
		if x.BundlerPaymentGasLimit != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BundlerPaymentGasLimit))
			i--
			dAtA[i] = 0x38
		}
		if len(x.BundlerPaymentMessages) > 0 {
			for iNdEx := len(x.BundlerPaymentMessages) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.BundlerPaymentMessages[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if x.AuthenticationGasLimit != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.AuthenticationGasLimit))
			i--
			dAtA[i] = 0x28
		}
		if x.Sequence != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Sequence))
			i--
			dAtA[i] = 0x20
		}
		if len(x.AuthenticationData) > 0 {
			i -= len(x.AuthenticationData)
			copy(dAtA[i:], x.AuthenticationData)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AuthenticationData)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.AuthenticationMethod) > 0 {
			i -= len(x.AuthenticationMethod)
			copy(dAtA[i:], x.AuthenticationMethod)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AuthenticationMethod)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UserOperation)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UserOperation: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UserOperation: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AuthenticationMethod", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AuthenticationMethod = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AuthenticationData", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AuthenticationData = append(x.AuthenticationData[:0], dAtA[iNdEx:postIndex]...)
				if x.AuthenticationData == nil {
					x.AuthenticationData = []byte{}
				}
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sequence", wireType)
				}
				x.Sequence = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Sequence |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AuthenticationGasLimit", wireType)
				}
				x.AuthenticationGasLimit = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.AuthenticationGasLimit |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BundlerPaymentMessages", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BundlerPaymentMessages = append(x.BundlerPaymentMessages, &anypb.Any{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BundlerPaymentMessages[len(x.BundlerPaymentMessages)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BundlerPaymentGasLimit", wireType)
				}
				x.BundlerPaymentGasLimit = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BundlerPaymentGasLimit |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExecutionMessages", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExecutionMessages = append(x.ExecutionMessages, &anypb.Any{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ExecutionMessages[len(x.ExecutionMessages)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExecutionGasLimit", wireType)
				}
				x.ExecutionGasLimit = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ExecutionGasLimit |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_UserOperationResponse_3_list)(nil)

type _UserOperationResponse_3_list struct {
	list *[]*anypb.Any
}

func (x *_UserOperationResponse_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_UserOperationResponse_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_UserOperationResponse_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*anypb.Any)
	(*x.list)[i] = concreteValue
}

func (x *_UserOperationResponse_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*anypb.Any)
	*x.list = append(*x.list, concreteValue)
}

func (x *_UserOperationResponse_3_list) AppendMutable() protoreflect.Value {
	v := new(anypb.Any)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UserOperationResponse_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_UserOperationResponse_3_list) NewElement() protoreflect.Value {
	v := new(anypb.Any)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UserOperationResponse_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_UserOperationResponse_5_list)(nil)

type _UserOperationResponse_5_list struct {
	list *[]*anypb.Any
}

func (x *_UserOperationResponse_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_UserOperationResponse_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_UserOperationResponse_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*anypb.Any)
	(*x.list)[i] = concreteValue
}

func (x *_UserOperationResponse_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*anypb.Any)
	*x.list = append(*x.list, concreteValue)
}

func (x *_UserOperationResponse_5_list) AppendMutable() protoreflect.Value {
	v := new(anypb.Any)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UserOperationResponse_5_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_UserOperationResponse_5_list) NewElement() protoreflect.Value {
	v := new(anypb.Any)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UserOperationResponse_5_list) IsValid() bool {
	return x.list != nil
}

var (
	md_UserOperationResponse                           protoreflect.MessageDescriptor
	fd_UserOperationResponse_authentication_gas_used   protoreflect.FieldDescriptor
	fd_UserOperationResponse_bundler_payment_gas_used  protoreflect.FieldDescriptor
	fd_UserOperationResponse_bundler_payment_responses protoreflect.FieldDescriptor
	fd_UserOperationResponse_execution_gas_used        protoreflect.FieldDescriptor
	fd_UserOperationResponse_execution_responses       protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_accounts_v1_account_abstraction_proto_init()
	md_UserOperationResponse = File_cosmos_accounts_v1_account_abstraction_proto.Messages().ByName("UserOperationResponse")
	fd_UserOperationResponse_authentication_gas_used = md_UserOperationResponse.Fields().ByName("authentication_gas_used")
	fd_UserOperationResponse_bundler_payment_gas_used = md_UserOperationResponse.Fields().ByName("bundler_payment_gas_used")
	fd_UserOperationResponse_bundler_payment_responses = md_UserOperationResponse.Fields().ByName("bundler_payment_responses")
	fd_UserOperationResponse_execution_gas_used = md_UserOperationResponse.Fields().ByName("execution_gas_used")
	fd_UserOperationResponse_execution_responses = md_UserOperationResponse.Fields().ByName("execution_responses")
}

var _ protoreflect.Message = (*fastReflection_UserOperationResponse)(nil)

type fastReflection_UserOperationResponse UserOperationResponse

func (x *UserOperationResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UserOperationResponse)(x)
}

func (x *UserOperationResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_accounts_v1_account_abstraction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UserOperationResponse_messageType fastReflection_UserOperationResponse_messageType
var _ protoreflect.MessageType = fastReflection_UserOperationResponse_messageType{}

type fastReflection_UserOperationResponse_messageType struct{}

func (x fastReflection_UserOperationResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UserOperationResponse)(nil)
}
func (x fastReflection_UserOperationResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_UserOperationResponse)
}
func (x fastReflection_UserOperationResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UserOperationResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UserOperationResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_UserOperationResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UserOperationResponse) Type() protoreflect.MessageType {
	return _fastReflection_UserOperationResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UserOperationResponse) New() protoreflect.Message {
	return new(fastReflection_UserOperationResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UserOperationResponse) Interface() protoreflect.ProtoMessage {
	return (*UserOperationResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UserOperationResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AuthenticationGasUsed != uint64(0) {
		value := protoreflect.ValueOfUint64(x.AuthenticationGasUsed)
		if !f(fd_UserOperationResponse_authentication_gas_used, value) {
			return
		}
	}
	if x.BundlerPaymentGasUsed != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BundlerPaymentGasUsed)
		if !f(fd_UserOperationResponse_bundler_payment_gas_used, value) {
			return
		}
	}
	if len(x.BundlerPaymentResponses) != 0 {
		value := protoreflect.ValueOfList(&_UserOperationResponse_3_list{list: &x.BundlerPaymentResponses})
		if !f(fd_UserOperationResponse_bundler_payment_responses, value) {
			return
		}
	}
	if x.ExecutionGasUsed != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ExecutionGasUsed)
		if !f(fd_UserOperationResponse_execution_gas_used, value) {
			return
		}
	}
	if len(x.ExecutionResponses) != 0 {
		value := protoreflect.ValueOfList(&_UserOperationResponse_5_list{list: &x.ExecutionResponses})
		if !f(fd_UserOperationResponse_execution_responses, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UserOperationResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.accounts.v1.UserOperationResponse.authentication_gas_used":
		return x.AuthenticationGasUsed != uint64(0)
	case "cosmos.accounts.v1.UserOperationResponse.bundler_payment_gas_used":
		return x.BundlerPaymentGasUsed != uint64(0)
	case "cosmos.accounts.v1.UserOperationResponse.bundler_payment_responses":
		return len(x.BundlerPaymentResponses) != 0
	case "cosmos.accounts.v1.UserOperationResponse.execution_gas_used":
		return x.ExecutionGasUsed != uint64(0)
	case "cosmos.accounts.v1.UserOperationResponse.execution_responses":
		return len(x.ExecutionResponses) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.v1.UserOperationResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.v1.UserOperationResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserOperationResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.accounts.v1.UserOperationResponse.authentication_gas_used":
		x.AuthenticationGasUsed = uint64(0)
	case "cosmos.accounts.v1.UserOperationResponse.bundler_payment_gas_used":
		x.BundlerPaymentGasUsed = uint64(0)
	case "cosmos.accounts.v1.UserOperationResponse.bundler_payment_responses":
		x.BundlerPaymentResponses = nil
	case "cosmos.accounts.v1.UserOperationResponse.execution_gas_used":
		x.ExecutionGasUsed = uint64(0)
	case "cosmos.accounts.v1.UserOperationResponse.execution_responses":
		x.ExecutionResponses = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.v1.UserOperationResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.v1.UserOperationResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UserOperationResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.accounts.v1.UserOperationResponse.authentication_gas_used":
		value := x.AuthenticationGasUsed
		return protoreflect.ValueOfUint64(value)
	case "cosmos.accounts.v1.UserOperationResponse.bundler_payment_gas_used":
		value := x.BundlerPaymentGasUsed
		return protoreflect.ValueOfUint64(value)
	case "cosmos.accounts.v1.UserOperationResponse.bundler_payment_responses":
		if len(x.BundlerPaymentResponses) == 0 {
			return protoreflect.ValueOfList(&_UserOperationResponse_3_list{})
		}
		listValue := &_UserOperationResponse_3_list{list: &x.BundlerPaymentResponses}
		return protoreflect.ValueOfList(listValue)
	case "cosmos.accounts.v1.UserOperationResponse.execution_gas_used":
		value := x.ExecutionGasUsed
		return protoreflect.ValueOfUint64(value)
	case "cosmos.accounts.v1.UserOperationResponse.execution_responses":
		if len(x.ExecutionResponses) == 0 {
			return protoreflect.ValueOfList(&_UserOperationResponse_5_list{})
		}
		listValue := &_UserOperationResponse_5_list{list: &x.ExecutionResponses}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.v1.UserOperationResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.v1.UserOperationResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserOperationResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.accounts.v1.UserOperationResponse.authentication_gas_used":
		x.AuthenticationGasUsed = value.Uint()
	case "cosmos.accounts.v1.UserOperationResponse.bundler_payment_gas_used":
		x.BundlerPaymentGasUsed = value.Uint()
	case "cosmos.accounts.v1.UserOperationResponse.bundler_payment_responses":
		lv := value.List()
		clv := lv.(*_UserOperationResponse_3_list)
		x.BundlerPaymentResponses = *clv.list
	case "cosmos.accounts.v1.UserOperationResponse.execution_gas_used":
		x.ExecutionGasUsed = value.Uint()
	case "cosmos.accounts.v1.UserOperationResponse.execution_responses":
		lv := value.List()
		clv := lv.(*_UserOperationResponse_5_list)
		x.ExecutionResponses = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.v1.UserOperationResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.v1.UserOperationResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserOperationResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.accounts.v1.UserOperationResponse.bundler_payment_responses":
		if x.BundlerPaymentResponses == nil {
			x.BundlerPaymentResponses = []*anypb.Any{}
		}
		value := &_UserOperationResponse_3_list{list: &x.BundlerPaymentResponses}
		return protoreflect.ValueOfList(value)
	case "cosmos.accounts.v1.UserOperationResponse.execution_responses":
		if x.ExecutionResponses == nil {
			x.ExecutionResponses = []*anypb.Any{}
		}
		value := &_UserOperationResponse_5_list{list: &x.ExecutionResponses}
		return protoreflect.ValueOfList(value)
	case "cosmos.accounts.v1.UserOperationResponse.authentication_gas_used":
		panic(fmt.Errorf("field authentication_gas_used of message cosmos.accounts.v1.UserOperationResponse is not mutable"))
	case "cosmos.accounts.v1.UserOperationResponse.bundler_payment_gas_used":
		panic(fmt.Errorf("field bundler_payment_gas_used of message cosmos.accounts.v1.UserOperationResponse is not mutable"))
	case "cosmos.accounts.v1.UserOperationResponse.execution_gas_used":
		panic(fmt.Errorf("field execution_gas_used of message cosmos.accounts.v1.UserOperationResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.v1.UserOperationResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.v1.UserOperationResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UserOperationResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.accounts.v1.UserOperationResponse.authentication_gas_used":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.accounts.v1.UserOperationResponse.bundler_payment_gas_used":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.accounts.v1.UserOperationResponse.bundler_payment_responses":
		list := []*anypb.Any{}
		return protoreflect.ValueOfList(&_UserOperationResponse_3_list{list: &list})
	case "cosmos.accounts.v1.UserOperationResponse.execution_gas_used":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.accounts.v1.UserOperationResponse.execution_responses":
		list := []*anypb.Any{}
		return protoreflect.ValueOfList(&_UserOperationResponse_5_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.v1.UserOperationResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.v1.UserOperationResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UserOperationResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.accounts.v1.UserOperationResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UserOperationResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserOperationResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UserOperationResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UserOperationResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UserOperationResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AuthenticationGasUsed != 0 {
			n += 1 + runtime.Sov(uint64(x.AuthenticationGasUsed))
		}
		if x.BundlerPaymentGasUsed != 0 {
			n += 1 + runtime.Sov(uint64(x.BundlerPaymentGasUsed))
		}
		if len(x.BundlerPaymentResponses) > 0 {
			for _, e := range x.BundlerPaymentResponses {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.ExecutionGasUsed != 0 {
			n += 1 + runtime.Sov(uint64(x.ExecutionGasUsed))
		}
		if len(x.ExecutionResponses) > 0 {
			for _, e := range x.ExecutionResponses {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UserOperationResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ExecutionResponses) > 0 {
			for iNdEx := len(x.ExecutionResponses) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ExecutionResponses[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2a
			}
		}
		if x.ExecutionGasUsed != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ExecutionGasUsed))
			i--
			dAtA[i] = 0x20
		}
		if len(x.BundlerPaymentResponses) > 0 {
			for iNdEx := len(x.BundlerPaymentResponses) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.BundlerPaymentResponses[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if x.BundlerPaymentGasUsed != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BundlerPaymentGasUsed))
			i--
			dAtA[i] = 0x10
		}
		if x.AuthenticationGasUsed != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.AuthenticationGasUsed))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UserOperationResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UserOperationResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UserOperationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AuthenticationGasUsed", wireType)
				}
				x.AuthenticationGasUsed = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.AuthenticationGasUsed |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BundlerPaymentGasUsed", wireType)
				}
				x.BundlerPaymentGasUsed = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BundlerPaymentGasUsed |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BundlerPaymentResponses", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BundlerPaymentResponses = append(x.BundlerPaymentResponses, &anypb.Any{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BundlerPaymentResponses[len(x.BundlerPaymentResponses)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExecutionGasUsed", wireType)
				}
				x.ExecutionGasUsed = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ExecutionGasUsed |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExecutionResponses", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExecutionResponses = append(x.ExecutionResponses, &anypb.Any{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ExecutionResponses[len(x.ExecutionResponses)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: cosmos/accounts/v1/account_abstraction.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UserOperation defines the type used to define a state transition that
// an account wants to make.
type UserOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sender defines the account that is sending the UserOperation.
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// authentication_method defines the authentication strategy the account wants to use.
	// since accounts can have multiple authentication methods, this field is used to
	// instruct the account on what auth method to use.
	AuthenticationMethod string `protobuf:"bytes,2,opt,name=authentication_method,json=authenticationMethod,proto3" json:"authentication_method,omitempty"`
	// authentication_data defines the authentication data associated with the authentication method.
	// It is the account implementer duty to assess that the UserOperation is properly signed.
	AuthenticationData []byte `protobuf:"bytes,3,opt,name=authentication_data,json=authenticationData,proto3" json:"authentication_data,omitempty"`
	// sequence defines the sequence number of the account, the authentication method might require this
	// to ensure non-replayability.
	Sequence uint64 `protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// authentication_gas_limit expresses the gas limit to be used for the authentication part of the
	// UserOperation.
	AuthenticationGasLimit uint64 `protobuf:"varint,5,opt,name=authentication_gas_limit,json=authenticationGasLimit,proto3" json:"authentication_gas_limit,omitempty"`
	// bundler_payment_messages expresses a list of messages that the account
	// executes to pay the bundler for submitting the UserOperation.
	// It can be empty if the bundler does not need any form of payment,
	// the handshake for submitting the UserOperation might have happened off-chain.
	// Bundlers and accounts are free to use any form of payment, in fact the payment can
	// either be empty or be expressed as:
	// - NFT payment
	// - IBC Token payment.
	// - Payment through delegations.
	BundlerPaymentMessages []*anypb.Any `protobuf:"bytes,6,rep,name=bundler_payment_messages,json=bundlerPaymentMessages,proto3" json:"bundler_payment_messages,omitempty"`
	// bundler_payment_gas_limit defines the gas limit to be used for the bundler payment.
	// This ensures that, since the bundler executes a list of UserOperations and there needs to
	// be minimal trust between bundler and UserOperation sender, the sender cannot consume
	// the whole bundle gas.
	BundlerPaymentGasLimit uint64 `protobuf:"varint,7,opt,name=bundler_payment_gas_limit,json=bundlerPaymentGasLimit,proto3" json:"bundler_payment_gas_limit,omitempty"`
	// execution_messages expresses a list of messages that the account wants to execute.
	// This concretely is the intent of the transaction expressed as a UserOperation.
	ExecutionMessages []*anypb.Any `protobuf:"bytes,8,rep,name=execution_messages,json=executionMessages,proto3" json:"execution_messages,omitempty"`
	// execution_gas_limit defines the gas limit to be used for the execution of the UserOperation's
	// execution messages.
	ExecutionGasLimit uint64 `protobuf:"varint,9,opt,name=execution_gas_limit,json=executionGasLimit,proto3" json:"execution_gas_limit,omitempty"`
}

func (x *UserOperation) Reset() {
	*x = UserOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_accounts_v1_account_abstraction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOperation) ProtoMessage() {}

// Deprecated: Use UserOperation.ProtoReflect.Descriptor instead.
func (*UserOperation) Descriptor() ([]byte, []int) {
	return file_cosmos_accounts_v1_account_abstraction_proto_rawDescGZIP(), []int{0}
}

func (x *UserOperation) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *UserOperation) GetAuthenticationMethod() string {
	if x != nil {
		return x.AuthenticationMethod
	}
	return ""
}

func (x *UserOperation) GetAuthenticationData() []byte {
	if x != nil {
		return x.AuthenticationData
	}
	return nil
}

func (x *UserOperation) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *UserOperation) GetAuthenticationGasLimit() uint64 {
	if x != nil {
		return x.AuthenticationGasLimit
	}
	return 0
}

func (x *UserOperation) GetBundlerPaymentMessages() []*anypb.Any {
	if x != nil {
		return x.BundlerPaymentMessages
	}
	return nil
}

func (x *UserOperation) GetBundlerPaymentGasLimit() uint64 {
	if x != nil {
		return x.BundlerPaymentGasLimit
	}
	return 0
}

func (x *UserOperation) GetExecutionMessages() []*anypb.Any {
	if x != nil {
		return x.ExecutionMessages
	}
	return nil
}

func (x *UserOperation) GetExecutionGasLimit() uint64 {
	if x != nil {
		return x.ExecutionGasLimit
	}
	return 0
}

// UserOperationResponse defines the response of a UserOperation.
type UserOperationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authentication_gas_used defines the gas used for the authentication part of the UserOperation.
	AuthenticationGasUsed uint64 `protobuf:"varint,1,opt,name=authentication_gas_used,json=authenticationGasUsed,proto3" json:"authentication_gas_used,omitempty"`
	// bundler_payment_gas_used defines the gas used for the bundler payment part of the UserOperation.
	BundlerPaymentGasUsed uint64 `protobuf:"varint,2,opt,name=bundler_payment_gas_used,json=bundlerPaymentGasUsed,proto3" json:"bundler_payment_gas_used,omitempty"`
	// bundler_payment_responses defines the responses of the bundler payment messages.
	// It can be empty if the bundler does not need any form of payment.
	BundlerPaymentResponses []*anypb.Any `protobuf:"bytes,3,rep,name=bundler_payment_responses,json=bundlerPaymentResponses,proto3" json:"bundler_payment_responses,omitempty"`
	// execution_gas_used defines the gas used for the execution part of the UserOperation.
	ExecutionGasUsed uint64 `protobuf:"varint,4,opt,name=execution_gas_used,json=executionGasUsed,proto3" json:"execution_gas_used,omitempty"`
	// execution_responses defines the responses of the execution messages.
	ExecutionResponses []*anypb.Any `protobuf:"bytes,5,rep,name=execution_responses,json=executionResponses,proto3" json:"execution_responses,omitempty"`
}

func (x *UserOperationResponse) Reset() {
	*x = UserOperationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_accounts_v1_account_abstraction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOperationResponse) ProtoMessage() {}

// Deprecated: Use UserOperationResponse.ProtoReflect.Descriptor instead.
func (*UserOperationResponse) Descriptor() ([]byte, []int) {
	return file_cosmos_accounts_v1_account_abstraction_proto_rawDescGZIP(), []int{1}
}

func (x *UserOperationResponse) GetAuthenticationGasUsed() uint64 {
	if x != nil {
		return x.AuthenticationGasUsed
	}
	return 0
}

func (x *UserOperationResponse) GetBundlerPaymentGasUsed() uint64 {
	if x != nil {
		return x.BundlerPaymentGasUsed
	}
	return 0
}

func (x *UserOperationResponse) GetBundlerPaymentResponses() []*anypb.Any {
	if x != nil {
		return x.BundlerPaymentResponses
	}
	return nil
}

func (x *UserOperationResponse) GetExecutionGasUsed() uint64 {
	if x != nil {
		return x.ExecutionGasUsed
	}
	return 0
}

func (x *UserOperationResponse) GetExecutionResponses() []*anypb.Any {
	if x != nil {
		return x.ExecutionResponses
	}
	return nil
}

var File_cosmos_accounts_v1_account_abstraction_proto protoreflect.FileDescriptor

var file_cosmos_accounts_v1_account_abstraction_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x62, 0x73,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe3, 0x03,
	0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2f, 0x0a, 0x13,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x61, 0x73, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x73, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x4e, 0x0a, 0x18, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x16, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x43,
	0x0a, 0x12, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x73, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0xcf, 0x02, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x17, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61,
	0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x50,
	0x0a, 0x19, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x17, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x61,
	0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x45,
	0x0a, 0x13, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x12, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x42, 0xcb, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x42, 0x17, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31,
	0x3b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x41,
	0x58, 0xaa, 0x02, 0x12, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x12, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1e, 0x43, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x43,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cosmos_accounts_v1_account_abstraction_proto_rawDescOnce sync.Once
	file_cosmos_accounts_v1_account_abstraction_proto_rawDescData = file_cosmos_accounts_v1_account_abstraction_proto_rawDesc
)

func file_cosmos_accounts_v1_account_abstraction_proto_rawDescGZIP() []byte {
	file_cosmos_accounts_v1_account_abstraction_proto_rawDescOnce.Do(func() {
		file_cosmos_accounts_v1_account_abstraction_proto_rawDescData = protoimpl.X.CompressGZIP(file_cosmos_accounts_v1_account_abstraction_proto_rawDescData)
	})
	return file_cosmos_accounts_v1_account_abstraction_proto_rawDescData
}

var file_cosmos_accounts_v1_account_abstraction_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_cosmos_accounts_v1_account_abstraction_proto_goTypes = []interface{}{
	(*UserOperation)(nil),         // 0: cosmos.accounts.v1.UserOperation
	(*UserOperationResponse)(nil), // 1: cosmos.accounts.v1.UserOperationResponse
	(*anypb.Any)(nil),             // 2: google.protobuf.Any
}
var file_cosmos_accounts_v1_account_abstraction_proto_depIdxs = []int32{
	2, // 0: cosmos.accounts.v1.UserOperation.bundler_payment_messages:type_name -> google.protobuf.Any
	2, // 1: cosmos.accounts.v1.UserOperation.execution_messages:type_name -> google.protobuf.Any
	2, // 2: cosmos.accounts.v1.UserOperationResponse.bundler_payment_responses:type_name -> google.protobuf.Any
	2, // 3: cosmos.accounts.v1.UserOperationResponse.execution_responses:type_name -> google.protobuf.Any
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_cosmos_accounts_v1_account_abstraction_proto_init() }
func file_cosmos_accounts_v1_account_abstraction_proto_init() {
	if File_cosmos_accounts_v1_account_abstraction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cosmos_accounts_v1_account_abstraction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_accounts_v1_account_abstraction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOperationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cosmos_accounts_v1_account_abstraction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cosmos_accounts_v1_account_abstraction_proto_goTypes,
		DependencyIndexes: file_cosmos_accounts_v1_account_abstraction_proto_depIdxs,
		MessageInfos:      file_cosmos_accounts_v1_account_abstraction_proto_msgTypes,
	}.Build()
	File_cosmos_accounts_v1_account_abstraction_proto = out.File
	file_cosmos_accounts_v1_account_abstraction_proto_rawDesc = nil
	file_cosmos_accounts_v1_account_abstraction_proto_goTypes = nil
	file_cosmos_accounts_v1_account_abstraction_proto_depIdxs = nil
}
