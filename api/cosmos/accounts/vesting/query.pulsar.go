// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package vesting

import (
	v1beta1 "cosmossdk.io/api/cosmos/base/v1beta1"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_QueryVestingAccountInfoRequest protoreflect.MessageDescriptor
)

func init() {
	file_cosmos_accounts_vesting_query_proto_init()
	md_QueryVestingAccountInfoRequest = File_cosmos_accounts_vesting_query_proto.Messages().ByName("QueryVestingAccountInfoRequest")
}

var _ protoreflect.Message = (*fastReflection_QueryVestingAccountInfoRequest)(nil)

type fastReflection_QueryVestingAccountInfoRequest QueryVestingAccountInfoRequest

func (x *QueryVestingAccountInfoRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryVestingAccountInfoRequest)(x)
}

func (x *QueryVestingAccountInfoRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_accounts_vesting_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryVestingAccountInfoRequest_messageType fastReflection_QueryVestingAccountInfoRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryVestingAccountInfoRequest_messageType{}

type fastReflection_QueryVestingAccountInfoRequest_messageType struct{}

func (x fastReflection_QueryVestingAccountInfoRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryVestingAccountInfoRequest)(nil)
}
func (x fastReflection_QueryVestingAccountInfoRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryVestingAccountInfoRequest)
}
func (x fastReflection_QueryVestingAccountInfoRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryVestingAccountInfoRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryVestingAccountInfoRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryVestingAccountInfoRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryVestingAccountInfoRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryVestingAccountInfoRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryVestingAccountInfoRequest) New() protoreflect.Message {
	return new(fastReflection_QueryVestingAccountInfoRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryVestingAccountInfoRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryVestingAccountInfoRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryVestingAccountInfoRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryVestingAccountInfoRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingAccountInfoRequest"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingAccountInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryVestingAccountInfoRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingAccountInfoRequest"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingAccountInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryVestingAccountInfoRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingAccountInfoRequest"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingAccountInfoRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryVestingAccountInfoRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingAccountInfoRequest"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingAccountInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryVestingAccountInfoRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingAccountInfoRequest"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingAccountInfoRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryVestingAccountInfoRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingAccountInfoRequest"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingAccountInfoRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryVestingAccountInfoRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.accounts.vesting.QueryVestingAccountInfoRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryVestingAccountInfoRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryVestingAccountInfoRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryVestingAccountInfoRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryVestingAccountInfoRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryVestingAccountInfoRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryVestingAccountInfoRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryVestingAccountInfoRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryVestingAccountInfoRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryVestingAccountInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryVestingAccountInfoResponse_1_list)(nil)

type _QueryVestingAccountInfoResponse_1_list struct {
	list *[]*v1beta1.Coin
}

func (x *_QueryVestingAccountInfoResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryVestingAccountInfoResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryVestingAccountInfoResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_QueryVestingAccountInfoResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryVestingAccountInfoResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryVestingAccountInfoResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryVestingAccountInfoResponse_1_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryVestingAccountInfoResponse_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_QueryVestingAccountInfoResponse_2_list)(nil)

type _QueryVestingAccountInfoResponse_2_list struct {
	list *[]*v1beta1.Coin
}

func (x *_QueryVestingAccountInfoResponse_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryVestingAccountInfoResponse_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryVestingAccountInfoResponse_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_QueryVestingAccountInfoResponse_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryVestingAccountInfoResponse_2_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryVestingAccountInfoResponse_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryVestingAccountInfoResponse_2_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryVestingAccountInfoResponse_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_QueryVestingAccountInfoResponse_3_list)(nil)

type _QueryVestingAccountInfoResponse_3_list struct {
	list *[]*v1beta1.Coin
}

func (x *_QueryVestingAccountInfoResponse_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryVestingAccountInfoResponse_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryVestingAccountInfoResponse_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_QueryVestingAccountInfoResponse_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryVestingAccountInfoResponse_3_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryVestingAccountInfoResponse_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryVestingAccountInfoResponse_3_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryVestingAccountInfoResponse_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_QueryVestingAccountInfoResponse_6_list)(nil)

type _QueryVestingAccountInfoResponse_6_list struct {
	list *[]*v1beta1.Coin
}

func (x *_QueryVestingAccountInfoResponse_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryVestingAccountInfoResponse_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryVestingAccountInfoResponse_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_QueryVestingAccountInfoResponse_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryVestingAccountInfoResponse_6_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryVestingAccountInfoResponse_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryVestingAccountInfoResponse_6_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryVestingAccountInfoResponse_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_QueryVestingAccountInfoResponse_7_list)(nil)

type _QueryVestingAccountInfoResponse_7_list struct {
	list *[]*v1beta1.Coin
}

func (x *_QueryVestingAccountInfoResponse_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryVestingAccountInfoResponse_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryVestingAccountInfoResponse_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_QueryVestingAccountInfoResponse_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryVestingAccountInfoResponse_7_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryVestingAccountInfoResponse_7_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryVestingAccountInfoResponse_7_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryVestingAccountInfoResponse_7_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryVestingAccountInfoResponse                   protoreflect.MessageDescriptor
	fd_QueryVestingAccountInfoResponse_original_vesting  protoreflect.FieldDescriptor
	fd_QueryVestingAccountInfoResponse_delegated_free    protoreflect.FieldDescriptor
	fd_QueryVestingAccountInfoResponse_delegated_vesting protoreflect.FieldDescriptor
	fd_QueryVestingAccountInfoResponse_start_time        protoreflect.FieldDescriptor
	fd_QueryVestingAccountInfoResponse_end_time          protoreflect.FieldDescriptor
	fd_QueryVestingAccountInfoResponse_vesting_coins     protoreflect.FieldDescriptor
	fd_QueryVestingAccountInfoResponse_vested_vesting    protoreflect.FieldDescriptor
	fd_QueryVestingAccountInfoResponse_owner             protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_accounts_vesting_query_proto_init()
	md_QueryVestingAccountInfoResponse = File_cosmos_accounts_vesting_query_proto.Messages().ByName("QueryVestingAccountInfoResponse")
	fd_QueryVestingAccountInfoResponse_original_vesting = md_QueryVestingAccountInfoResponse.Fields().ByName("original_vesting")
	fd_QueryVestingAccountInfoResponse_delegated_free = md_QueryVestingAccountInfoResponse.Fields().ByName("delegated_free")
	fd_QueryVestingAccountInfoResponse_delegated_vesting = md_QueryVestingAccountInfoResponse.Fields().ByName("delegated_vesting")
	fd_QueryVestingAccountInfoResponse_start_time = md_QueryVestingAccountInfoResponse.Fields().ByName("start_time")
	fd_QueryVestingAccountInfoResponse_end_time = md_QueryVestingAccountInfoResponse.Fields().ByName("end_time")
	fd_QueryVestingAccountInfoResponse_vesting_coins = md_QueryVestingAccountInfoResponse.Fields().ByName("vesting_coins")
	fd_QueryVestingAccountInfoResponse_vested_vesting = md_QueryVestingAccountInfoResponse.Fields().ByName("vested_vesting")
	fd_QueryVestingAccountInfoResponse_owner = md_QueryVestingAccountInfoResponse.Fields().ByName("owner")
}

var _ protoreflect.Message = (*fastReflection_QueryVestingAccountInfoResponse)(nil)

type fastReflection_QueryVestingAccountInfoResponse QueryVestingAccountInfoResponse

func (x *QueryVestingAccountInfoResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryVestingAccountInfoResponse)(x)
}

func (x *QueryVestingAccountInfoResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_accounts_vesting_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryVestingAccountInfoResponse_messageType fastReflection_QueryVestingAccountInfoResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryVestingAccountInfoResponse_messageType{}

type fastReflection_QueryVestingAccountInfoResponse_messageType struct{}

func (x fastReflection_QueryVestingAccountInfoResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryVestingAccountInfoResponse)(nil)
}
func (x fastReflection_QueryVestingAccountInfoResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryVestingAccountInfoResponse)
}
func (x fastReflection_QueryVestingAccountInfoResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryVestingAccountInfoResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryVestingAccountInfoResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryVestingAccountInfoResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryVestingAccountInfoResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryVestingAccountInfoResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryVestingAccountInfoResponse) New() protoreflect.Message {
	return new(fastReflection_QueryVestingAccountInfoResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryVestingAccountInfoResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryVestingAccountInfoResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryVestingAccountInfoResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.OriginalVesting) != 0 {
		value := protoreflect.ValueOfList(&_QueryVestingAccountInfoResponse_1_list{list: &x.OriginalVesting})
		if !f(fd_QueryVestingAccountInfoResponse_original_vesting, value) {
			return
		}
	}
	if len(x.DelegatedFree) != 0 {
		value := protoreflect.ValueOfList(&_QueryVestingAccountInfoResponse_2_list{list: &x.DelegatedFree})
		if !f(fd_QueryVestingAccountInfoResponse_delegated_free, value) {
			return
		}
	}
	if len(x.DelegatedVesting) != 0 {
		value := protoreflect.ValueOfList(&_QueryVestingAccountInfoResponse_3_list{list: &x.DelegatedVesting})
		if !f(fd_QueryVestingAccountInfoResponse_delegated_vesting, value) {
			return
		}
	}
	if x.StartTime != nil {
		value := protoreflect.ValueOfMessage(x.StartTime.ProtoReflect())
		if !f(fd_QueryVestingAccountInfoResponse_start_time, value) {
			return
		}
	}
	if x.EndTime != nil {
		value := protoreflect.ValueOfMessage(x.EndTime.ProtoReflect())
		if !f(fd_QueryVestingAccountInfoResponse_end_time, value) {
			return
		}
	}
	if len(x.VestingCoins) != 0 {
		value := protoreflect.ValueOfList(&_QueryVestingAccountInfoResponse_6_list{list: &x.VestingCoins})
		if !f(fd_QueryVestingAccountInfoResponse_vesting_coins, value) {
			return
		}
	}
	if len(x.VestedVesting) != 0 {
		value := protoreflect.ValueOfList(&_QueryVestingAccountInfoResponse_7_list{list: &x.VestedVesting})
		if !f(fd_QueryVestingAccountInfoResponse_vested_vesting, value) {
			return
		}
	}
	if x.Owner != "" {
		value := protoreflect.ValueOfString(x.Owner)
		if !f(fd_QueryVestingAccountInfoResponse_owner, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryVestingAccountInfoResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.original_vesting":
		return len(x.OriginalVesting) != 0
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.delegated_free":
		return len(x.DelegatedFree) != 0
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.delegated_vesting":
		return len(x.DelegatedVesting) != 0
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.start_time":
		return x.StartTime != nil
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.end_time":
		return x.EndTime != nil
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.vesting_coins":
		return len(x.VestingCoins) != 0
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.vested_vesting":
		return len(x.VestedVesting) != 0
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.owner":
		return x.Owner != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingAccountInfoResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingAccountInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryVestingAccountInfoResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.original_vesting":
		x.OriginalVesting = nil
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.delegated_free":
		x.DelegatedFree = nil
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.delegated_vesting":
		x.DelegatedVesting = nil
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.start_time":
		x.StartTime = nil
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.end_time":
		x.EndTime = nil
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.vesting_coins":
		x.VestingCoins = nil
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.vested_vesting":
		x.VestedVesting = nil
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.owner":
		x.Owner = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingAccountInfoResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingAccountInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryVestingAccountInfoResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.original_vesting":
		if len(x.OriginalVesting) == 0 {
			return protoreflect.ValueOfList(&_QueryVestingAccountInfoResponse_1_list{})
		}
		listValue := &_QueryVestingAccountInfoResponse_1_list{list: &x.OriginalVesting}
		return protoreflect.ValueOfList(listValue)
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.delegated_free":
		if len(x.DelegatedFree) == 0 {
			return protoreflect.ValueOfList(&_QueryVestingAccountInfoResponse_2_list{})
		}
		listValue := &_QueryVestingAccountInfoResponse_2_list{list: &x.DelegatedFree}
		return protoreflect.ValueOfList(listValue)
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.delegated_vesting":
		if len(x.DelegatedVesting) == 0 {
			return protoreflect.ValueOfList(&_QueryVestingAccountInfoResponse_3_list{})
		}
		listValue := &_QueryVestingAccountInfoResponse_3_list{list: &x.DelegatedVesting}
		return protoreflect.ValueOfList(listValue)
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.start_time":
		value := x.StartTime
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.end_time":
		value := x.EndTime
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.vesting_coins":
		if len(x.VestingCoins) == 0 {
			return protoreflect.ValueOfList(&_QueryVestingAccountInfoResponse_6_list{})
		}
		listValue := &_QueryVestingAccountInfoResponse_6_list{list: &x.VestingCoins}
		return protoreflect.ValueOfList(listValue)
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.vested_vesting":
		if len(x.VestedVesting) == 0 {
			return protoreflect.ValueOfList(&_QueryVestingAccountInfoResponse_7_list{})
		}
		listValue := &_QueryVestingAccountInfoResponse_7_list{list: &x.VestedVesting}
		return protoreflect.ValueOfList(listValue)
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.owner":
		value := x.Owner
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingAccountInfoResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingAccountInfoResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryVestingAccountInfoResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.original_vesting":
		lv := value.List()
		clv := lv.(*_QueryVestingAccountInfoResponse_1_list)
		x.OriginalVesting = *clv.list
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.delegated_free":
		lv := value.List()
		clv := lv.(*_QueryVestingAccountInfoResponse_2_list)
		x.DelegatedFree = *clv.list
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.delegated_vesting":
		lv := value.List()
		clv := lv.(*_QueryVestingAccountInfoResponse_3_list)
		x.DelegatedVesting = *clv.list
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.start_time":
		x.StartTime = value.Message().Interface().(*timestamppb.Timestamp)
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.end_time":
		x.EndTime = value.Message().Interface().(*timestamppb.Timestamp)
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.vesting_coins":
		lv := value.List()
		clv := lv.(*_QueryVestingAccountInfoResponse_6_list)
		x.VestingCoins = *clv.list
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.vested_vesting":
		lv := value.List()
		clv := lv.(*_QueryVestingAccountInfoResponse_7_list)
		x.VestedVesting = *clv.list
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.owner":
		x.Owner = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingAccountInfoResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingAccountInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryVestingAccountInfoResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.original_vesting":
		if x.OriginalVesting == nil {
			x.OriginalVesting = []*v1beta1.Coin{}
		}
		value := &_QueryVestingAccountInfoResponse_1_list{list: &x.OriginalVesting}
		return protoreflect.ValueOfList(value)
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.delegated_free":
		if x.DelegatedFree == nil {
			x.DelegatedFree = []*v1beta1.Coin{}
		}
		value := &_QueryVestingAccountInfoResponse_2_list{list: &x.DelegatedFree}
		return protoreflect.ValueOfList(value)
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.delegated_vesting":
		if x.DelegatedVesting == nil {
			x.DelegatedVesting = []*v1beta1.Coin{}
		}
		value := &_QueryVestingAccountInfoResponse_3_list{list: &x.DelegatedVesting}
		return protoreflect.ValueOfList(value)
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.start_time":
		if x.StartTime == nil {
			x.StartTime = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.StartTime.ProtoReflect())
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.end_time":
		if x.EndTime == nil {
			x.EndTime = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.EndTime.ProtoReflect())
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.vesting_coins":
		if x.VestingCoins == nil {
			x.VestingCoins = []*v1beta1.Coin{}
		}
		value := &_QueryVestingAccountInfoResponse_6_list{list: &x.VestingCoins}
		return protoreflect.ValueOfList(value)
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.vested_vesting":
		if x.VestedVesting == nil {
			x.VestedVesting = []*v1beta1.Coin{}
		}
		value := &_QueryVestingAccountInfoResponse_7_list{list: &x.VestedVesting}
		return protoreflect.ValueOfList(value)
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.owner":
		panic(fmt.Errorf("field owner of message cosmos.accounts.vesting.QueryVestingAccountInfoResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingAccountInfoResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingAccountInfoResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryVestingAccountInfoResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.original_vesting":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_QueryVestingAccountInfoResponse_1_list{list: &list})
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.delegated_free":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_QueryVestingAccountInfoResponse_2_list{list: &list})
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.delegated_vesting":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_QueryVestingAccountInfoResponse_3_list{list: &list})
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.start_time":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.end_time":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.vesting_coins":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_QueryVestingAccountInfoResponse_6_list{list: &list})
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.vested_vesting":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_QueryVestingAccountInfoResponse_7_list{list: &list})
	case "cosmos.accounts.vesting.QueryVestingAccountInfoResponse.owner":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingAccountInfoResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingAccountInfoResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryVestingAccountInfoResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.accounts.vesting.QueryVestingAccountInfoResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryVestingAccountInfoResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryVestingAccountInfoResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryVestingAccountInfoResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryVestingAccountInfoResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryVestingAccountInfoResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.OriginalVesting) > 0 {
			for _, e := range x.OriginalVesting {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.DelegatedFree) > 0 {
			for _, e := range x.DelegatedFree {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.DelegatedVesting) > 0 {
			for _, e := range x.DelegatedVesting {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.StartTime != nil {
			l = options.Size(x.StartTime)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.EndTime != nil {
			l = options.Size(x.EndTime)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.VestingCoins) > 0 {
			for _, e := range x.VestingCoins {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.VestedVesting) > 0 {
			for _, e := range x.VestedVesting {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Owner)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryVestingAccountInfoResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Owner) > 0 {
			i -= len(x.Owner)
			copy(dAtA[i:], x.Owner)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Owner)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.VestedVesting) > 0 {
			for iNdEx := len(x.VestedVesting) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.VestedVesting[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.VestingCoins) > 0 {
			for iNdEx := len(x.VestingCoins) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.VestingCoins[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if x.EndTime != nil {
			encoded, err := options.Marshal(x.EndTime)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if x.StartTime != nil {
			encoded, err := options.Marshal(x.StartTime)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.DelegatedVesting) > 0 {
			for iNdEx := len(x.DelegatedVesting) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.DelegatedVesting[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.DelegatedFree) > 0 {
			for iNdEx := len(x.DelegatedFree) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.DelegatedFree[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.OriginalVesting) > 0 {
			for iNdEx := len(x.OriginalVesting) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OriginalVesting[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryVestingAccountInfoResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryVestingAccountInfoResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryVestingAccountInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OriginalVesting", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OriginalVesting = append(x.OriginalVesting, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OriginalVesting[len(x.OriginalVesting)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegatedFree", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelegatedFree = append(x.DelegatedFree, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DelegatedFree[len(x.DelegatedFree)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegatedVesting", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelegatedVesting = append(x.DelegatedVesting, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DelegatedVesting[len(x.DelegatedVesting)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.StartTime == nil {
					x.StartTime = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StartTime); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.EndTime == nil {
					x.EndTime = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.EndTime); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VestingCoins", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VestingCoins = append(x.VestingCoins, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VestingCoins[len(x.VestingCoins)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VestedVesting", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VestedVesting = append(x.VestedVesting, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VestedVesting[len(x.VestedVesting)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Owner = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryVestingPeriodsRequest protoreflect.MessageDescriptor
)

func init() {
	file_cosmos_accounts_vesting_query_proto_init()
	md_QueryVestingPeriodsRequest = File_cosmos_accounts_vesting_query_proto.Messages().ByName("QueryVestingPeriodsRequest")
}

var _ protoreflect.Message = (*fastReflection_QueryVestingPeriodsRequest)(nil)

type fastReflection_QueryVestingPeriodsRequest QueryVestingPeriodsRequest

func (x *QueryVestingPeriodsRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryVestingPeriodsRequest)(x)
}

func (x *QueryVestingPeriodsRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_accounts_vesting_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryVestingPeriodsRequest_messageType fastReflection_QueryVestingPeriodsRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryVestingPeriodsRequest_messageType{}

type fastReflection_QueryVestingPeriodsRequest_messageType struct{}

func (x fastReflection_QueryVestingPeriodsRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryVestingPeriodsRequest)(nil)
}
func (x fastReflection_QueryVestingPeriodsRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryVestingPeriodsRequest)
}
func (x fastReflection_QueryVestingPeriodsRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryVestingPeriodsRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryVestingPeriodsRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryVestingPeriodsRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryVestingPeriodsRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryVestingPeriodsRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryVestingPeriodsRequest) New() protoreflect.Message {
	return new(fastReflection_QueryVestingPeriodsRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryVestingPeriodsRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryVestingPeriodsRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryVestingPeriodsRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryVestingPeriodsRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingPeriodsRequest"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingPeriodsRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryVestingPeriodsRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingPeriodsRequest"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingPeriodsRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryVestingPeriodsRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingPeriodsRequest"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingPeriodsRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryVestingPeriodsRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingPeriodsRequest"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingPeriodsRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryVestingPeriodsRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingPeriodsRequest"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingPeriodsRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryVestingPeriodsRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingPeriodsRequest"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingPeriodsRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryVestingPeriodsRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.accounts.vesting.QueryVestingPeriodsRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryVestingPeriodsRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryVestingPeriodsRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryVestingPeriodsRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryVestingPeriodsRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryVestingPeriodsRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryVestingPeriodsRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryVestingPeriodsRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryVestingPeriodsRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryVestingPeriodsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryVestingPeriodsResponse_1_list)(nil)

type _QueryVestingPeriodsResponse_1_list struct {
	list *[]*Period
}

func (x *_QueryVestingPeriodsResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryVestingPeriodsResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryVestingPeriodsResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Period)
	(*x.list)[i] = concreteValue
}

func (x *_QueryVestingPeriodsResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Period)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryVestingPeriodsResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(Period)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryVestingPeriodsResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryVestingPeriodsResponse_1_list) NewElement() protoreflect.Value {
	v := new(Period)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryVestingPeriodsResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryVestingPeriodsResponse                 protoreflect.MessageDescriptor
	fd_QueryVestingPeriodsResponse_vesting_periods protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_accounts_vesting_query_proto_init()
	md_QueryVestingPeriodsResponse = File_cosmos_accounts_vesting_query_proto.Messages().ByName("QueryVestingPeriodsResponse")
	fd_QueryVestingPeriodsResponse_vesting_periods = md_QueryVestingPeriodsResponse.Fields().ByName("vesting_periods")
}

var _ protoreflect.Message = (*fastReflection_QueryVestingPeriodsResponse)(nil)

type fastReflection_QueryVestingPeriodsResponse QueryVestingPeriodsResponse

func (x *QueryVestingPeriodsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryVestingPeriodsResponse)(x)
}

func (x *QueryVestingPeriodsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_accounts_vesting_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryVestingPeriodsResponse_messageType fastReflection_QueryVestingPeriodsResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryVestingPeriodsResponse_messageType{}

type fastReflection_QueryVestingPeriodsResponse_messageType struct{}

func (x fastReflection_QueryVestingPeriodsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryVestingPeriodsResponse)(nil)
}
func (x fastReflection_QueryVestingPeriodsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryVestingPeriodsResponse)
}
func (x fastReflection_QueryVestingPeriodsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryVestingPeriodsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryVestingPeriodsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryVestingPeriodsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryVestingPeriodsResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryVestingPeriodsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryVestingPeriodsResponse) New() protoreflect.Message {
	return new(fastReflection_QueryVestingPeriodsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryVestingPeriodsResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryVestingPeriodsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryVestingPeriodsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.VestingPeriods) != 0 {
		value := protoreflect.ValueOfList(&_QueryVestingPeriodsResponse_1_list{list: &x.VestingPeriods})
		if !f(fd_QueryVestingPeriodsResponse_vesting_periods, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryVestingPeriodsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.accounts.vesting.QueryVestingPeriodsResponse.vesting_periods":
		return len(x.VestingPeriods) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingPeriodsResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingPeriodsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryVestingPeriodsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.accounts.vesting.QueryVestingPeriodsResponse.vesting_periods":
		x.VestingPeriods = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingPeriodsResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingPeriodsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryVestingPeriodsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.accounts.vesting.QueryVestingPeriodsResponse.vesting_periods":
		if len(x.VestingPeriods) == 0 {
			return protoreflect.ValueOfList(&_QueryVestingPeriodsResponse_1_list{})
		}
		listValue := &_QueryVestingPeriodsResponse_1_list{list: &x.VestingPeriods}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingPeriodsResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingPeriodsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryVestingPeriodsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.accounts.vesting.QueryVestingPeriodsResponse.vesting_periods":
		lv := value.List()
		clv := lv.(*_QueryVestingPeriodsResponse_1_list)
		x.VestingPeriods = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingPeriodsResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingPeriodsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryVestingPeriodsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.accounts.vesting.QueryVestingPeriodsResponse.vesting_periods":
		if x.VestingPeriods == nil {
			x.VestingPeriods = []*Period{}
		}
		value := &_QueryVestingPeriodsResponse_1_list{list: &x.VestingPeriods}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingPeriodsResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingPeriodsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryVestingPeriodsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.accounts.vesting.QueryVestingPeriodsResponse.vesting_periods":
		list := []*Period{}
		return protoreflect.ValueOfList(&_QueryVestingPeriodsResponse_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.accounts.vesting.QueryVestingPeriodsResponse"))
		}
		panic(fmt.Errorf("message cosmos.accounts.vesting.QueryVestingPeriodsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryVestingPeriodsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.accounts.vesting.QueryVestingPeriodsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryVestingPeriodsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryVestingPeriodsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryVestingPeriodsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryVestingPeriodsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryVestingPeriodsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.VestingPeriods) > 0 {
			for _, e := range x.VestingPeriods {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryVestingPeriodsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.VestingPeriods) > 0 {
			for iNdEx := len(x.VestingPeriods) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.VestingPeriods[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryVestingPeriodsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryVestingPeriodsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryVestingPeriodsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VestingPeriods", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VestingPeriods = append(x.VestingPeriods, &Period{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VestingPeriods[len(x.VestingPeriods)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: cosmos/accounts/vesting/query.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// QueryVestingAccountInfoRequest get vesting account info
type QueryVestingAccountInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryVestingAccountInfoRequest) Reset() {
	*x = QueryVestingAccountInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_accounts_vesting_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryVestingAccountInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryVestingAccountInfoRequest) ProtoMessage() {}

// Deprecated: Use QueryVestingAccountInfoRequest.ProtoReflect.Descriptor instead.
func (*QueryVestingAccountInfoRequest) Descriptor() ([]byte, []int) {
	return file_cosmos_accounts_vesting_query_proto_rawDescGZIP(), []int{0}
}

// QueryVestingAccountInfoResponse return vesting account info
type QueryVestingAccountInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// original_vesting defines the value of the account original vesting.
	OriginalVesting []*v1beta1.Coin `protobuf:"bytes,1,rep,name=original_vesting,json=originalVesting,proto3" json:"original_vesting,omitempty"`
	// delegated_free defines the value of the account delegated free.
	DelegatedFree []*v1beta1.Coin `protobuf:"bytes,2,rep,name=delegated_free,json=delegatedFree,proto3" json:"delegated_free,omitempty"`
	// delegated_free defines the value of the account delegated free.
	DelegatedVesting []*v1beta1.Coin `protobuf:"bytes,3,rep,name=delegated_vesting,json=delegatedVesting,proto3" json:"delegated_vesting,omitempty"`
	// end_time defines the value of the account vesting start time.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// end_time defines the value of the account vesting end time.
	EndTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// vesting_coins defines the value of the account vesting coins.
	VestingCoins []*v1beta1.Coin `protobuf:"bytes,6,rep,name=vesting_coins,json=vestingCoins,proto3" json:"vesting_coins,omitempty"`
	// vested_vesting defines the value of the account vested coins.
	VestedVesting []*v1beta1.Coin `protobuf:"bytes,7,rep,name=vested_vesting,json=vestedVesting,proto3" json:"vested_vesting,omitempty"`
	// owner defines the value of the owner of the vesting account.
	Owner string `protobuf:"bytes,8,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *QueryVestingAccountInfoResponse) Reset() {
	*x = QueryVestingAccountInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_accounts_vesting_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryVestingAccountInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryVestingAccountInfoResponse) ProtoMessage() {}

// Deprecated: Use QueryVestingAccountInfoResponse.ProtoReflect.Descriptor instead.
func (*QueryVestingAccountInfoResponse) Descriptor() ([]byte, []int) {
	return file_cosmos_accounts_vesting_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryVestingAccountInfoResponse) GetOriginalVesting() []*v1beta1.Coin {
	if x != nil {
		return x.OriginalVesting
	}
	return nil
}

func (x *QueryVestingAccountInfoResponse) GetDelegatedFree() []*v1beta1.Coin {
	if x != nil {
		return x.DelegatedFree
	}
	return nil
}

func (x *QueryVestingAccountInfoResponse) GetDelegatedVesting() []*v1beta1.Coin {
	if x != nil {
		return x.DelegatedVesting
	}
	return nil
}

func (x *QueryVestingAccountInfoResponse) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *QueryVestingAccountInfoResponse) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *QueryVestingAccountInfoResponse) GetVestingCoins() []*v1beta1.Coin {
	if x != nil {
		return x.VestingCoins
	}
	return nil
}

func (x *QueryVestingAccountInfoResponse) GetVestedVesting() []*v1beta1.Coin {
	if x != nil {
		return x.VestedVesting
	}
	return nil
}

func (x *QueryVestingAccountInfoResponse) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

// QueryVestingPeriodsRequest is used to query the periodic vesting account vesting periods.
type QueryVestingPeriodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryVestingPeriodsRequest) Reset() {
	*x = QueryVestingPeriodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_accounts_vesting_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryVestingPeriodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryVestingPeriodsRequest) ProtoMessage() {}

// Deprecated: Use QueryVestingPeriodsRequest.ProtoReflect.Descriptor instead.
func (*QueryVestingPeriodsRequest) Descriptor() ([]byte, []int) {
	return file_cosmos_accounts_vesting_query_proto_rawDescGZIP(), []int{2}
}

// QueryVestingPeriodsResponse returns the periodic vesting account vesting periods.
type QueryVestingPeriodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// vesting_periods defines the value of the periodic vesting account vesting periods.
	VestingPeriods []*Period `protobuf:"bytes,1,rep,name=vesting_periods,json=vestingPeriods,proto3" json:"vesting_periods,omitempty"`
}

func (x *QueryVestingPeriodsResponse) Reset() {
	*x = QueryVestingPeriodsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_accounts_vesting_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryVestingPeriodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryVestingPeriodsResponse) ProtoMessage() {}

// Deprecated: Use QueryVestingPeriodsResponse.ProtoReflect.Descriptor instead.
func (*QueryVestingPeriodsResponse) Descriptor() ([]byte, []int) {
	return file_cosmos_accounts_vesting_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryVestingPeriodsResponse) GetVestingPeriods() []*Period {
	if x != nil {
		return x.VestingPeriods
	}
	return nil
}

var File_cosmos_accounts_vesting_query_proto protoreflect.FileDescriptor

var file_cosmos_accounts_vesting_query_proto_rawDesc = []byte{
	0x0a, 0x23, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x2f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x25,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f,
	0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61,
	0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x20, 0x0a, 0x1e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x81,
	0x06, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x76, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x76,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf, 0x1f,
	0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x72, 0x0a, 0x0e, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x30, 0xc8,
	0xde, 0x1f, 0x00, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d,
	0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52,
	0x0d, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x65, 0x65, 0x12, 0x78,
	0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x64, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x70, 0x0a, 0x0d, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf,
	0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x0c, 0x76, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x72, 0x0a, 0x0e, 0x76, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x5f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x30, 0xc8, 0xde, 0x1f,
	0x00, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x0d, 0x76,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x22, 0x1c, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x67, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x48, 0x0a, 0x0f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0e, 0x76, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x42, 0xd1, 0x01, 0x0a, 0x1b, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x28, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73,
	0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0xa2, 0x02, 0x03, 0x43, 0x41, 0x56, 0xaa, 0x02, 0x17, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0xca, 0x02, 0x17, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x5c, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0xe2, 0x02, 0x23, 0x43, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5c, 0x56, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x19, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x3a, 0x3a, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cosmos_accounts_vesting_query_proto_rawDescOnce sync.Once
	file_cosmos_accounts_vesting_query_proto_rawDescData = file_cosmos_accounts_vesting_query_proto_rawDesc
)

func file_cosmos_accounts_vesting_query_proto_rawDescGZIP() []byte {
	file_cosmos_accounts_vesting_query_proto_rawDescOnce.Do(func() {
		file_cosmos_accounts_vesting_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_cosmos_accounts_vesting_query_proto_rawDescData)
	})
	return file_cosmos_accounts_vesting_query_proto_rawDescData
}

var file_cosmos_accounts_vesting_query_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_cosmos_accounts_vesting_query_proto_goTypes = []interface{}{
	(*QueryVestingAccountInfoRequest)(nil),  // 0: cosmos.accounts.vesting.QueryVestingAccountInfoRequest
	(*QueryVestingAccountInfoResponse)(nil), // 1: cosmos.accounts.vesting.QueryVestingAccountInfoResponse
	(*QueryVestingPeriodsRequest)(nil),      // 2: cosmos.accounts.vesting.QueryVestingPeriodsRequest
	(*QueryVestingPeriodsResponse)(nil),     // 3: cosmos.accounts.vesting.QueryVestingPeriodsResponse
	(*v1beta1.Coin)(nil),                    // 4: cosmos.base.v1beta1.Coin
	(*timestamppb.Timestamp)(nil),           // 5: google.protobuf.Timestamp
	(*Period)(nil),                          // 6: cosmos.accounts.vesting.Period
}
var file_cosmos_accounts_vesting_query_proto_depIdxs = []int32{
	4, // 0: cosmos.accounts.vesting.QueryVestingAccountInfoResponse.original_vesting:type_name -> cosmos.base.v1beta1.Coin
	4, // 1: cosmos.accounts.vesting.QueryVestingAccountInfoResponse.delegated_free:type_name -> cosmos.base.v1beta1.Coin
	4, // 2: cosmos.accounts.vesting.QueryVestingAccountInfoResponse.delegated_vesting:type_name -> cosmos.base.v1beta1.Coin
	5, // 3: cosmos.accounts.vesting.QueryVestingAccountInfoResponse.start_time:type_name -> google.protobuf.Timestamp
	5, // 4: cosmos.accounts.vesting.QueryVestingAccountInfoResponse.end_time:type_name -> google.protobuf.Timestamp
	4, // 5: cosmos.accounts.vesting.QueryVestingAccountInfoResponse.vesting_coins:type_name -> cosmos.base.v1beta1.Coin
	4, // 6: cosmos.accounts.vesting.QueryVestingAccountInfoResponse.vested_vesting:type_name -> cosmos.base.v1beta1.Coin
	6, // 7: cosmos.accounts.vesting.QueryVestingPeriodsResponse.vesting_periods:type_name -> cosmos.accounts.vesting.Period
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_cosmos_accounts_vesting_query_proto_init() }
func file_cosmos_accounts_vesting_query_proto_init() {
	if File_cosmos_accounts_vesting_query_proto != nil {
		return
	}
	file_cosmos_accounts_vesting_vesting_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cosmos_accounts_vesting_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryVestingAccountInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_accounts_vesting_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryVestingAccountInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_accounts_vesting_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryVestingPeriodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_accounts_vesting_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryVestingPeriodsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cosmos_accounts_vesting_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cosmos_accounts_vesting_query_proto_goTypes,
		DependencyIndexes: file_cosmos_accounts_vesting_query_proto_depIdxs,
		MessageInfos:      file_cosmos_accounts_vesting_query_proto_msgTypes,
	}.Build()
	File_cosmos_accounts_vesting_query_proto = out.File
	file_cosmos_accounts_vesting_query_proto_rawDesc = nil
	file_cosmos_accounts_vesting_query_proto_goTypes = nil
	file_cosmos_accounts_vesting_query_proto_depIdxs = nil
}
