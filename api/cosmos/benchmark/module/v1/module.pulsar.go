// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package modulev1

import (
	_ "cosmossdk.io/api/cosmos/app/v1alpha1"
	binary "encoding/binary"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	math "math"
	reflect "reflect"
	sync "sync"
)

var (
	md_Module                protoreflect.MessageDescriptor
	fd_Module_genesis_params protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_benchmark_module_v1_module_proto_init()
	md_Module = File_cosmos_benchmark_module_v1_module_proto.Messages().ByName("Module")
	fd_Module_genesis_params = md_Module.Fields().ByName("genesis_params")
}

var _ protoreflect.Message = (*fastReflection_Module)(nil)

type fastReflection_Module Module

func (x *Module) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Module)(x)
}

func (x *Module) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_benchmark_module_v1_module_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Module_messageType fastReflection_Module_messageType
var _ protoreflect.MessageType = fastReflection_Module_messageType{}

type fastReflection_Module_messageType struct{}

func (x fastReflection_Module_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Module)(nil)
}
func (x fastReflection_Module_messageType) New() protoreflect.Message {
	return new(fastReflection_Module)
}
func (x fastReflection_Module_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Module
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Module) Descriptor() protoreflect.MessageDescriptor {
	return md_Module
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Module) Type() protoreflect.MessageType {
	return _fastReflection_Module_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Module) New() protoreflect.Message {
	return new(fastReflection_Module)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Module) Interface() protoreflect.ProtoMessage {
	return (*Module)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Module) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.GenesisParams != nil {
		value := protoreflect.ValueOfMessage(x.GenesisParams.ProtoReflect())
		if !f(fd_Module_genesis_params, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Module) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.benchmark.module.v1.Module.genesis_params":
		return x.GenesisParams != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.benchmark.module.v1.Module"))
		}
		panic(fmt.Errorf("message cosmos.benchmark.module.v1.Module does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Module) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.benchmark.module.v1.Module.genesis_params":
		x.GenesisParams = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.benchmark.module.v1.Module"))
		}
		panic(fmt.Errorf("message cosmos.benchmark.module.v1.Module does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Module) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.benchmark.module.v1.Module.genesis_params":
		value := x.GenesisParams
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.benchmark.module.v1.Module"))
		}
		panic(fmt.Errorf("message cosmos.benchmark.module.v1.Module does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Module) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.benchmark.module.v1.Module.genesis_params":
		x.GenesisParams = value.Message().Interface().(*GeneratorParams)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.benchmark.module.v1.Module"))
		}
		panic(fmt.Errorf("message cosmos.benchmark.module.v1.Module does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Module) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.benchmark.module.v1.Module.genesis_params":
		if x.GenesisParams == nil {
			x.GenesisParams = new(GeneratorParams)
		}
		return protoreflect.ValueOfMessage(x.GenesisParams.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.benchmark.module.v1.Module"))
		}
		panic(fmt.Errorf("message cosmos.benchmark.module.v1.Module does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Module) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.benchmark.module.v1.Module.genesis_params":
		m := new(GeneratorParams)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.benchmark.module.v1.Module"))
		}
		panic(fmt.Errorf("message cosmos.benchmark.module.v1.Module does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Module) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.benchmark.module.v1.Module", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Module) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Module) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Module) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Module) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Module)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.GenesisParams != nil {
			l = options.Size(x.GenesisParams)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Module)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.GenesisParams != nil {
			encoded, err := options.Marshal(x.GenesisParams)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Module)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Module: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Module: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GenesisParams", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.GenesisParams == nil {
					x.GenesisParams = &GeneratorParams{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.GenesisParams); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GeneratorParams               protoreflect.MessageDescriptor
	fd_GeneratorParams_seed          protoreflect.FieldDescriptor
	fd_GeneratorParams_bucket_count  protoreflect.FieldDescriptor
	fd_GeneratorParams_key_mean      protoreflect.FieldDescriptor
	fd_GeneratorParams_key_std_dev   protoreflect.FieldDescriptor
	fd_GeneratorParams_value_mean    protoreflect.FieldDescriptor
	fd_GeneratorParams_value_std_dev protoreflect.FieldDescriptor
	fd_GeneratorParams_genesis_count protoreflect.FieldDescriptor
	fd_GeneratorParams_insert_weight protoreflect.FieldDescriptor
	fd_GeneratorParams_update_weight protoreflect.FieldDescriptor
	fd_GeneratorParams_get_weight    protoreflect.FieldDescriptor
	fd_GeneratorParams_delete_weight protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_benchmark_module_v1_module_proto_init()
	md_GeneratorParams = File_cosmos_benchmark_module_v1_module_proto.Messages().ByName("GeneratorParams")
	fd_GeneratorParams_seed = md_GeneratorParams.Fields().ByName("seed")
	fd_GeneratorParams_bucket_count = md_GeneratorParams.Fields().ByName("bucket_count")
	fd_GeneratorParams_key_mean = md_GeneratorParams.Fields().ByName("key_mean")
	fd_GeneratorParams_key_std_dev = md_GeneratorParams.Fields().ByName("key_std_dev")
	fd_GeneratorParams_value_mean = md_GeneratorParams.Fields().ByName("value_mean")
	fd_GeneratorParams_value_std_dev = md_GeneratorParams.Fields().ByName("value_std_dev")
	fd_GeneratorParams_genesis_count = md_GeneratorParams.Fields().ByName("genesis_count")
	fd_GeneratorParams_insert_weight = md_GeneratorParams.Fields().ByName("insert_weight")
	fd_GeneratorParams_update_weight = md_GeneratorParams.Fields().ByName("update_weight")
	fd_GeneratorParams_get_weight = md_GeneratorParams.Fields().ByName("get_weight")
	fd_GeneratorParams_delete_weight = md_GeneratorParams.Fields().ByName("delete_weight")
}

var _ protoreflect.Message = (*fastReflection_GeneratorParams)(nil)

type fastReflection_GeneratorParams GeneratorParams

func (x *GeneratorParams) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GeneratorParams)(x)
}

func (x *GeneratorParams) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_benchmark_module_v1_module_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GeneratorParams_messageType fastReflection_GeneratorParams_messageType
var _ protoreflect.MessageType = fastReflection_GeneratorParams_messageType{}

type fastReflection_GeneratorParams_messageType struct{}

func (x fastReflection_GeneratorParams_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GeneratorParams)(nil)
}
func (x fastReflection_GeneratorParams_messageType) New() protoreflect.Message {
	return new(fastReflection_GeneratorParams)
}
func (x fastReflection_GeneratorParams_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GeneratorParams
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GeneratorParams) Descriptor() protoreflect.MessageDescriptor {
	return md_GeneratorParams
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GeneratorParams) Type() protoreflect.MessageType {
	return _fastReflection_GeneratorParams_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GeneratorParams) New() protoreflect.Message {
	return new(fastReflection_GeneratorParams)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GeneratorParams) Interface() protoreflect.ProtoMessage {
	return (*GeneratorParams)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GeneratorParams) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Seed != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Seed)
		if !f(fd_GeneratorParams_seed, value) {
			return
		}
	}
	if x.BucketCount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BucketCount)
		if !f(fd_GeneratorParams_bucket_count, value) {
			return
		}
	}
	if x.KeyMean != uint64(0) {
		value := protoreflect.ValueOfUint64(x.KeyMean)
		if !f(fd_GeneratorParams_key_mean, value) {
			return
		}
	}
	if x.KeyStdDev != uint64(0) {
		value := protoreflect.ValueOfUint64(x.KeyStdDev)
		if !f(fd_GeneratorParams_key_std_dev, value) {
			return
		}
	}
	if x.ValueMean != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ValueMean)
		if !f(fd_GeneratorParams_value_mean, value) {
			return
		}
	}
	if x.ValueStdDev != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ValueStdDev)
		if !f(fd_GeneratorParams_value_std_dev, value) {
			return
		}
	}
	if x.GenesisCount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.GenesisCount)
		if !f(fd_GeneratorParams_genesis_count, value) {
			return
		}
	}
	if x.InsertWeight != float32(0) || math.Signbit(float64(x.InsertWeight)) {
		value := protoreflect.ValueOfFloat32(x.InsertWeight)
		if !f(fd_GeneratorParams_insert_weight, value) {
			return
		}
	}
	if x.UpdateWeight != float32(0) || math.Signbit(float64(x.UpdateWeight)) {
		value := protoreflect.ValueOfFloat32(x.UpdateWeight)
		if !f(fd_GeneratorParams_update_weight, value) {
			return
		}
	}
	if x.GetWeight != float32(0) || math.Signbit(float64(x.GetWeight)) {
		value := protoreflect.ValueOfFloat32(x.GetWeight)
		if !f(fd_GeneratorParams_get_weight, value) {
			return
		}
	}
	if x.DeleteWeight != float32(0) || math.Signbit(float64(x.DeleteWeight)) {
		value := protoreflect.ValueOfFloat32(x.DeleteWeight)
		if !f(fd_GeneratorParams_delete_weight, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GeneratorParams) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.benchmark.module.v1.GeneratorParams.seed":
		return x.Seed != uint64(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.bucket_count":
		return x.BucketCount != uint64(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.key_mean":
		return x.KeyMean != uint64(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.key_std_dev":
		return x.KeyStdDev != uint64(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.value_mean":
		return x.ValueMean != uint64(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.value_std_dev":
		return x.ValueStdDev != uint64(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.genesis_count":
		return x.GenesisCount != uint64(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.insert_weight":
		return x.InsertWeight != float32(0) || math.Signbit(float64(x.InsertWeight))
	case "cosmos.benchmark.module.v1.GeneratorParams.update_weight":
		return x.UpdateWeight != float32(0) || math.Signbit(float64(x.UpdateWeight))
	case "cosmos.benchmark.module.v1.GeneratorParams.get_weight":
		return x.GetWeight != float32(0) || math.Signbit(float64(x.GetWeight))
	case "cosmos.benchmark.module.v1.GeneratorParams.delete_weight":
		return x.DeleteWeight != float32(0) || math.Signbit(float64(x.DeleteWeight))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.benchmark.module.v1.GeneratorParams"))
		}
		panic(fmt.Errorf("message cosmos.benchmark.module.v1.GeneratorParams does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GeneratorParams) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.benchmark.module.v1.GeneratorParams.seed":
		x.Seed = uint64(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.bucket_count":
		x.BucketCount = uint64(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.key_mean":
		x.KeyMean = uint64(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.key_std_dev":
		x.KeyStdDev = uint64(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.value_mean":
		x.ValueMean = uint64(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.value_std_dev":
		x.ValueStdDev = uint64(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.genesis_count":
		x.GenesisCount = uint64(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.insert_weight":
		x.InsertWeight = float32(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.update_weight":
		x.UpdateWeight = float32(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.get_weight":
		x.GetWeight = float32(0)
	case "cosmos.benchmark.module.v1.GeneratorParams.delete_weight":
		x.DeleteWeight = float32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.benchmark.module.v1.GeneratorParams"))
		}
		panic(fmt.Errorf("message cosmos.benchmark.module.v1.GeneratorParams does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GeneratorParams) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.benchmark.module.v1.GeneratorParams.seed":
		value := x.Seed
		return protoreflect.ValueOfUint64(value)
	case "cosmos.benchmark.module.v1.GeneratorParams.bucket_count":
		value := x.BucketCount
		return protoreflect.ValueOfUint64(value)
	case "cosmos.benchmark.module.v1.GeneratorParams.key_mean":
		value := x.KeyMean
		return protoreflect.ValueOfUint64(value)
	case "cosmos.benchmark.module.v1.GeneratorParams.key_std_dev":
		value := x.KeyStdDev
		return protoreflect.ValueOfUint64(value)
	case "cosmos.benchmark.module.v1.GeneratorParams.value_mean":
		value := x.ValueMean
		return protoreflect.ValueOfUint64(value)
	case "cosmos.benchmark.module.v1.GeneratorParams.value_std_dev":
		value := x.ValueStdDev
		return protoreflect.ValueOfUint64(value)
	case "cosmos.benchmark.module.v1.GeneratorParams.genesis_count":
		value := x.GenesisCount
		return protoreflect.ValueOfUint64(value)
	case "cosmos.benchmark.module.v1.GeneratorParams.insert_weight":
		value := x.InsertWeight
		return protoreflect.ValueOfFloat32(value)
	case "cosmos.benchmark.module.v1.GeneratorParams.update_weight":
		value := x.UpdateWeight
		return protoreflect.ValueOfFloat32(value)
	case "cosmos.benchmark.module.v1.GeneratorParams.get_weight":
		value := x.GetWeight
		return protoreflect.ValueOfFloat32(value)
	case "cosmos.benchmark.module.v1.GeneratorParams.delete_weight":
		value := x.DeleteWeight
		return protoreflect.ValueOfFloat32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.benchmark.module.v1.GeneratorParams"))
		}
		panic(fmt.Errorf("message cosmos.benchmark.module.v1.GeneratorParams does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GeneratorParams) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.benchmark.module.v1.GeneratorParams.seed":
		x.Seed = value.Uint()
	case "cosmos.benchmark.module.v1.GeneratorParams.bucket_count":
		x.BucketCount = value.Uint()
	case "cosmos.benchmark.module.v1.GeneratorParams.key_mean":
		x.KeyMean = value.Uint()
	case "cosmos.benchmark.module.v1.GeneratorParams.key_std_dev":
		x.KeyStdDev = value.Uint()
	case "cosmos.benchmark.module.v1.GeneratorParams.value_mean":
		x.ValueMean = value.Uint()
	case "cosmos.benchmark.module.v1.GeneratorParams.value_std_dev":
		x.ValueStdDev = value.Uint()
	case "cosmos.benchmark.module.v1.GeneratorParams.genesis_count":
		x.GenesisCount = value.Uint()
	case "cosmos.benchmark.module.v1.GeneratorParams.insert_weight":
		x.InsertWeight = float32(value.Float())
	case "cosmos.benchmark.module.v1.GeneratorParams.update_weight":
		x.UpdateWeight = float32(value.Float())
	case "cosmos.benchmark.module.v1.GeneratorParams.get_weight":
		x.GetWeight = float32(value.Float())
	case "cosmos.benchmark.module.v1.GeneratorParams.delete_weight":
		x.DeleteWeight = float32(value.Float())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.benchmark.module.v1.GeneratorParams"))
		}
		panic(fmt.Errorf("message cosmos.benchmark.module.v1.GeneratorParams does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GeneratorParams) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.benchmark.module.v1.GeneratorParams.seed":
		panic(fmt.Errorf("field seed of message cosmos.benchmark.module.v1.GeneratorParams is not mutable"))
	case "cosmos.benchmark.module.v1.GeneratorParams.bucket_count":
		panic(fmt.Errorf("field bucket_count of message cosmos.benchmark.module.v1.GeneratorParams is not mutable"))
	case "cosmos.benchmark.module.v1.GeneratorParams.key_mean":
		panic(fmt.Errorf("field key_mean of message cosmos.benchmark.module.v1.GeneratorParams is not mutable"))
	case "cosmos.benchmark.module.v1.GeneratorParams.key_std_dev":
		panic(fmt.Errorf("field key_std_dev of message cosmos.benchmark.module.v1.GeneratorParams is not mutable"))
	case "cosmos.benchmark.module.v1.GeneratorParams.value_mean":
		panic(fmt.Errorf("field value_mean of message cosmos.benchmark.module.v1.GeneratorParams is not mutable"))
	case "cosmos.benchmark.module.v1.GeneratorParams.value_std_dev":
		panic(fmt.Errorf("field value_std_dev of message cosmos.benchmark.module.v1.GeneratorParams is not mutable"))
	case "cosmos.benchmark.module.v1.GeneratorParams.genesis_count":
		panic(fmt.Errorf("field genesis_count of message cosmos.benchmark.module.v1.GeneratorParams is not mutable"))
	case "cosmos.benchmark.module.v1.GeneratorParams.insert_weight":
		panic(fmt.Errorf("field insert_weight of message cosmos.benchmark.module.v1.GeneratorParams is not mutable"))
	case "cosmos.benchmark.module.v1.GeneratorParams.update_weight":
		panic(fmt.Errorf("field update_weight of message cosmos.benchmark.module.v1.GeneratorParams is not mutable"))
	case "cosmos.benchmark.module.v1.GeneratorParams.get_weight":
		panic(fmt.Errorf("field get_weight of message cosmos.benchmark.module.v1.GeneratorParams is not mutable"))
	case "cosmos.benchmark.module.v1.GeneratorParams.delete_weight":
		panic(fmt.Errorf("field delete_weight of message cosmos.benchmark.module.v1.GeneratorParams is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.benchmark.module.v1.GeneratorParams"))
		}
		panic(fmt.Errorf("message cosmos.benchmark.module.v1.GeneratorParams does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GeneratorParams) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.benchmark.module.v1.GeneratorParams.seed":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.benchmark.module.v1.GeneratorParams.bucket_count":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.benchmark.module.v1.GeneratorParams.key_mean":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.benchmark.module.v1.GeneratorParams.key_std_dev":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.benchmark.module.v1.GeneratorParams.value_mean":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.benchmark.module.v1.GeneratorParams.value_std_dev":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.benchmark.module.v1.GeneratorParams.genesis_count":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.benchmark.module.v1.GeneratorParams.insert_weight":
		return protoreflect.ValueOfFloat32(float32(0))
	case "cosmos.benchmark.module.v1.GeneratorParams.update_weight":
		return protoreflect.ValueOfFloat32(float32(0))
	case "cosmos.benchmark.module.v1.GeneratorParams.get_weight":
		return protoreflect.ValueOfFloat32(float32(0))
	case "cosmos.benchmark.module.v1.GeneratorParams.delete_weight":
		return protoreflect.ValueOfFloat32(float32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.benchmark.module.v1.GeneratorParams"))
		}
		panic(fmt.Errorf("message cosmos.benchmark.module.v1.GeneratorParams does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GeneratorParams) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.benchmark.module.v1.GeneratorParams", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GeneratorParams) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GeneratorParams) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GeneratorParams) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GeneratorParams) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GeneratorParams)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Seed != 0 {
			n += 1 + runtime.Sov(uint64(x.Seed))
		}
		if x.BucketCount != 0 {
			n += 1 + runtime.Sov(uint64(x.BucketCount))
		}
		if x.KeyMean != 0 {
			n += 1 + runtime.Sov(uint64(x.KeyMean))
		}
		if x.KeyStdDev != 0 {
			n += 1 + runtime.Sov(uint64(x.KeyStdDev))
		}
		if x.ValueMean != 0 {
			n += 1 + runtime.Sov(uint64(x.ValueMean))
		}
		if x.ValueStdDev != 0 {
			n += 1 + runtime.Sov(uint64(x.ValueStdDev))
		}
		if x.GenesisCount != 0 {
			n += 1 + runtime.Sov(uint64(x.GenesisCount))
		}
		if x.InsertWeight != 0 || math.Signbit(float64(x.InsertWeight)) {
			n += 5
		}
		if x.UpdateWeight != 0 || math.Signbit(float64(x.UpdateWeight)) {
			n += 5
		}
		if x.GetWeight != 0 || math.Signbit(float64(x.GetWeight)) {
			n += 5
		}
		if x.DeleteWeight != 0 || math.Signbit(float64(x.DeleteWeight)) {
			n += 5
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GeneratorParams)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.GetWeight != 0 || math.Signbit(float64(x.GetWeight)) {
			i -= 4
			binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(x.GetWeight))))
			i--
			dAtA[i] = 0x65
		}
		if x.DeleteWeight != 0 || math.Signbit(float64(x.DeleteWeight)) {
			i -= 4
			binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(x.DeleteWeight))))
			i--
			dAtA[i] = 0x5d
		}
		if x.UpdateWeight != 0 || math.Signbit(float64(x.UpdateWeight)) {
			i -= 4
			binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(x.UpdateWeight))))
			i--
			dAtA[i] = 0x55
		}
		if x.InsertWeight != 0 || math.Signbit(float64(x.InsertWeight)) {
			i -= 4
			binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(x.InsertWeight))))
			i--
			dAtA[i] = 0x4d
		}
		if x.GenesisCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.GenesisCount))
			i--
			dAtA[i] = 0x40
		}
		if x.ValueStdDev != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ValueStdDev))
			i--
			dAtA[i] = 0x38
		}
		if x.ValueMean != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ValueMean))
			i--
			dAtA[i] = 0x30
		}
		if x.KeyStdDev != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.KeyStdDev))
			i--
			dAtA[i] = 0x20
		}
		if x.KeyMean != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.KeyMean))
			i--
			dAtA[i] = 0x18
		}
		if x.BucketCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BucketCount))
			i--
			dAtA[i] = 0x10
		}
		if x.Seed != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Seed))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GeneratorParams)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GeneratorParams: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GeneratorParams: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Seed", wireType)
				}
				x.Seed = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Seed |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BucketCount", wireType)
				}
				x.BucketCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BucketCount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyMean", wireType)
				}
				x.KeyMean = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.KeyMean |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyStdDev", wireType)
				}
				x.KeyStdDev = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.KeyStdDev |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValueMean", wireType)
				}
				x.ValueMean = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ValueMean |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValueStdDev", wireType)
				}
				x.ValueStdDev = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ValueStdDev |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GenesisCount", wireType)
				}
				x.GenesisCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.GenesisCount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 5 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InsertWeight", wireType)
				}
				var v uint32
				if (iNdEx + 4) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v = uint32(binary.LittleEndian.Uint32(dAtA[iNdEx:]))
				iNdEx += 4
				x.InsertWeight = float32(math.Float32frombits(v))
			case 10:
				if wireType != 5 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateWeight", wireType)
				}
				var v uint32
				if (iNdEx + 4) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v = uint32(binary.LittleEndian.Uint32(dAtA[iNdEx:]))
				iNdEx += 4
				x.UpdateWeight = float32(math.Float32frombits(v))
			case 12:
				if wireType != 5 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GetWeight", wireType)
				}
				var v uint32
				if (iNdEx + 4) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v = uint32(binary.LittleEndian.Uint32(dAtA[iNdEx:]))
				iNdEx += 4
				x.GetWeight = float32(math.Float32frombits(v))
			case 11:
				if wireType != 5 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DeleteWeight", wireType)
				}
				var v uint32
				if (iNdEx + 4) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v = uint32(binary.LittleEndian.Uint32(dAtA[iNdEx:]))
				iNdEx += 4
				x.DeleteWeight = float32(math.Float32frombits(v))
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: cosmos/benchmark/module/v1/module.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Module is the config object of the benchmark module.
type Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GenesisParams *GeneratorParams `protobuf:"bytes,1,opt,name=genesis_params,json=genesisParams,proto3" json:"genesis_params,omitempty"`
}

func (x *Module) Reset() {
	*x = Module{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_benchmark_module_v1_module_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_cosmos_benchmark_module_v1_module_proto_rawDescGZIP(), []int{0}
}

func (x *Module) GetGenesisParams() *GeneratorParams {
	if x != nil {
		return x.GenesisParams
	}
	return nil
}

// GenesisParams defines the genesis parameters for the benchmark module.
type GeneratorParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seed         uint64  `protobuf:"varint,1,opt,name=seed,proto3" json:"seed,omitempty"`
	BucketCount  uint64  `protobuf:"varint,2,opt,name=bucket_count,json=bucketCount,proto3" json:"bucket_count,omitempty"`
	KeyMean      uint64  `protobuf:"varint,3,opt,name=key_mean,json=keyMean,proto3" json:"key_mean,omitempty"`
	KeyStdDev    uint64  `protobuf:"varint,4,opt,name=key_std_dev,json=keyStdDev,proto3" json:"key_std_dev,omitempty"`
	ValueMean    uint64  `protobuf:"varint,6,opt,name=value_mean,json=valueMean,proto3" json:"value_mean,omitempty"`
	ValueStdDev  uint64  `protobuf:"varint,7,opt,name=value_std_dev,json=valueStdDev,proto3" json:"value_std_dev,omitempty"`
	GenesisCount uint64  `protobuf:"varint,8,opt,name=genesis_count,json=genesisCount,proto3" json:"genesis_count,omitempty"`
	InsertWeight float32 `protobuf:"fixed32,9,opt,name=insert_weight,json=insertWeight,proto3" json:"insert_weight,omitempty"`
	UpdateWeight float32 `protobuf:"fixed32,10,opt,name=update_weight,json=updateWeight,proto3" json:"update_weight,omitempty"`
	GetWeight    float32 `protobuf:"fixed32,12,opt,name=get_weight,json=getWeight,proto3" json:"get_weight,omitempty"`
	DeleteWeight float32 `protobuf:"fixed32,11,opt,name=delete_weight,json=deleteWeight,proto3" json:"delete_weight,omitempty"`
}

func (x *GeneratorParams) Reset() {
	*x = GeneratorParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_benchmark_module_v1_module_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratorParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratorParams) ProtoMessage() {}

// Deprecated: Use GeneratorParams.ProtoReflect.Descriptor instead.
func (*GeneratorParams) Descriptor() ([]byte, []int) {
	return file_cosmos_benchmark_module_v1_module_proto_rawDescGZIP(), []int{1}
}

func (x *GeneratorParams) GetSeed() uint64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *GeneratorParams) GetBucketCount() uint64 {
	if x != nil {
		return x.BucketCount
	}
	return 0
}

func (x *GeneratorParams) GetKeyMean() uint64 {
	if x != nil {
		return x.KeyMean
	}
	return 0
}

func (x *GeneratorParams) GetKeyStdDev() uint64 {
	if x != nil {
		return x.KeyStdDev
	}
	return 0
}

func (x *GeneratorParams) GetValueMean() uint64 {
	if x != nil {
		return x.ValueMean
	}
	return 0
}

func (x *GeneratorParams) GetValueStdDev() uint64 {
	if x != nil {
		return x.ValueStdDev
	}
	return 0
}

func (x *GeneratorParams) GetGenesisCount() uint64 {
	if x != nil {
		return x.GenesisCount
	}
	return 0
}

func (x *GeneratorParams) GetInsertWeight() float32 {
	if x != nil {
		return x.InsertWeight
	}
	return 0
}

func (x *GeneratorParams) GetUpdateWeight() float32 {
	if x != nil {
		return x.UpdateWeight
	}
	return 0
}

func (x *GeneratorParams) GetGetWeight() float32 {
	if x != nil {
		return x.GetWeight
	}
	return 0
}

func (x *GeneratorParams) GetDeleteWeight() float32 {
	if x != nil {
		return x.DeleteWeight
	}
	return 0
}

var File_cosmos_benchmark_module_v1_module_proto protoreflect.FileDescriptor

var file_cosmos_benchmark_module_v1_module_proto_rawDesc = []byte{
	0x0a, 0x27, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61,
	0x72, 0x6b, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x61, 0x70,
	0x70, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x52, 0x0a, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x3a, 0x24, 0xba, 0xc0, 0x96, 0xda, 0x01, 0x1e, 0x0a, 0x1c,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xf9, 0x02, 0x0a,
	0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x73, 0x65, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x6d,
	0x65, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x4d, 0x65,
	0x61, 0x6e, 0x12, 0x1e, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x74, 0x64, 0x5f, 0x64, 0x65,
	0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x53, 0x74, 0x64, 0x44,
	0x65, 0x76, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6d, 0x65, 0x61, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x65, 0x61,
	0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x74, 0x64, 0x5f, 0x64,
	0x65, 0x76, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53,
	0x74, 0x64, 0x44, 0x65, 0x76, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x67, 0x65,
	0x6e, 0x65, 0x73, 0x69, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x5f, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x67, 0x65, 0x74, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0xee, 0x01, 0x0a, 0x1e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72,
	0x6b, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x34, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x2f, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x43, 0x42, 0x4d, 0xaa, 0x02, 0x1a, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x1a, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5c, 0x42, 0x65, 0x6e,
	0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x5c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x26, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5c, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d,
	0x61, 0x72, 0x6b, 0x5c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1d, 0x43, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x3a, 0x3a, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x3a, 0x3a, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_cosmos_benchmark_module_v1_module_proto_rawDescOnce sync.Once
	file_cosmos_benchmark_module_v1_module_proto_rawDescData = file_cosmos_benchmark_module_v1_module_proto_rawDesc
)

func file_cosmos_benchmark_module_v1_module_proto_rawDescGZIP() []byte {
	file_cosmos_benchmark_module_v1_module_proto_rawDescOnce.Do(func() {
		file_cosmos_benchmark_module_v1_module_proto_rawDescData = protoimpl.X.CompressGZIP(file_cosmos_benchmark_module_v1_module_proto_rawDescData)
	})
	return file_cosmos_benchmark_module_v1_module_proto_rawDescData
}

var file_cosmos_benchmark_module_v1_module_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_cosmos_benchmark_module_v1_module_proto_goTypes = []interface{}{
	(*Module)(nil),          // 0: cosmos.benchmark.module.v1.Module
	(*GeneratorParams)(nil), // 1: cosmos.benchmark.module.v1.GeneratorParams
}
var file_cosmos_benchmark_module_v1_module_proto_depIdxs = []int32{
	1, // 0: cosmos.benchmark.module.v1.Module.genesis_params:type_name -> cosmos.benchmark.module.v1.GeneratorParams
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_cosmos_benchmark_module_v1_module_proto_init() }
func file_cosmos_benchmark_module_v1_module_proto_init() {
	if File_cosmos_benchmark_module_v1_module_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cosmos_benchmark_module_v1_module_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_benchmark_module_v1_module_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratorParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cosmos_benchmark_module_v1_module_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cosmos_benchmark_module_v1_module_proto_goTypes,
		DependencyIndexes: file_cosmos_benchmark_module_v1_module_proto_depIdxs,
		MessageInfos:      file_cosmos_benchmark_module_v1_module_proto_msgTypes,
	}.Build()
	File_cosmos_benchmark_module_v1_module_proto = out.File
	file_cosmos_benchmark_module_v1_module_proto_rawDesc = nil
	file_cosmos_benchmark_module_v1_module_proto_goTypes = nil
	file_cosmos_benchmark_module_v1_module_proto_depIdxs = nil
}
