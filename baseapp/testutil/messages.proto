syntax = "proto3";

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos/msg/v1/msg.proto";

option go_package = "github.com/cosmos/cosmos-sdk/baseapp/testutil";

message MsgCounter {
  option (cosmos.msg.v1.signer) = "signer";

  int64  counter         = 1;
  bool   fail_on_handler = 2;
  string signer          = 3;
}

message MsgCounter2 {
  option (cosmos.msg.v1.signer) = "signer";

  int64  counter         = 1;
  bool   fail_on_handler = 2;
  string signer          = 3;
}

message MsgCreateCounterResponse {}

message MsgKeyValue {
  option (cosmos.msg.v1.signer) = "signer";

  bytes  key    = 1;
  bytes  value  = 2;
  string signer = 3;
}

message MsgCreateKeyValueResponse {}

message MsgSend {
  option (cosmos.msg.v1.signer) = "from";

  string from   = 1;
  string to     = 2;
  string amount = 3;
}

message MsgSendResponse {}

message MsgNestedMessages {
  option (cosmos.msg.v1.signer) = "signer";

  repeated google.protobuf.Any messages = 1;
  string                       signer   = 2;
}

message MsgCreateNestedMessagesResponse {}

service Counter {
  rpc IncrementCounter(MsgCounter) returns (MsgCreateCounterResponse);
}

service Counter2 {
  rpc IncrementCounter(MsgCounter2) returns (MsgCreateCounterResponse);
}

service KeyValue {
  rpc Set(MsgKeyValue) returns (MsgCreateKeyValueResponse);
}

service Send {
  rpc Send(MsgSend) returns (MsgSendResponse);
}

service NestedMessages {
  rpc Check(MsgNestedMessages) returns (MsgCreateNestedMessagesResponse);
}
