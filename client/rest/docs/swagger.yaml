definitions:
  auth.StdFee:
    properties:
      amount:
        type: string
      gas:
        type: integer
    type: object
  auth.StdSignature:
    properties:
      signature:
        example: U3dhZ2dlciByb2Nrcw==
        format: base64
        type: string
    type: object
  rest.BaseReq:
    properties:
      account_number:
        type: integer
      chain_id:
        type: string
      fees:
        type: string
      from:
        type: string
      gas:
        type: string
      gas_adjustment:
        type: string
      gas_prices:
        type: string
      memo:
        type: string
      sequence:
        type: integer
      simulate:
        type: boolean
    type: object
  rest.BroadcastReq:
    properties:
      mode:
        type: string
      tx:
        $ref: '#/definitions/types.StdTx'
        type: object
    type: object
  rest.DepositReq:
    properties:
      amount:
        description: Coins to add to the proposal's deposit
        type: string
      base_req:
        $ref: '#/definitions/rest.BaseReq'
        type: object
      depositor:
        description: Address of the depositor
        type: string
    type: object
  rest.ErrorResponse:
    properties:
      code:
        type: integer
      error:
        type: string
    type: object
  rest.PostProposalReq:
    properties:
      base_req:
        $ref: '#/definitions/rest.BaseReq'
        type: object
      description:
        description: Description of the proposal
        type: string
      initial_deposit:
        description: Coins to add to the proposal's deposit
        type: string
      proposal_type:
        description: Type of proposal. Initial set {PlainTextProposal, SoftwareUpgradeProposal}
        type: string
      proposer:
        description: Address of the proposer
        type: string
      title:
        description: Title of the proposal
        type: string
    type: object
  rest.ResponseWithHeight:
    properties:
      height:
        type: integer
      result:
        type: string
    type: object
  rest.SendReq:
    properties:
      amount:
        type: string
      base_req:
        $ref: '#/definitions/rest.BaseReq'
        type: object
    type: object
  rest.VoteReq:
    properties:
      base_req:
        $ref: '#/definitions/rest.BaseReq'
        type: object
      option:
        description: option from OptionSet chosen by the voter
        type: string
      voter:
        description: address of the voter
        type: string
    type: object
  rest.postDeposit:
    properties:
      fee:
        $ref: '#/definitions/auth.StdFee'
        type: object
      memo:
        type: string
      msg:
        items:
          $ref: '#/definitions/types.MsgDeposit'
        type: array
      signatures:
        items:
          $ref: '#/definitions/auth.StdSignature'
        type: array
    type: object
  rest.postProposal:
    properties:
      fee:
        $ref: '#/definitions/auth.StdFee'
        type: object
      memo:
        type: string
      msg:
        items:
          $ref: '#/definitions/types.MsgSubmitProposal'
        type: array
      signatures:
        items:
          $ref: '#/definitions/auth.StdSignature'
        type: array
    type: object
  rest.postVote:
    properties:
      fee:
        $ref: '#/definitions/auth.StdFee'
        type: object
      memo:
        type: string
      msg:
        items:
          $ref: '#/definitions/types.MsgVote'
        type: array
      signatures:
        items:
          $ref: '#/definitions/auth.StdSignature'
        type: array
    type: object
  rest.queryBalance:
    properties:
      height:
        type: integer
      result:
        type: string
    type: object
  rest.queryDeposit:
    properties:
      height:
        type: integer
      result:
        $ref: '#/definitions/types.Deposit'
        type: object
    type: object
  rest.queryDeposits:
    properties:
      height:
        type: integer
      result:
        items:
          $ref: '#/definitions/types.Deposit'
        type: array
    type: object
  rest.queryProposal:
    properties:
      height:
        type: integer
      result:
        $ref: '#/definitions/types.Proposal'
        type: object
    type: object
  rest.queryProposals:
    properties:
      height:
        type: integer
      result:
        items:
          $ref: '#/definitions/types.Proposal'
        type: array
    type: object
  rest.queryProposer:
    properties:
      height:
        type: integer
      result:
        $ref: '#/definitions/utils.Proposer'
        type: object
    type: object
  rest.queryTally:
    properties:
      height:
        type: integer
      result:
        $ref: '#/definitions/types.TallyResult'
        type: object
    type: object
  rest.queryVote:
    properties:
      height:
        type: integer
      result:
        $ref: '#/definitions/types.Vote'
        type: object
    type: object
  rest.queryVotesOnProposal:
    properties:
      height:
        type: integer
      result:
        $ref: '#/definitions/types.Votes'
        type: object
    type: object
  rest.sendResponse:
    properties:
      fee:
        $ref: '#/definitions/types.StdFee'
        type: object
      memo:
        type: string
      msg:
        items:
          $ref: '#/definitions/types.MsgSend'
        type: array
      signatures:
        items:
          $ref: '#/definitions/types.StdSignature'
        type: array
    type: object
  rest.totalDenomSupply:
    properties:
      height:
        type: integer
      result:
        type: string
    type: object
  rest.totalSupply:
    properties:
      height:
        type: integer
      result:
        items:
          $ref: '#/definitions/types.Coin'
        type: array
    type: object
  types.ABCIMessageLog:
    properties:
      events:
        $ref: '#/definitions/types.StringEvents'
        description: |-
          Events contains a slice of Event objects that were emitted during some
          execution.
        type: object
      log:
        type: string
      msg_index:
        type: integer
      success:
        type: boolean
    type: object
  types.ABCIMessageLogs:
    items:
      properties:
        events:
          $ref: '#/definitions/types.StringEvents'
          description: |-
            Events contains a slice of Event objects that were emitted during some
            execution.
          type: object
        log:
          type: string
        msg_index:
          type: integer
        success:
          type: boolean
      type: object
    type: array
  types.Attribute:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  types.Coin:
    properties:
      amount:
        description: |-
          To allow the use of unsigned integers (see: #1273) a larger refactor will
          need to be made. So we use signed integers for now with safety measures in
          place preventing negative values being used.
        type: string
      denom:
        type: string
    type: object
  types.Content:
    type: object
  types.Deposit:
    properties:
      amount:
        description: Deposit amount
        type: string
      depositor:
        description: Address of the depositor
        type: string
      proposal_id:
        description: proposalID of the proposal
        type: integer
    type: object
  types.MsgDeposit:
    properties:
      amount:
        description: Coins to add to the proposal's deposit
        type: string
      depositor:
        description: Address of the depositor
        type: string
      proposal_id:
        description: ID of the proposal
        type: integer
    type: object
  types.MsgSend:
    properties:
      amount:
        type: string
      from_address:
        type: string
      to_address:
        type: string
    type: object
  types.MsgSubmitProposal:
    properties:
      content:
        $ref: '#/definitions/types.Content'
        type: object
      initial_deposit:
        description: Initial deposit paid by sender. Must be strictly positive
        type: string
      proposer:
        description: Address of the proposer
        type: string
    type: object
  types.MsgVote:
    properties:
      option:
        description: option from OptionSet chosen by the voter
        type: integer
      proposal_id:
        description: ID of the proposal
        type: integer
      voter:
        description: address of the voter
        type: string
    type: object
  types.Proposal:
    properties:
      deposit_end_time:
        description: Time that the Proposal would expire if deposit amount isn't met
        type: string
      final_tally_result:
        $ref: '#/definitions/types.TallyResult'
        description: Result of Tallys
        type: object
      id:
        description: ID of the proposal
        type: integer
      proposal_status:
        description: Status of the Proposal {Pending, Active, Passed, Rejected}
        type: integer
      submit_time:
        description: Time of the block where TxGovSubmitProposal was included
        type: string
      total_deposit:
        description: Current deposit on this proposal. Initial value is set at InitialDeposit
        type: string
      voting_end_time:
        description: Time that the VotingPeriod for this proposal will end and votes
          will be tallied
        type: string
      voting_start_time:
        description: Time of the block where MinDeposit was reached. -1 if MinDeposit
          is not reached
        type: string
    type: object
  types.StdFee:
    properties:
      amount:
        type: string
      gas:
        type: integer
    type: object
  types.StdSignature:
    properties:
      signature:
        example: U3dhZ2dlciByb2Nrcw==
        format: base64
        type: string
    type: object
  types.StdTx:
    properties:
      fee:
        $ref: '#/definitions/types.StdFee'
        type: object
      memo:
        type: string
      msg:
        type: string
      signatures:
        items:
          $ref: '#/definitions/types.StdSignature'
        type: array
    type: object
  types.StringEvent:
    properties:
      attributes:
        items:
          $ref: '#/definitions/types.Attribute'
        type: array
      type:
        type: string
    type: object
  types.StringEvents:
    items:
      properties:
        attributes:
          items:
            $ref: '#/definitions/types.Attribute'
          type: array
        type:
          type: string
      type: object
    type: array
  types.TallyResult:
    properties:
      abstain:
        type: string
      "no":
        type: string
      no_with_veto:
        type: string
      "yes":
        type: string
    type: object
  types.Tx:
    type: object
  types.TxResponse:
    properties:
      code:
        type: integer
      codespace:
        type: string
      data:
        type: string
      events:
        $ref: '#/definitions/types.StringEvents'
        description: |-
          DEPRECATED: Remove in the next next major release in favor of using the
          ABCIMessageLog.Events field.
        type: object
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      height:
        type: integer
      info:
        type: string
      logs:
        $ref: '#/definitions/types.ABCIMessageLogs'
        type: object
      raw_log:
        type: string
      timestamp:
        type: string
      tx:
        $ref: '#/definitions/types.Tx'
        type: object
      txhash:
        type: string
    type: object
  types.Vote:
    properties:
      option:
        description: option from OptionSet chosen by the voter
        type: integer
      proposal_id:
        description: proposalID of the proposal
        type: integer
      voter:
        description: address of the voter
        type: string
    type: object
  types.Votes:
    items:
      properties:
        option:
          description: option from OptionSet chosen by the voter
          type: integer
        proposal_id:
          description: proposalID of the proposal
          type: integer
        voter:
          description: address of the voter
          type: string
      type: object
    type: array
  utils.Proposer:
    properties:
      proposal_id:
        type: integer
      proposer:
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /bank/accounts/{address}/transfers:
    post:
      consumes:
      - application/json
      description: Transfer tokens to another account
      parameters:
      - description: Account address in bech32 format
        in: path
        name: address
        required: true
        type: string
      - description: Signed transaction along with the broadcasting mode
        in: body
        name: tx
        required: true
        schema:
          $ref: '#/definitions/rest.SendReq'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Returns the unsigned transaction
          schema:
            $ref: '#/definitions/rest.sendResponse'
        "400":
          description: Returned if the request is invalid.
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned if the transaction cannot be decoded.
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Token Transfer
      tags:
      - bank
  /bank/balances/{address}:
    get:
      description: Query an accounts balance
      parameters:
      - description: Account address to query
        in: path
        name: address
        required: true
        type: string
      - description: Block height to execute query (defaults to chain tip)
        in: query
        name: height
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.queryBalance'
        "400":
          description: Returned if the request doesn't have a valid height
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query account balances
      tags:
      - bank
  /gov/parameters/{type}:
    get:
      description: Query either (deposit | tallying | voting) parameters of the governance
        module
      parameters:
      - description: Type of param (deposit | tallying | voting)
        in: path
        name: type
        required: true
        type: string
      - description: Block height (defaults to chain tip)
        in: query
        name: height
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.ResponseWithHeight'
        "400":
          description: Returned if the request doesn't have a valid height
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "404":
          description: Returned if the type of parameter doesn't exist
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query governance parameters
      tags:
      - governance
  /gov/proposals:
    get:
      description: |-
        Query the list of governance proposals with optional filters for
        proposal status, depositor, and/or voter.
      parameters:
      - description: Block height (defaults to chain tip)
        in: query
        name: height
        type: string
      - description: Filter proposals by proposal status (deposit_period | voting_period
          | passed | rejected)
        in: query
        name: status
        type: string
      - description: Filter proposals by depositor address
        in: query
        name: depositor
        type: string
      - description: Filter proposals by voter address
        in: query
        name: voter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.queryProposals'
        "400":
          description: Returned if the request doesn't have a valid parameters
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned if the store query fails
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query for the list of governance proposals
      tags:
      - governance
    post:
      consumes:
      - application/json
      description: Generate a proposal transaction that is ready for signing
      parameters:
      - description: The data required to construct a proposal message, the proposal_type
          can be (text | parameter_change)
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/rest.PostProposalReq'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.postProposal'
        "400":
          description: Returned if the request is invalid
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Generate an unsigned proposal transaction
      tags:
      - governance
  /gov/proposals/{proposalID}:
    get:
      description: Query an individual governance proposal by ID
      parameters:
      - description: The ID of the governance proposal
        in: path
        name: proposalID
        required: true
        type: integer
      - description: Block height (defaults to chain tip)
        in: query
        name: height
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.queryProposal'
        "400":
          description: Returned if the request doesn't have a valid proposal ID or
            height
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned if the store query fails
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query a governance proposal by ID
      tags:
      - governance
  /gov/proposals/{proposalID}/deposits:
    get:
      description: |-
        Query an individual governance proposal's deposits.
        NOTE: In order to query deposits for passed proposals, the transaction
        record must be available otherwise the query will fail. This requires a
        node that is not pruning transaction history
      parameters:
      - description: The ID of the governance proposal
        in: path
        name: proposalID
        required: true
        type: integer
      - description: Block height (defaults to chain tip)
        in: query
        name: height
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.queryDeposits'
        "400":
          description: Returned if the request doesn't have a valid proposal ID or
            height
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned if the store query fails
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query a governance proposal's deposits
      tags:
      - governance
    post:
      consumes:
      - application/json
      description: Generate a deposit transaction that is ready for signing.
      parameters:
      - description: The ID of the governance proposal to deposit to
        in: path
        name: proposalID
        required: true
        type: integer
      - description: The data required to construct a deposit message
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/rest.DepositReq'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.postDeposit'
        "400":
          description: Returned if the request is invalid
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Generate an unsigned deposit transaction
      tags:
      - governance
  /gov/proposals/{proposalID}/deposits/{depositor}:
    get:
      description: |-
        Query an individual governance proposal's deposits.
        NOTE: In order to query a deposit for a passed proposal, the transaction
        record must be available otherwise the query will fail. This requires a
        node that is not pruning transaction history
      parameters:
      - description: The ID of the governance proposal
        in: path
        name: proposalID
        required: true
        type: integer
      - description: The address of the depositor
        in: path
        name: depositor
        required: true
        type: string
      - description: Block height (defaults to chain tip)
        in: query
        name: height
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.queryDeposit'
        "400":
          description: Returned if the request doesn't have a valid proposalID or
            depositor
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "404":
          description: Returned if the proposal is not found
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned if the store query fails
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query a governance proposal's individual deposit
      tags:
      - governance
  /gov/proposals/{proposalID}/proposer:
    get:
      description: Query an individual governance proposal's proposer.
      parameters:
      - description: The ID of the governance proposal
        in: path
        name: proposalID
        required: true
        type: integer
      - description: Block height (defaults to chain tip)
        in: query
        name: height
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.queryProposer'
        "400":
          description: Returned if the request doesn't have a valid proposal ID or
            height
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned if the store query fails
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query a governance proposal's proposer
      tags:
      - governance
  /gov/proposals/{proposalID}/tally:
    get:
      description: Query an individual governance proposal's vote tally.
      parameters:
      - description: The ID of the governance proposal
        in: path
        name: proposalID
        required: true
        type: integer
      - description: Block height (defaults to chain tip)
        in: query
        name: height
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.queryTally'
        "400":
          description: Returned if the request doesn't have a valid proposal ID or
            height
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned if the store query fails
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query a governance proposal's individual tally
      tags:
      - governance
  /gov/proposals/{proposalID}/votes:
    get:
      description: |-
        Query an individual governance proposal's votes.
        NOTE: In order to query deposits for passed proposals, the transaction
        record must be available otherwise the query will fail. This requires a
        node that is not pruning transaction history
      parameters:
      - description: The ID of the governance proposal
        in: path
        name: proposalID
        required: true
        type: integer
      - description: Block height (defaults to chain tip)
        in: query
        name: height
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.queryVotesOnProposal'
        "400":
          description: Returned if the request doesn't have a valid proposal ID or
            height
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned if the store query fails
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query a governance proposal's votes
      tags:
      - governance
    post:
      consumes:
      - application/json
      description: Generate a vote transaction that is ready for signing.
      parameters:
      - description: The ID of the governance proposal to vote for
        in: path
        name: proposalID
        required: true
        type: integer
      - description: The data required to construct a vote message
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/rest.VoteReq'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.postVote'
        "400":
          description: Returned if the request is invalid
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Generate an unsigned vote transaction
      tags:
      - governance
  /gov/proposals/{proposalID}/votes/{voter}:
    get:
      description: |-
        Query an individual governance proposal's vote.
        NOTE: In order to query votes for passed proposals, the transaction
        record must be available otherwise the query will fail. This requires a
        node that is not pruning transaction history
      parameters:
      - description: The ID of the governance proposal
        in: path
        name: proposalID
        required: true
        type: integer
      - description: The address of the voter
        in: path
        name: voter
        required: true
        type: string
      - description: Block height (defaults to chain tip)
        in: query
        name: height
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.queryVote'
        "400":
          description: Returned if the request doesn't have a valid proposal ID or
            voter address
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "404":
          description: Returned if the proposal is not found
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned if the store query fails
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query a governance proposal's individual vote
      tags:
      - governance
  /supply/total:
    get:
      parameters:
      - description: Block height to execute query (defaults to chain tip)
        in: query
        name: height
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The total supply
          schema:
            $ref: '#/definitions/rest.totalSupply'
        "400":
          description: Returned if the request doesn't have a valid height
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query total supply of coins
      tags:
      - supply
  /supply/total/{denomination}:
    get:
      parameters:
      - description: denomination
        in: path
        name: denom
        required: true
        type: string
      - description: Block height to execute query (defaults to chain tip)
        in: query
        name: height
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The total supply of a single denom
          schema:
            $ref: '#/definitions/rest.totalDenomSupply'
        "400":
          description: Returned if the request doesn't have a valid height
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned on server error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Query the supply of a denomination
      tags:
      - supply
  /txs:
    post:
      consumes:
      - application/json
      description: |-
        Broadcast a signed transaction with the broadcasting mode. The
        mode must either be sync, async, or block. The use of block mode
        is not advised. The sync mode will broadcast and wait for a
        CheckTx response, whereas async mode will broadcast and return
        immediately.
      parameters:
      - description: Signed transaction along with the broadcasting mode
        in: body
        name: tx
        required: true
        schema:
          $ref: '#/definitions/rest.BroadcastReq'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.TxResponse'
        "400":
          description: Returned if the request is invalid.
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Returned if the transaction cannot be decoded.
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Broadcast a signed transaction
      tags:
      - transactions
swagger: "2.0"
