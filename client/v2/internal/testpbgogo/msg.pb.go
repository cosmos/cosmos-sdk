// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: testpbgogo/msg.proto

package testpbgogo

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgRequestGogoOnly struct {
	Str               string     `protobuf:"bytes,3,opt,name=str,proto3" json:"str,omitempty"`
	ACoin             types.Coin `protobuf:"bytes,18,opt,name=a_coin,json=aCoin,proto3" json:"a_coin"`
	AnAddress         string     `protobuf:"bytes,19,opt,name=an_address,json=anAddress,proto3" json:"an_address,omitempty"`
	AValidatorAddress string     `protobuf:"bytes,33,opt,name=a_validator_address,json=aValidatorAddress,proto3" json:"a_validator_address,omitempty"`
}

func (m *MsgRequestGogoOnly) Reset()         { *m = MsgRequestGogoOnly{} }
func (m *MsgRequestGogoOnly) String() string { return proto.CompactTextString(m) }
func (*MsgRequestGogoOnly) ProtoMessage()    {}
func (*MsgRequestGogoOnly) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee602c0305458bfe, []int{0}
}
func (m *MsgRequestGogoOnly) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRequestGogoOnly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRequestGogoOnly.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRequestGogoOnly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRequestGogoOnly.Merge(m, src)
}
func (m *MsgRequestGogoOnly) XXX_Size() int {
	return m.Size()
}
func (m *MsgRequestGogoOnly) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRequestGogoOnly.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRequestGogoOnly proto.InternalMessageInfo

func (m *MsgRequestGogoOnly) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

func (m *MsgRequestGogoOnly) GetACoin() types.Coin {
	if m != nil {
		return m.ACoin
	}
	return types.Coin{}
}

func (m *MsgRequestGogoOnly) GetAnAddress() string {
	if m != nil {
		return m.AnAddress
	}
	return ""
}

func (m *MsgRequestGogoOnly) GetAValidatorAddress() string {
	if m != nil {
		return m.AValidatorAddress
	}
	return ""
}

type MsgResponseGoGoOnly struct {
	Request *MsgRequestGogoOnly `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (m *MsgResponseGoGoOnly) Reset()         { *m = MsgResponseGoGoOnly{} }
func (m *MsgResponseGoGoOnly) String() string { return proto.CompactTextString(m) }
func (*MsgResponseGoGoOnly) ProtoMessage()    {}
func (*MsgResponseGoGoOnly) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee602c0305458bfe, []int{1}
}
func (m *MsgResponseGoGoOnly) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgResponseGoGoOnly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgResponseGoGoOnly.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgResponseGoGoOnly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgResponseGoGoOnly.Merge(m, src)
}
func (m *MsgResponseGoGoOnly) XXX_Size() int {
	return m.Size()
}
func (m *MsgResponseGoGoOnly) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgResponseGoGoOnly.DiscardUnknown(m)
}

var xxx_messageInfo_MsgResponseGoGoOnly proto.InternalMessageInfo

func (m *MsgResponseGoGoOnly) GetRequest() *MsgRequestGogoOnly {
	if m != nil {
		return m.Request
	}
	return nil
}

func init() {
	proto.RegisterType((*MsgRequestGogoOnly)(nil), "testpbgogo.MsgRequestGogoOnly")
	proto.RegisterType((*MsgResponseGoGoOnly)(nil), "testpbgogo.MsgResponseGoGoOnly")
}

func init() { proto.RegisterFile("testpbgogo/msg.proto", fileDescriptor_ee602c0305458bfe) }

var fileDescriptor_ee602c0305458bfe = []byte{
	// 480 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xcd, 0x6e, 0x13, 0x31,
	0x10, 0xc7, 0xe3, 0xa4, 0x14, 0xea, 0x4a, 0x7c, 0x38, 0x51, 0xd9, 0x46, 0x62, 0x9b, 0xe6, 0x54,
	0x21, 0xc5, 0x4e, 0x82, 0xf8, 0x50, 0x6f, 0x2c, 0x87, 0x9c, 0xa2, 0x86, 0x6d, 0x85, 0x2a, 0x84,
	0xb4, 0xf2, 0xee, 0x5a, 0x66, 0x45, 0x62, 0x87, 0xb5, 0xbb, 0x12, 0x57, 0x9e, 0x80, 0x67, 0xe0,
	0xc8, 0x89, 0x43, 0xc4, 0x33, 0x54, 0x3d, 0x55, 0x3d, 0x71, 0x42, 0x28, 0x39, 0x20, 0xf1, 0x0a,
	0x5c, 0x90, 0xd7, 0xdb, 0x6c, 0x4a, 0x0f, 0xdc, 0xfc, 0x9f, 0xff, 0xcc, 0xcf, 0x33, 0x63, 0xc3,
	0x86, 0x66, 0x4a, 0x4f, 0x43, 0x2e, 0xb9, 0x24, 0x13, 0xc5, 0xf1, 0x34, 0x95, 0x5a, 0x22, 0x58,
	0x46, 0x9b, 0xdb, 0x91, 0x54, 0x13, 0xa9, 0x82, 0xdc, 0x21, 0x56, 0xd8, 0xb4, 0xe6, 0x7d, 0xab,
	0x4c, 0x21, 0xc9, 0x7a, 0x65, 0x7d, 0xd3, 0x2d, 0x8c, 0x90, 0x2a, 0x46, 0xb2, 0x5e, 0xc8, 0x34,
	0xed, 0x91, 0x48, 0x26, 0xa2, 0xf0, 0x1b, 0x86, 0x6c, 0x81, 0xe6, 0x64, 0xa3, 0xed, 0x3f, 0x00,
	0xa2, 0xa1, 0xe2, 0x3e, 0x7b, 0x7f, 0xc2, 0x94, 0x1e, 0x48, 0x2e, 0x0f, 0xc4, 0xf8, 0x03, 0xba,
	0x0b, 0x6b, 0x4a, 0xa7, 0x4e, 0xad, 0x05, 0xf6, 0x36, 0x7c, 0x73, 0x44, 0x4f, 0xe0, 0x3a, 0x0d,
	0x0c, 0xce, 0x41, 0x2d, 0xb0, 0xb7, 0xd9, 0xdf, 0xc6, 0x45, 0x5b, 0xe6, 0x3e, 0x5c, 0xdc, 0x87,
	0x5f, 0xc8, 0x44, 0x78, 0x6b, 0xa7, 0x3f, 0x76, 0x2a, 0xfe, 0x0d, 0x6a, 0x04, 0x7a, 0x0a, 0x21,
	0x15, 0x01, 0x8d, 0xe3, 0x94, 0x29, 0xe5, 0xd4, 0x0d, 0xd0, 0x73, 0x2e, 0x66, 0x9d, 0x46, 0x51,
	0xfe, 0xdc, 0x3a, 0x87, 0x3a, 0x4d, 0x04, 0xf7, 0x37, 0xa8, 0x28, 0x02, 0xe8, 0x25, 0xac, 0xd3,
	0x20, 0xa3, 0xe3, 0x24, 0xa6, 0x5a, 0xa6, 0x4b, 0xc2, 0x6e, 0x4e, 0xd8, 0xbd, 0x98, 0x75, 0x1e,
	0x14, 0x84, 0x57, 0x97, 0x39, 0x57, 0x51, 0xf7, 0xe8, 0xbf, 0xc6, 0xfe, 0x9d, 0x8f, 0xbf, 0xbe,
	0x3e, 0x5c, 0x69, 0xa7, 0x7d, 0x00, 0xeb, 0xf9, 0xf0, 0x6a, 0x2a, 0x85, 0x62, 0x03, 0x39, 0xb0,
	0xd3, 0x3f, 0x83, 0x37, 0x53, 0xbb, 0x10, 0x07, 0xe4, 0xc3, 0xba, 0xb8, 0x7c, 0x1c, 0x7c, 0x7d,
	0x5d, 0xfe, 0x65, 0x7a, 0x5f, 0xc0, 0xcd, 0xa1, 0xe2, 0xcb, 0x35, 0x06, 0x70, 0xed, 0x90, 0x89,
	0x18, 0xfd, 0xa7, 0xbe, 0xb9, 0x73, 0xcd, 0xbf, 0xda, 0x51, 0x7b, 0xeb, 0x6c, 0xd6, 0x41, 0x76,
	0xde, 0x8e, 0x8a, 0xdf, 0xb5, 0xb2, 0x2e, 0x7e, 0xdc, 0xc5, 0x5d, 0xef, 0x1b, 0x38, 0x9d, 0xbb,
	0xe0, 0x7c, 0xee, 0x82, 0x9f, 0x73, 0x17, 0x7c, 0x5a, 0xb8, 0x95, 0xf3, 0x85, 0x5b, 0xf9, 0xbe,
	0x70, 0x2b, 0xf0, 0x76, 0x24, 0x27, 0x2b, 0x58, 0xef, 0xd6, 0x50, 0xf1, 0x91, 0x79, 0xf3, 0x11,
	0x78, 0xbd, 0xcf, 0x13, 0xfd, 0xf6, 0x24, 0xc4, 0x91, 0x9c, 0x14, 0xbf, 0x8b, 0x94, 0x70, 0x12,
	0x8d, 0x13, 0x26, 0x34, 0xc9, 0xfa, 0x24, 0x11, 0x9a, 0xa5, 0x82, 0x8e, 0x49, 0xc9, 0xf9, 0x5c,
	0xad, 0x1d, 0x1d, 0x1f, 0x7f, 0xa9, 0xc2, 0xa3, 0x65, 0xe8, 0x6c, 0x55, 0xcc, 0xab, 0x5b, 0xa5,
	0x78, 0x33, 0x18, 0x79, 0x43, 0xa6, 0x69, 0x4c, 0x35, 0xfd, 0xbd, 0x9a, 0x15, 0xae, 0xe7, 0xdf,
	0xef, 0xd1, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x1f, 0x21, 0x25, 0x0c, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgGogoOnlyClient is the client API for MsgGogoOnly service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgGogoOnlyClient interface {
	// Send a request and returns the request as a response.
	Send(ctx context.Context, in *MsgRequestGogoOnly, opts ...grpc.CallOption) (*MsgResponseGoGoOnly, error)
}

type msgGogoOnlyClient struct {
	cc grpc1.ClientConn
}

func NewMsgGogoOnlyClient(cc grpc1.ClientConn) MsgGogoOnlyClient {
	return &msgGogoOnlyClient{cc}
}

func (c *msgGogoOnlyClient) Send(ctx context.Context, in *MsgRequestGogoOnly, opts ...grpc.CallOption) (*MsgResponseGoGoOnly, error) {
	out := new(MsgResponseGoGoOnly)
	err := c.cc.Invoke(ctx, "/testpbgogo.MsgGogoOnly/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgGogoOnlyServer is the server API for MsgGogoOnly service.
type MsgGogoOnlyServer interface {
	// Send a request and returns the request as a response.
	Send(context.Context, *MsgRequestGogoOnly) (*MsgResponseGoGoOnly, error)
}

// UnimplementedMsgGogoOnlyServer can be embedded to have forward compatible implementations.
type UnimplementedMsgGogoOnlyServer struct {
}

func (*UnimplementedMsgGogoOnlyServer) Send(ctx context.Context, req *MsgRequestGogoOnly) (*MsgResponseGoGoOnly, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}

func RegisterMsgGogoOnlyServer(s grpc1.Server, srv MsgGogoOnlyServer) {
	s.RegisterService(&_MsgGogoOnly_serviceDesc, srv)
}

func _MsgGogoOnly_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRequestGogoOnly)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgGogoOnlyServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testpbgogo.MsgGogoOnly/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgGogoOnlyServer).Send(ctx, req.(*MsgRequestGogoOnly))
	}
	return interceptor(ctx, in, info, handler)
}

var MsgGogoOnly_serviceDesc = _MsgGogoOnly_serviceDesc
var _MsgGogoOnly_serviceDesc = grpc.ServiceDesc{
	ServiceName: "testpbgogo.MsgGogoOnly",
	HandlerType: (*MsgGogoOnlyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _MsgGogoOnly_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "testpbgogo/msg.proto",
}

func (m *MsgRequestGogoOnly) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRequestGogoOnly) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRequestGogoOnly) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AValidatorAddress) > 0 {
		i -= len(m.AValidatorAddress)
		copy(dAtA[i:], m.AValidatorAddress)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.AValidatorAddress)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x8a
	}
	if len(m.AnAddress) > 0 {
		i -= len(m.AnAddress)
		copy(dAtA[i:], m.AnAddress)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.AnAddress)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	{
		size, err := m.ACoin.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMsg(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x92
	if len(m.Str) > 0 {
		i -= len(m.Str)
		copy(dAtA[i:], m.Str)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Str)))
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}

func (m *MsgResponseGoGoOnly) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgResponseGoGoOnly) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgResponseGoGoOnly) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Request != nil {
		{
			size, err := m.Request.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsg(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMsg(dAtA []byte, offset int, v uint64) int {
	offset -= sovMsg(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgRequestGogoOnly) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Str)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	l = m.ACoin.Size()
	n += 2 + l + sovMsg(uint64(l))
	l = len(m.AnAddress)
	if l > 0 {
		n += 2 + l + sovMsg(uint64(l))
	}
	l = len(m.AValidatorAddress)
	if l > 0 {
		n += 2 + l + sovMsg(uint64(l))
	}
	return n
}

func (m *MsgResponseGoGoOnly) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Request != nil {
		l = m.Request.Size()
		n += 1 + l + sovMsg(uint64(l))
	}
	return n
}

func sovMsg(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMsg(x uint64) (n int) {
	return sovMsg(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgRequestGogoOnly) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRequestGogoOnly: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRequestGogoOnly: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Str", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Str = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ACoin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ACoin.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AnAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AnAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 33:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AValidatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AValidatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgResponseGoGoOnly) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgResponseGoGoOnly: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgResponseGoGoOnly: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Request", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Request == nil {
				m.Request = &MsgRequestGogoOnly{}
			}
			if err := m.Request.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMsg(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMsg
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMsg
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMsg
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMsg        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMsg          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMsg = fmt.Errorf("proto: unexpected end of group")
)
