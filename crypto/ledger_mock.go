// Code generated by MockGen. DO NOT EDIT.
// Source: crypto/ledger_secp256k1.go

// Package crypto is a generated GoMock package.
package crypto

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLedgerSECP256K1 is a mock of LedgerSECP256K1 interface.
type MockLedgerSECP256K1 struct {
	ctrl     *gomock.Controller
	recorder *MockLedgerSECP256K1MockRecorder
}

// MockLedgerSECP256K1MockRecorder is the mock recorder for MockLedgerSECP256K1.
type MockLedgerSECP256K1MockRecorder struct {
	mock *MockLedgerSECP256K1
}

// NewMockLedgerSECP256K1 creates a new mock instance.
func NewMockLedgerSECP256K1(ctrl *gomock.Controller) *MockLedgerSECP256K1 {
	mock := &MockLedgerSECP256K1{ctrl: ctrl}
	mock.recorder = &MockLedgerSECP256K1MockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLedgerSECP256K1) EXPECT() *MockLedgerSECP256K1MockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockLedgerSECP256K1) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockLedgerSECP256K1MockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockLedgerSECP256K1)(nil).Close))
}

// GetAddressPubKeySECP256K1 mocks base method.
func (m *MockLedgerSECP256K1) GetAddressPubKeySECP256K1(arg0 []uint32, arg1 string) ([]byte, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAddressPubKeySECP256K1", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetAddressPubKeySECP256K1 indicates an expected call of GetAddressPubKeySECP256K1.
func (mr *MockLedgerSECP256K1MockRecorder) GetAddressPubKeySECP256K1(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAddressPubKeySECP256K1", reflect.TypeOf((*MockLedgerSECP256K1)(nil).GetAddressPubKeySECP256K1), arg0, arg1)
}

// GetPublicKeySECP256K1 mocks base method.
func (m *MockLedgerSECP256K1) GetPublicKeySECP256K1(arg0 []uint32) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPublicKeySECP256K1", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPublicKeySECP256K1 indicates an expected call of GetPublicKeySECP256K1.
func (mr *MockLedgerSECP256K1MockRecorder) GetPublicKeySECP256K1(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPublicKeySECP256K1", reflect.TypeOf((*MockLedgerSECP256K1)(nil).GetPublicKeySECP256K1), arg0)
}

// SignSECP256K1 mocks base method.
func (m *MockLedgerSECP256K1) SignSECP256K1(arg0 []uint32, arg1 []byte) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignSECP256K1", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SignSECP256K1 indicates an expected call of SignSECP256K1.
func (mr *MockLedgerSECP256K1MockRecorder) SignSECP256K1(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignSECP256K1", reflect.TypeOf((*MockLedgerSECP256K1)(nil).SignSECP256K1), arg0, arg1)
}
