// Code generated by protoc-gen-go-cosmos-orm-proto. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: testpb/bank_query.proto

package testpb

import (
	v1beta1 "cosmossdk.io/api/cosmos/base/query/v1beta1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetBalanceRequest is the BankQuery/GetBalanceRequest request type.
type GetBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address specifies the value of the address field in the primary key.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// denom specifies the value of the denom field in the primary key.
	Denom string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_bank_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_bank_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_testpb_bank_query_proto_rawDescGZIP(), []int{0}
}

func (x *GetBalanceRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetBalanceRequest) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

// GetBalanceResponse is the BankQuery/GetBalanceResponse response type.
type GetBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *Balance `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetBalanceResponse) Reset() {
	*x = GetBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_bank_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResponse) ProtoMessage() {}

func (x *GetBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_bank_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return file_testpb_bank_query_proto_rawDescGZIP(), []int{1}
}

func (x *GetBalanceResponse) GetValue() *Balance {
	if x != nil {
		return x.Value
	}
	return nil
}

// ListBalanceRequest is the BankQuery/ListBalanceRequest request type.
type ListBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query specifies the type of query - either a prefix or range query.
	//
	// Types that are assignable to Query:
	//
	//	*ListBalanceRequest_PrefixQuery
	//	*ListBalanceRequest_RangeQuery_
	Query isListBalanceRequest_Query `protobuf_oneof:"query"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListBalanceRequest) Reset() {
	*x = ListBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_bank_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBalanceRequest) ProtoMessage() {}

func (x *ListBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_bank_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBalanceRequest.ProtoReflect.Descriptor instead.
func (*ListBalanceRequest) Descriptor() ([]byte, []int) {
	return file_testpb_bank_query_proto_rawDescGZIP(), []int{2}
}

func (m *ListBalanceRequest) GetQuery() isListBalanceRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ListBalanceRequest) GetPrefixQuery() *ListBalanceRequest_IndexKey {
	if x, ok := x.GetQuery().(*ListBalanceRequest_PrefixQuery); ok {
		return x.PrefixQuery
	}
	return nil
}

func (x *ListBalanceRequest) GetRangeQuery() *ListBalanceRequest_RangeQuery {
	if x, ok := x.GetQuery().(*ListBalanceRequest_RangeQuery_); ok {
		return x.RangeQuery
	}
	return nil
}

func (x *ListBalanceRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isListBalanceRequest_Query interface {
	isListBalanceRequest_Query()
}

type ListBalanceRequest_PrefixQuery struct {
	// prefix_query specifies the index key value to use for the prefix query.
	PrefixQuery *ListBalanceRequest_IndexKey `protobuf:"bytes,1,opt,name=prefix_query,json=prefixQuery,proto3,oneof"`
}

type ListBalanceRequest_RangeQuery_ struct {
	// range_query specifies the index key from/to values to use for the range query.
	RangeQuery *ListBalanceRequest_RangeQuery `protobuf:"bytes,2,opt,name=range_query,json=rangeQuery,proto3,oneof"`
}

func (*ListBalanceRequest_PrefixQuery) isListBalanceRequest_Query() {}

func (*ListBalanceRequest_RangeQuery_) isListBalanceRequest_Query() {}

// ListBalanceResponse is the BankQuery/ListBalanceResponse response type.
type ListBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*Balance `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListBalanceResponse) Reset() {
	*x = ListBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_bank_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBalanceResponse) ProtoMessage() {}

func (x *ListBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_bank_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBalanceResponse.ProtoReflect.Descriptor instead.
func (*ListBalanceResponse) Descriptor() ([]byte, []int) {
	return file_testpb_bank_query_proto_rawDescGZIP(), []int{3}
}

func (x *ListBalanceResponse) GetValues() []*Balance {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ListBalanceResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// GetSupplyRequest is the BankQuery/GetSupplyRequest request type.
type GetSupplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// denom specifies the value of the denom field in the primary key.
	Denom string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
}

func (x *GetSupplyRequest) Reset() {
	*x = GetSupplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_bank_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSupplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupplyRequest) ProtoMessage() {}

func (x *GetSupplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_bank_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupplyRequest.ProtoReflect.Descriptor instead.
func (*GetSupplyRequest) Descriptor() ([]byte, []int) {
	return file_testpb_bank_query_proto_rawDescGZIP(), []int{4}
}

func (x *GetSupplyRequest) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

// GetSupplyResponse is the BankQuery/GetSupplyResponse response type.
type GetSupplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *Supply `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetSupplyResponse) Reset() {
	*x = GetSupplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_bank_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSupplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupplyResponse) ProtoMessage() {}

func (x *GetSupplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_bank_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupplyResponse.ProtoReflect.Descriptor instead.
func (*GetSupplyResponse) Descriptor() ([]byte, []int) {
	return file_testpb_bank_query_proto_rawDescGZIP(), []int{5}
}

func (x *GetSupplyResponse) GetValue() *Supply {
	if x != nil {
		return x.Value
	}
	return nil
}

// ListSupplyRequest is the BankQuery/ListSupplyRequest request type.
type ListSupplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query specifies the type of query - either a prefix or range query.
	//
	// Types that are assignable to Query:
	//
	//	*ListSupplyRequest_PrefixQuery
	//	*ListSupplyRequest_RangeQuery_
	Query isListSupplyRequest_Query `protobuf_oneof:"query"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListSupplyRequest) Reset() {
	*x = ListSupplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_bank_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSupplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSupplyRequest) ProtoMessage() {}

func (x *ListSupplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_bank_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSupplyRequest.ProtoReflect.Descriptor instead.
func (*ListSupplyRequest) Descriptor() ([]byte, []int) {
	return file_testpb_bank_query_proto_rawDescGZIP(), []int{6}
}

func (m *ListSupplyRequest) GetQuery() isListSupplyRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ListSupplyRequest) GetPrefixQuery() *ListSupplyRequest_IndexKey {
	if x, ok := x.GetQuery().(*ListSupplyRequest_PrefixQuery); ok {
		return x.PrefixQuery
	}
	return nil
}

func (x *ListSupplyRequest) GetRangeQuery() *ListSupplyRequest_RangeQuery {
	if x, ok := x.GetQuery().(*ListSupplyRequest_RangeQuery_); ok {
		return x.RangeQuery
	}
	return nil
}

func (x *ListSupplyRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isListSupplyRequest_Query interface {
	isListSupplyRequest_Query()
}

type ListSupplyRequest_PrefixQuery struct {
	// prefix_query specifies the index key value to use for the prefix query.
	PrefixQuery *ListSupplyRequest_IndexKey `protobuf:"bytes,1,opt,name=prefix_query,json=prefixQuery,proto3,oneof"`
}

type ListSupplyRequest_RangeQuery_ struct {
	// range_query specifies the index key from/to values to use for the range query.
	RangeQuery *ListSupplyRequest_RangeQuery `protobuf:"bytes,2,opt,name=range_query,json=rangeQuery,proto3,oneof"`
}

func (*ListSupplyRequest_PrefixQuery) isListSupplyRequest_Query() {}

func (*ListSupplyRequest_RangeQuery_) isListSupplyRequest_Query() {}

// ListSupplyResponse is the BankQuery/ListSupplyResponse response type.
type ListSupplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*Supply `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListSupplyResponse) Reset() {
	*x = ListSupplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_bank_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSupplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSupplyResponse) ProtoMessage() {}

func (x *ListSupplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_bank_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSupplyResponse.ProtoReflect.Descriptor instead.
func (*ListSupplyResponse) Descriptor() ([]byte, []int) {
	return file_testpb_bank_query_proto_rawDescGZIP(), []int{7}
}

func (x *ListSupplyResponse) GetValues() []*Supply {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ListSupplyResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// IndexKey specifies the value of an index key to use in prefix and range queries.
type ListBalanceRequest_IndexKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key specifies the index key value.
	//
	// Types that are assignable to Key:
	//
	//	*ListBalanceRequest_IndexKey_AddressDenom_
	//	*ListBalanceRequest_IndexKey_Denom_
	Key isListBalanceRequest_IndexKey_Key `protobuf_oneof:"key"`
}

func (x *ListBalanceRequest_IndexKey) Reset() {
	*x = ListBalanceRequest_IndexKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_bank_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBalanceRequest_IndexKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBalanceRequest_IndexKey) ProtoMessage() {}

func (x *ListBalanceRequest_IndexKey) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_bank_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBalanceRequest_IndexKey.ProtoReflect.Descriptor instead.
func (*ListBalanceRequest_IndexKey) Descriptor() ([]byte, []int) {
	return file_testpb_bank_query_proto_rawDescGZIP(), []int{2, 0}
}

func (m *ListBalanceRequest_IndexKey) GetKey() isListBalanceRequest_IndexKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *ListBalanceRequest_IndexKey) GetAddressDenom() *ListBalanceRequest_IndexKey_AddressDenom {
	if x, ok := x.GetKey().(*ListBalanceRequest_IndexKey_AddressDenom_); ok {
		return x.AddressDenom
	}
	return nil
}

func (x *ListBalanceRequest_IndexKey) GetDenom() *ListBalanceRequest_IndexKey_Denom {
	if x, ok := x.GetKey().(*ListBalanceRequest_IndexKey_Denom_); ok {
		return x.Denom
	}
	return nil
}

type isListBalanceRequest_IndexKey_Key interface {
	isListBalanceRequest_IndexKey_Key()
}

type ListBalanceRequest_IndexKey_AddressDenom_ struct {
	// address_denom specifies the value of the AddressDenom index key to use in the query.
	AddressDenom *ListBalanceRequest_IndexKey_AddressDenom `protobuf:"bytes,1,opt,name=address_denom,json=addressDenom,proto3,oneof"`
}

type ListBalanceRequest_IndexKey_Denom_ struct {
	// denom specifies the value of the Denom index key to use in the query.
	Denom *ListBalanceRequest_IndexKey_Denom `protobuf:"bytes,2,opt,name=denom,proto3,oneof"`
}

func (*ListBalanceRequest_IndexKey_AddressDenom_) isListBalanceRequest_IndexKey_Key() {}

func (*ListBalanceRequest_IndexKey_Denom_) isListBalanceRequest_IndexKey_Key() {}

// RangeQuery specifies the from/to index keys for a range query.
type ListBalanceRequest_RangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// from is the index key to use for the start of the range query.
	// To query from the start of an index, specify an index key for that index with empty values.
	From *ListBalanceRequest_IndexKey `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// to is the index key to use for the end of the range query.
	// The index key type MUST be the same as the index key type used for from.
	// To query from to the end of an index it can be omitted.
	To *ListBalanceRequest_IndexKey `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListBalanceRequest_RangeQuery) Reset() {
	*x = ListBalanceRequest_RangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_bank_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBalanceRequest_RangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBalanceRequest_RangeQuery) ProtoMessage() {}

func (x *ListBalanceRequest_RangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_bank_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBalanceRequest_RangeQuery.ProtoReflect.Descriptor instead.
func (*ListBalanceRequest_RangeQuery) Descriptor() ([]byte, []int) {
	return file_testpb_bank_query_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ListBalanceRequest_RangeQuery) GetFrom() *ListBalanceRequest_IndexKey {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListBalanceRequest_RangeQuery) GetTo() *ListBalanceRequest_IndexKey {
	if x != nil {
		return x.To
	}
	return nil
}

type ListBalanceRequest_IndexKey_AddressDenom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address is the value of the address field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Address *string `protobuf:"bytes,1,opt,name=address,proto3,oneof" json:"address,omitempty"`
	// denom is the value of the denom field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Denom *string `protobuf:"bytes,2,opt,name=denom,proto3,oneof" json:"denom,omitempty"`
}

func (x *ListBalanceRequest_IndexKey_AddressDenom) Reset() {
	*x = ListBalanceRequest_IndexKey_AddressDenom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_bank_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBalanceRequest_IndexKey_AddressDenom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBalanceRequest_IndexKey_AddressDenom) ProtoMessage() {}

func (x *ListBalanceRequest_IndexKey_AddressDenom) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_bank_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBalanceRequest_IndexKey_AddressDenom.ProtoReflect.Descriptor instead.
func (*ListBalanceRequest_IndexKey_AddressDenom) Descriptor() ([]byte, []int) {
	return file_testpb_bank_query_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *ListBalanceRequest_IndexKey_AddressDenom) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *ListBalanceRequest_IndexKey_AddressDenom) GetDenom() string {
	if x != nil && x.Denom != nil {
		return *x.Denom
	}
	return ""
}

type ListBalanceRequest_IndexKey_Denom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// denom is the value of the denom field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Denom *string `protobuf:"bytes,1,opt,name=denom,proto3,oneof" json:"denom,omitempty"`
}

func (x *ListBalanceRequest_IndexKey_Denom) Reset() {
	*x = ListBalanceRequest_IndexKey_Denom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_bank_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBalanceRequest_IndexKey_Denom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBalanceRequest_IndexKey_Denom) ProtoMessage() {}

func (x *ListBalanceRequest_IndexKey_Denom) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_bank_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBalanceRequest_IndexKey_Denom.ProtoReflect.Descriptor instead.
func (*ListBalanceRequest_IndexKey_Denom) Descriptor() ([]byte, []int) {
	return file_testpb_bank_query_proto_rawDescGZIP(), []int{2, 0, 1}
}

func (x *ListBalanceRequest_IndexKey_Denom) GetDenom() string {
	if x != nil && x.Denom != nil {
		return *x.Denom
	}
	return ""
}

// IndexKey specifies the value of an index key to use in prefix and range queries.
type ListSupplyRequest_IndexKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key specifies the index key value.
	//
	// Types that are assignable to Key:
	//
	//	*ListSupplyRequest_IndexKey_Denom_
	Key isListSupplyRequest_IndexKey_Key `protobuf_oneof:"key"`
}

func (x *ListSupplyRequest_IndexKey) Reset() {
	*x = ListSupplyRequest_IndexKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_bank_query_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSupplyRequest_IndexKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSupplyRequest_IndexKey) ProtoMessage() {}

func (x *ListSupplyRequest_IndexKey) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_bank_query_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSupplyRequest_IndexKey.ProtoReflect.Descriptor instead.
func (*ListSupplyRequest_IndexKey) Descriptor() ([]byte, []int) {
	return file_testpb_bank_query_proto_rawDescGZIP(), []int{6, 0}
}

func (m *ListSupplyRequest_IndexKey) GetKey() isListSupplyRequest_IndexKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *ListSupplyRequest_IndexKey) GetDenom() *ListSupplyRequest_IndexKey_Denom {
	if x, ok := x.GetKey().(*ListSupplyRequest_IndexKey_Denom_); ok {
		return x.Denom
	}
	return nil
}

type isListSupplyRequest_IndexKey_Key interface {
	isListSupplyRequest_IndexKey_Key()
}

type ListSupplyRequest_IndexKey_Denom_ struct {
	// denom specifies the value of the Denom index key to use in the query.
	Denom *ListSupplyRequest_IndexKey_Denom `protobuf:"bytes,1,opt,name=denom,proto3,oneof"`
}

func (*ListSupplyRequest_IndexKey_Denom_) isListSupplyRequest_IndexKey_Key() {}

// RangeQuery specifies the from/to index keys for a range query.
type ListSupplyRequest_RangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// from is the index key to use for the start of the range query.
	// To query from the start of an index, specify an index key for that index with empty values.
	From *ListSupplyRequest_IndexKey `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// to is the index key to use for the end of the range query.
	// The index key type MUST be the same as the index key type used for from.
	// To query from to the end of an index it can be omitted.
	To *ListSupplyRequest_IndexKey `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListSupplyRequest_RangeQuery) Reset() {
	*x = ListSupplyRequest_RangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_bank_query_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSupplyRequest_RangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSupplyRequest_RangeQuery) ProtoMessage() {}

func (x *ListSupplyRequest_RangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_bank_query_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSupplyRequest_RangeQuery.ProtoReflect.Descriptor instead.
func (*ListSupplyRequest_RangeQuery) Descriptor() ([]byte, []int) {
	return file_testpb_bank_query_proto_rawDescGZIP(), []int{6, 1}
}

func (x *ListSupplyRequest_RangeQuery) GetFrom() *ListSupplyRequest_IndexKey {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListSupplyRequest_RangeQuery) GetTo() *ListSupplyRequest_IndexKey {
	if x != nil {
		return x.To
	}
	return nil
}

type ListSupplyRequest_IndexKey_Denom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// denom is the value of the denom field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Denom *string `protobuf:"bytes,1,opt,name=denom,proto3,oneof" json:"denom,omitempty"`
}

func (x *ListSupplyRequest_IndexKey_Denom) Reset() {
	*x = ListSupplyRequest_IndexKey_Denom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testpb_bank_query_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSupplyRequest_IndexKey_Denom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSupplyRequest_IndexKey_Denom) ProtoMessage() {}

func (x *ListSupplyRequest_IndexKey_Denom) ProtoReflect() protoreflect.Message {
	mi := &file_testpb_bank_query_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSupplyRequest_IndexKey_Denom.ProtoReflect.Descriptor instead.
func (*ListSupplyRequest_IndexKey_Denom) Descriptor() ([]byte, []int) {
	return file_testpb_bank_query_proto_rawDescGZIP(), []int{6, 0, 0}
}

func (x *ListSupplyRequest_IndexKey_Denom) GetDenom() string {
	if x != nil && x.Denom != nil {
		return *x.Denom
	}
	return ""
}

var File_testpb_bank_query_proto protoreflect.FileDescriptor

var file_testpb_bank_query_proto_rawDesc = []byte{
	0x0a, 0x17, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x74, 0x65, 0x73, 0x74, 0x70,
	0x62, 0x1a, 0x2a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x74,
	0x65, 0x73, 0x74, 0x70, 0x62, 0x2f, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x43, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x22, 0x3b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xb3, 0x05, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x0c, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x48, 0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70,
	0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48,
	0x00, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x46, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xbb, 0x02, 0x0a, 0x08, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b,
	0x65, 0x79, 0x12, 0x57, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x65,
	0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x0c, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x41, 0x0a, 0x05, 0x64,
	0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e,
	0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x1a, 0x5e,
	0x0a, 0x0c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x1d,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05,
	0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x1a, 0x2c,
	0x0a, 0x05, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x19, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x88,
	0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x42, 0x05, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x1a, 0x7a, 0x0a, 0x0a, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x37, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x33, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52, 0x02, 0x74, 0x6f, 0x42,
	0x07, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x87, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x22, 0x39, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf4, 0x03, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a,
	0x0c, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x47, 0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x81, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x4b, 0x65, 0x79, 0x12, 0x40, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x48, 0x00, 0x52,
	0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x1a, 0x2c, 0x0a, 0x05, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12,
	0x19, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x64,
	0x65, 0x6e, 0x6f, 0x6d, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x78, 0x0a, 0x0a, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x32, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6c,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65,
	0x79, 0x52, 0x02, 0x74, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x85,
	0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xae, 0x02, 0x0a, 0x10, 0x42, 0x61, 0x6e, 0x6b, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x1a, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x19,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x86, 0x01, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x42, 0x0e, 0x42, 0x61, 0x6e, 0x6b, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x6f, 0x72, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58,
	0xaa, 0x02, 0x06, 0x54, 0x65, 0x73, 0x74, 0x70, 0x62, 0xca, 0x02, 0x06, 0x54, 0x65, 0x73, 0x74,
	0x70, 0x62, 0xe2, 0x02, 0x12, 0x54, 0x65, 0x73, 0x74, 0x70, 0x62, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x06, 0x54, 0x65, 0x73, 0x74, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_testpb_bank_query_proto_rawDescOnce sync.Once
	file_testpb_bank_query_proto_rawDescData = file_testpb_bank_query_proto_rawDesc
)

func file_testpb_bank_query_proto_rawDescGZIP() []byte {
	file_testpb_bank_query_proto_rawDescOnce.Do(func() {
		file_testpb_bank_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_testpb_bank_query_proto_rawDescData)
	})
	return file_testpb_bank_query_proto_rawDescData
}

var file_testpb_bank_query_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_testpb_bank_query_proto_goTypes = []interface{}{
	(*GetBalanceRequest)(nil),                        // 0: testpb.GetBalanceRequest
	(*GetBalanceResponse)(nil),                       // 1: testpb.GetBalanceResponse
	(*ListBalanceRequest)(nil),                       // 2: testpb.ListBalanceRequest
	(*ListBalanceResponse)(nil),                      // 3: testpb.ListBalanceResponse
	(*GetSupplyRequest)(nil),                         // 4: testpb.GetSupplyRequest
	(*GetSupplyResponse)(nil),                        // 5: testpb.GetSupplyResponse
	(*ListSupplyRequest)(nil),                        // 6: testpb.ListSupplyRequest
	(*ListSupplyResponse)(nil),                       // 7: testpb.ListSupplyResponse
	(*ListBalanceRequest_IndexKey)(nil),              // 8: testpb.ListBalanceRequest.IndexKey
	(*ListBalanceRequest_RangeQuery)(nil),            // 9: testpb.ListBalanceRequest.RangeQuery
	(*ListBalanceRequest_IndexKey_AddressDenom)(nil), // 10: testpb.ListBalanceRequest.IndexKey.AddressDenom
	(*ListBalanceRequest_IndexKey_Denom)(nil),        // 11: testpb.ListBalanceRequest.IndexKey.Denom
	(*ListSupplyRequest_IndexKey)(nil),               // 12: testpb.ListSupplyRequest.IndexKey
	(*ListSupplyRequest_RangeQuery)(nil),             // 13: testpb.ListSupplyRequest.RangeQuery
	(*ListSupplyRequest_IndexKey_Denom)(nil),         // 14: testpb.ListSupplyRequest.IndexKey.Denom
	(*Balance)(nil),                                  // 15: testpb.Balance
	(*v1beta1.PageRequest)(nil),                      // 16: cosmos.base.query.v1beta1.PageRequest
	(*v1beta1.PageResponse)(nil),                     // 17: cosmos.base.query.v1beta1.PageResponse
	(*Supply)(nil),                                   // 18: testpb.Supply
}
var file_testpb_bank_query_proto_depIdxs = []int32{
	15, // 0: testpb.GetBalanceResponse.value:type_name -> testpb.Balance
	8,  // 1: testpb.ListBalanceRequest.prefix_query:type_name -> testpb.ListBalanceRequest.IndexKey
	9,  // 2: testpb.ListBalanceRequest.range_query:type_name -> testpb.ListBalanceRequest.RangeQuery
	16, // 3: testpb.ListBalanceRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	15, // 4: testpb.ListBalanceResponse.values:type_name -> testpb.Balance
	17, // 5: testpb.ListBalanceResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	18, // 6: testpb.GetSupplyResponse.value:type_name -> testpb.Supply
	12, // 7: testpb.ListSupplyRequest.prefix_query:type_name -> testpb.ListSupplyRequest.IndexKey
	13, // 8: testpb.ListSupplyRequest.range_query:type_name -> testpb.ListSupplyRequest.RangeQuery
	16, // 9: testpb.ListSupplyRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	18, // 10: testpb.ListSupplyResponse.values:type_name -> testpb.Supply
	17, // 11: testpb.ListSupplyResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	10, // 12: testpb.ListBalanceRequest.IndexKey.address_denom:type_name -> testpb.ListBalanceRequest.IndexKey.AddressDenom
	11, // 13: testpb.ListBalanceRequest.IndexKey.denom:type_name -> testpb.ListBalanceRequest.IndexKey.Denom
	8,  // 14: testpb.ListBalanceRequest.RangeQuery.from:type_name -> testpb.ListBalanceRequest.IndexKey
	8,  // 15: testpb.ListBalanceRequest.RangeQuery.to:type_name -> testpb.ListBalanceRequest.IndexKey
	14, // 16: testpb.ListSupplyRequest.IndexKey.denom:type_name -> testpb.ListSupplyRequest.IndexKey.Denom
	12, // 17: testpb.ListSupplyRequest.RangeQuery.from:type_name -> testpb.ListSupplyRequest.IndexKey
	12, // 18: testpb.ListSupplyRequest.RangeQuery.to:type_name -> testpb.ListSupplyRequest.IndexKey
	0,  // 19: testpb.BankQueryService.GetBalance:input_type -> testpb.GetBalanceRequest
	2,  // 20: testpb.BankQueryService.ListBalance:input_type -> testpb.ListBalanceRequest
	4,  // 21: testpb.BankQueryService.GetSupply:input_type -> testpb.GetSupplyRequest
	6,  // 22: testpb.BankQueryService.ListSupply:input_type -> testpb.ListSupplyRequest
	1,  // 23: testpb.BankQueryService.GetBalance:output_type -> testpb.GetBalanceResponse
	3,  // 24: testpb.BankQueryService.ListBalance:output_type -> testpb.ListBalanceResponse
	5,  // 25: testpb.BankQueryService.GetSupply:output_type -> testpb.GetSupplyResponse
	7,  // 26: testpb.BankQueryService.ListSupply:output_type -> testpb.ListSupplyResponse
	23, // [23:27] is the sub-list for method output_type
	19, // [19:23] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_testpb_bank_query_proto_init() }
func file_testpb_bank_query_proto_init() {
	if File_testpb_bank_query_proto != nil {
		return
	}
	file_testpb_bank_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_testpb_bank_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_bank_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_bank_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_bank_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_bank_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSupplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_bank_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSupplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_bank_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSupplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_bank_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSupplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_bank_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBalanceRequest_IndexKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_bank_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBalanceRequest_RangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_bank_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBalanceRequest_IndexKey_AddressDenom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_bank_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBalanceRequest_IndexKey_Denom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_bank_query_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSupplyRequest_IndexKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_bank_query_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSupplyRequest_RangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testpb_bank_query_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSupplyRequest_IndexKey_Denom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_testpb_bank_query_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ListBalanceRequest_PrefixQuery)(nil),
		(*ListBalanceRequest_RangeQuery_)(nil),
	}
	file_testpb_bank_query_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ListSupplyRequest_PrefixQuery)(nil),
		(*ListSupplyRequest_RangeQuery_)(nil),
	}
	file_testpb_bank_query_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ListBalanceRequest_IndexKey_AddressDenom_)(nil),
		(*ListBalanceRequest_IndexKey_Denom_)(nil),
	}
	file_testpb_bank_query_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_testpb_bank_query_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_testpb_bank_query_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*ListSupplyRequest_IndexKey_Denom_)(nil),
	}
	file_testpb_bank_query_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_testpb_bank_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_testpb_bank_query_proto_goTypes,
		DependencyIndexes: file_testpb_bank_query_proto_depIdxs,
		MessageInfos:      file_testpb_bank_query_proto_msgTypes,
	}.Build()
	File_testpb_bank_query_proto = out.File
	file_testpb_bank_query_proto_rawDesc = nil
	file_testpb_bank_query_proto_goTypes = nil
	file_testpb_bank_query_proto_depIdxs = nil
}
