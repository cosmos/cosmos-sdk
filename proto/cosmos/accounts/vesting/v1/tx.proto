syntax = "proto3";
package cosmos.accounts.vesting.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/accounts/vesting/v1/vesting.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "google/protobuf/any.proto";

option go_package = "cosmossdk.io/x/vesting/types/v1";

//-------------------------------------- INIT --------------------------------------

// MsgInitVestingAccount defines a message that enables creating a vesting
// account.
message MsgInitVestingAccount {
  option (amino.name) = "cosmos-sdk/MsgInitVestingAccount";

  option (gogoproto.equal) = true;

  repeated cosmos.base.v1beta1.Coin amount = 1 [
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true,
    (amino.encoding)         = "legacy_coins",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];

  // end of vesting as unix time (in seconds).
  int64 end_time = 2;
  bool  delayed  = 3;
  // start of vesting as unix time (in seconds).
  //
  // Since 0.51.x
  int64 start_time = 4;
}

// MsgInitVestingAccountResponse defines the Msg/InitVestingAccount response type.
message MsgInitVestingAccountResponse {}

// MsgInitVestingAccount defines a message that enables creating a vesting
// account.
message MsgInitPeriodicVestingAccount {
  option (amino.name) = "cosmos-sdk/MsgInitPeriodVestAccount";

  option (gogoproto.equal) = false;

  // start of vesting as unix time (in seconds).
  int64           start_time      = 1;
  repeated Period vesting_periods = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgInitVestingAccountResponse defines the Msg/InitPeriodicVestingAccount
// response type.
message MsgInitPeriodicVestingAccountResponse {}
