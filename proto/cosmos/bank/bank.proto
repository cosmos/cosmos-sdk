syntax = "proto3";
package cosmos.bank;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/cosmos.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/bank/types";

// Params defines the set of bank parameters.
message Params {
  option (gogoproto.goproto_stringer) = false;
  repeated SendEnabled send_enabled = 1[
    (gogoproto.moretags) = "yaml:\"send_enabled,omitempty\""
  ];
  bool default_send_enabled = 2[
    (gogoproto.moretags) = "yaml:\"default_send_enabled,omitempty\""
  ];
}

// Send enabled configuration properties for each denomination
message SendEnabled {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = false;
  string denom = 1;
  bool enabled = 2;
}

// MsgSend - high level transaction of the coin module
message MsgSend {
  option (gogoproto.equal) = true;

  bytes from_address = 1 [
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.moretags) = "yaml:\"from_address\""
  ];
  bytes to_address = 2 [
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.moretags) = "yaml:\"to_address\""
  ];
  repeated cosmos.Coin amount = 3
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

// Input models transaction input
message Input {
  option (gogoproto.equal) = true;

  bytes    address                  = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  repeated cosmos.Coin coins = 2
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

// Output models transaction outputs
message Output {
  option (gogoproto.equal) = true;

  bytes    address                  = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  repeated cosmos.Coin coins = 2
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

// MsgMultiSend - high level transaction of the coin module
message MsgMultiSend {
  option (gogoproto.equal) = true;

  repeated Input  inputs  = 1 [(gogoproto.nullable) = false];
  repeated Output outputs = 2 [(gogoproto.nullable) = false];
}

// Supply represents a struct that passively keeps track of the total supply
// amounts in the network.
message Supply {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;
  option (cosmos_proto.implements_interface) = "*github.com/cosmos/cosmos-sdk/x/bank/exported.SupplyI";

  repeated cosmos.Coin total = 1
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}
