syntax = "proto3";
package cosmos.bank.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/bank/types";

// Params defines the set of bank parameters.
message Params {
  option (gogoproto.goproto_stringer)       = false;
  repeated SendEnabled send_enabled         = 1 [(gogoproto.moretags) = "yaml:\"send_enabled,omitempty\""];
  bool                 default_send_enabled = 2 [(gogoproto.moretags) = "yaml:\"default_send_enabled,omitempty\""];
}

// Send enabled configuration properties for each denomination
message SendEnabled {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = false;
  string denom                        = 1;
  bool   enabled                      = 2;
}

// Input models transaction input
message Input {
  option (gogoproto.equal) = true;

  bytes    address                        = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  repeated cosmos.base.v1beta1.Coin coins = 2
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

// Output models transaction outputs
message Output {
  option (gogoproto.equal) = true;

  bytes    address                        = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  repeated cosmos.base.v1beta1.Coin coins = 2
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

// Supply represents a struct that passively keeps track of the total supply
// amounts in the network.
message Supply {
  option (gogoproto.equal)                   = true;
  option (gogoproto.goproto_getters)         = false;
  option (gogoproto.goproto_stringer)        = false;
  option (cosmos_proto.implements_interface) = "*github.com/cosmos/cosmos-sdk/x/bank/exported.SupplyI";

  repeated cosmos.base.v1beta1.Coin total = 1
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

// DenomUnits represents a struct that describes different
// denominations units of the basic token
message DenomUnits {
  string          denom    = 1;
  uint32          exponent = 2;
  repeated string aliases  = 3;
}

// Metadata represents a struct that describes
// a basic token
message Metadata {
  string              description = 1;
  repeated DenomUnits denom_units = 2;
  string              base        = 3;
  string              display     = 4;
}
