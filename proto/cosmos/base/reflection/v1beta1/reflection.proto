syntax = "proto3";
package cosmos.base.reflection.v1beta1;

option go_package = "github.com/cosmos/cosmos-sdk/client/grpc/reflection";

// ReflectionService defines a service for interface reflection.
service ReflectionService {
    // ListInterfaces lists all the interfaces registered in the interface
    // registry.
    rpc ListAllInterfaces(ListInterfacesRequest) returns (ListInterfacesResponse) {};
    // ListImplementations list all the concrete types that implement a given
    // interface.
    rpc ListImplementations(ListImplementationsRequest) returns (ListImplementationsResponse) {};
}

// ListInterfacesRequest is the request type of the ListInterfaces RPC.
message ListInterfacesRequest { }

// ListInterfacesResponse is the response type of the ListInterfaces RPC.
message ListInterfacesResponse {
    // interface_names is an array of all the registered interfaces.
    repeated string interface_names = 1;
}

// ListImplementationsRequest is the request type of the ListImplementations RPC.
message ListImplementationsRequest {
    // interface_name defines the interface to query the implementations for.
    string interface_name = 1;
}

// ListImplementationsResponse is the response type of the ListImplementations RPC.
message ListImplementationsResponse {
    repeated string implementation_message_names = 1;
}
