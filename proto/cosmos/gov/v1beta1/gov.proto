syntax = "proto3";
package cosmos.gov.v1beta1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";

option go_package                       = "github.com/cosmos/cosmos-sdk/x/gov/types";
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all)         = false;
option (gogoproto.goproto_getters_all)  = false;

// VoteOption enumerates the valid vote options for a given governance proposal.
enum VoteOption {
  option (gogoproto.goproto_enum_prefix) = false;

  // VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
  VOTE_OPTION_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "OptionEmpty"];
  // VOTE_OPTION_YES defines a yes vote option.
  VOTE_OPTION_YES = 1 [(gogoproto.enumvalue_customname) = "OptionYes"];
  // VOTE_OPTION_ABSTAIN defines an abstain vote option.
  VOTE_OPTION_ABSTAIN = 2 [(gogoproto.enumvalue_customname) = "OptionAbstain"];
  // VOTE_OPTION_NO defines a no vote option.
  VOTE_OPTION_NO = 3 [(gogoproto.enumvalue_customname) = "OptionNo"];
  // VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
  VOTE_OPTION_NO_WITH_VETO = 4 [(gogoproto.enumvalue_customname) = "OptionNoWithVeto"];
}

// WeightedVoteOption defines a unit of vote for vote split.
message WeightedVoteOption {
  VoteOption option = 1;
  string     weight = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"weight\""
  ];
}

// TextProposal defines a standard text proposal whose changes need to be
// manually updated in case of approval.
message TextProposal {
  option (cosmos_proto.implements_interface) = "Content";

  option (gogoproto.equal) = true;

  string title       = 1;
  string description = 2;
}

// Deposit defines an amount deposited by an account address to an active
// proposal.
message Deposit {
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.equal)           = false;

  uint64   proposal_id                     = 1 [(gogoproto.moretags) = "yaml:\"proposal_id\""];
  string   depositor                       = 2;
  repeated cosmos.base.v1beta1.Coin amount = 3
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

// Proposal defines the core field members of a governance proposal.
message Proposal {
  option (gogoproto.equal) = true;

  uint64              proposal_id        = 1 [(gogoproto.jsontag) = "id", (gogoproto.moretags) = "yaml:\"id\""];
  google.protobuf.Any content            = 2 [(cosmos_proto.accepts_interface) = "Content"];
  ProposalStatus      status             = 3 [(gogoproto.moretags) = "yaml:\"proposal_status\""];
  TallyResult         final_tally_result = 4
      [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"final_tally_result\""];
  google.protobuf.Timestamp submit_time = 5
      [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"submit_time\""];
  google.protobuf.Timestamp deposit_end_time = 6
      [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"deposit_end_time\""];
  repeated cosmos.base.v1beta1.Coin total_deposit = 7 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.moretags)     = "yaml:\"total_deposit\""
  ];
  google.protobuf.Timestamp voting_start_time = 8
      [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"voting_start_time\""];
  google.protobuf.Timestamp voting_end_time = 9
      [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"voting_end_time\""];
}

// ProposalStatus enumerates the valid statuses of a proposal.
enum ProposalStatus {
  option (gogoproto.goproto_enum_prefix) = false;

  // PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
  PROPOSAL_STATUS_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "StatusNil"];
  // PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
  // period.
  PROPOSAL_STATUS_DEPOSIT_PERIOD = 1 [(gogoproto.enumvalue_customname) = "StatusDepositPeriod"];
  // PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
  // period.
  PROPOSAL_STATUS_VOTING_PERIOD = 2 [(gogoproto.enumvalue_customname) = "StatusVotingPeriod"];
  // PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
  // passed.
  PROPOSAL_STATUS_PASSED = 3 [(gogoproto.enumvalue_customname) = "StatusPassed"];
  // PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
  // been rejected.
  PROPOSAL_STATUS_REJECTED = 4 [(gogoproto.enumvalue_customname) = "StatusRejected"];
  // PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
  // failed.
  PROPOSAL_STATUS_FAILED = 5 [(gogoproto.enumvalue_customname) = "StatusFailed"];
}

// TallyResult defines a standard tally for a governance proposal.
message TallyResult {
  option (gogoproto.equal) = true;

  string yes     = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string abstain = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string no      = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string no_with_veto = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"no_with_veto\""
  ];
}

// Vote defines a vote on a governance proposal.
// A Vote consists of a proposal ID, the voter, and the vote option.
message Vote {
  option (gogoproto.goproto_stringer) = false;
  option (gogoproto.equal)            = false;

  uint64 proposal_id = 1 [(gogoproto.moretags) = "yaml:\"proposal_id\""];
  string voter       = 2;
  // Deprecated: Prefer to use `options` instead. This field is set in queries
  // if and only if `len(options) == 1` and that option has weight 1. In all
  // other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
  VoteOption                  option  = 3 [deprecated = true];
  repeated WeightedVoteOption options = 4 [(gogoproto.nullable) = false];
}

// DepositParams defines the params for deposits on governance proposals.
message DepositParams {
  //  Minimum deposit for a proposal to enter voting period.
  repeated cosmos.base.v1beta1.Coin min_deposit = 1 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.moretags)     = "yaml:\"min_deposit\"",
    (gogoproto.jsontag)      = "min_deposit,omitempty"
  ];

  //  Maximum period for Atom holders to deposit on a proposal. Initial value: 2
  //  months.
  google.protobuf.Duration max_deposit_period = 2 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.jsontag)     = "max_deposit_period,omitempty",
    (gogoproto.moretags)    = "yaml:\"max_deposit_period\""
  ];
}

// VotingParams defines the params for voting on governance proposals.
message VotingParams {
  //  Length of the voting period.
  google.protobuf.Duration voting_period = 1 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.jsontag)     = "voting_period,omitempty",
    (gogoproto.moretags)    = "yaml:\"voting_period\""
  ];
}

// TallyParams defines the params for tallying votes on governance proposals.
message TallyParams {
  //  Minimum percentage of total stake needed to vote for a result to be
  //  considered valid.
  bytes quorum = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "quorum,omitempty"
  ];

  //  Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.
  bytes threshold = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "threshold,omitempty"
  ];

  //  Minimum value of Veto votes to Total votes ratio for proposal to be
  //  vetoed. Default value: 1/3.
  bytes veto_threshold = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "veto_threshold,omitempty",
    (gogoproto.moretags)   = "yaml:\"veto_threshold\""
  ];
}
