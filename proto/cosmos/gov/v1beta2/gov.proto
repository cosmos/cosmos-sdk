syntax = "proto3";
package cosmos.gov.v1beta2;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/gov/types/v1beta2";

// VoteOption enumerates the valid vote options for a given governance proposal.
enum VoteOption {
  // VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
  VOTE_OPTION_UNSPECIFIED = 0;
  // VOTE_OPTION_YES defines a yes vote option.
  VOTE_OPTION_YES = 1;
  // VOTE_OPTION_ABSTAIN defines an abstain vote option.
  VOTE_OPTION_ABSTAIN = 2;
  // VOTE_OPTION_NO defines a no vote option.
  VOTE_OPTION_NO = 3;
  // VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
  VOTE_OPTION_NO_WITH_VETO = 4;
}

// WeightedVoteOption defines a unit of vote for vote split.
message WeightedVoteOption {
  VoteOption option = 1;
  string     weight = 2 [(cosmos_proto.scalar) = "cosmos.Dec"];
}

// Deposit defines an amount deposited by an account address to an active
// proposal.
message Deposit {
  uint64   proposal_id                     = 1;
  string   depositor                       = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated cosmos.base.v1beta1.Coin amount = 3;
}

// Proposal defines the core field members of a governance proposal.
message Proposal {
  uint64   proposal_id                                = 1;
  repeated google.protobuf.Any messages               = 2;
  ProposalStatus               status                 = 3;
  TallyResult                  final_tally_result     = 4;
  google.protobuf.Timestamp    submit_time            = 5 [(gogoproto.stdtime) = true];
  google.protobuf.Timestamp    deposit_end_time       = 6 [(gogoproto.stdtime) = true];
  repeated cosmos.base.v1beta1.Coin total_deposit     = 7;
  google.protobuf.Timestamp         voting_start_time = 8 [(gogoproto.stdtime) = true];
  google.protobuf.Timestamp         voting_end_time   = 9 [(gogoproto.stdtime) = true];
}

// ProposalStatus enumerates the valid statuses of a proposal.
enum ProposalStatus {
  // PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
  PROPOSAL_STATUS_UNSPECIFIED = 0;
  // PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
  // period.
  PROPOSAL_STATUS_DEPOSIT_PERIOD = 1;
  // PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
  // period.
  PROPOSAL_STATUS_VOTING_PERIOD = 2;
  // PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
  // passed.
  PROPOSAL_STATUS_PASSED = 3;
  // PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
  // been rejected.
  PROPOSAL_STATUS_REJECTED = 4;
  // PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
  // failed.
  PROPOSAL_STATUS_FAILED = 5;
}

// TallyResult defines a standard tally for a governance proposal.
message TallyResult {
  string yes          = 1 [(cosmos_proto.scalar) = "cosmos.Int"];
  string abstain      = 2 [(cosmos_proto.scalar) = "cosmos.Int"];
  string no           = 3 [(cosmos_proto.scalar) = "cosmos.Int"];
  string no_with_veto = 4 [(cosmos_proto.scalar) = "cosmos.Int"];
}

// Vote defines a vote on a governance proposal.
// A Vote consists of a proposal ID, the voter, and the vote option.
message Vote {
  uint64 proposal_id = 1;
  string voter       = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // Deprecated: Prefer to use `options` instead. This field is set in queries
  // if and only if `len(options) == 1` and that option has weight 1. In all
  // other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
  VoteOption                  option  = 3 [deprecated = true];
  repeated WeightedVoteOption options = 4;
}

// DepositParams defines the params for deposits on governance proposals.
message DepositParams {
  //  Minimum deposit for a proposal to enter voting period.
  repeated cosmos.base.v1beta1.Coin min_deposit = 1;

  //  Maximum period for Atom holders to deposit on a proposal. Initial value: 2
  //  months.
  google.protobuf.Duration max_deposit_period = 2 [(gogoproto.stdduration) = true];
}

// VotingParams defines the params for voting on governance proposals.
message VotingParams {
  //  Length of the voting period.
  google.protobuf.Duration voting_period = 1 [(gogoproto.stdduration) = true];
}

// TallyParams defines the params for tallying votes on governance proposals.
message TallyParams {
  //  Minimum percentage of total stake needed to vote for a result to be
  //  considered valid.
  bytes quorum = 1;

  //  Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.
  bytes threshold = 2;

  //  Minimum value of Veto votes to Total votes ratio for proposal to be
  //  vetoed. Default value: 1/3.
  bytes veto_threshold = 3;
}
