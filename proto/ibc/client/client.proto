syntax = "proto3";
package ibc.client;

option go_package = "github.com/cosmos/cosmos-sdk/x/ibc/02-client/types";

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";

// IdentifiedClientState defines a client state with additional client identifier field.
message IdentifiedClientState {
  // client identifier
  string client_id = 1 [(gogoproto.moretags) = "yaml:\"client_id\""];
  // client state
  google.protobuf.Any client_state = 2 [(gogoproto.moretags) = "yaml:\"client_state\""];
}

// ClientConsensusStates defines all the stored consensus states for a given client.
message ClientConsensusStates {
  // client identifier
  string client_id = 1 [(gogoproto.moretags) = "yaml:\"client_id\""];
  // consensus states associated with the client
  repeated google.protobuf.Any consensus_states = 2 [(gogoproto.moretags) = "yaml:\"consensus_states\""];
}

// Height is a monotonically increasing data type
// that can be compared against another Height for the purposes of updating and freezing clients
//
// Normally the EpochHeight is incremented at each height while keeping epoch number the same
// However some consensus algorithms may choose to reset the height in certain conditions
// e.g. hard forks, state-machine breaking changes
// In these cases, the epoch number is incremented so that height continues to be monitonically increasing
// even as the EpochHeight gets reset
message Height {
  option (gogoproto.goproto_stringer) = false;

  // the epoch that the client is currently on
  uint64 epoch_number = 1 [(gogoproto.moretags) = "yaml:\"epoch_number\""];
  // the height within the given epoch
  uint64 epoch_height = 2 [(gogoproto.moretags) = "yaml:\"epoch_height\""];
}
