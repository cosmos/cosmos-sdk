syntax = "proto3";
package ibc.tendermint;

option go_package = "github.com/cosmos/cosmos-sdk/x/ibc/07-tendermint/types";

import "tendermint/types/validator.proto";
import "tendermint/types/types.proto";
import "confio/proofs.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "ibc/commitment/commitment.proto";
import "gogoproto/gogo.proto";

// ClientState from Tendermint tracks the current validator set, latest height,
// and a possible frozen height.
message ClientState {
  option (gogoproto.goproto_getters) = false;

  string   chain_id    = 1;
  Fraction trust_level = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"trust_level\""
  ];
  // duration of the period since the LastestTimestamp during which the
  // submitted headers are valid for upgrade
  google.protobuf.Duration trusting_period = 3 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags)    = "yaml:\"trusting_period\""
  ];
  // duration of the staking unbonding period
  google.protobuf.Duration unbonding_period = 4 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags)    = "yaml:\"unbonding_period\""
  ];
  // defines how much new (untrusted) header's Time can drift into the future.
  google.protobuf.Duration max_clock_drift = 5 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags)    = "yaml:\"max_clock_drift\""
  ];
  // Block height when the client was frozen due to a misbehaviour
  uint64 frozen_height = 6 [(gogoproto.moretags) = "yaml:\"frozen_height\""];
  // Latest height the client was updated to
  uint64 latest_height = 7 [(gogoproto.moretags) = "yaml:\"latest_height\""];
  // Proof specifications used in verifying counterparty state
  repeated ics23.ProofSpec proof_specs = 8
      [(gogoproto.moretags) = "yaml:\"proof_specs\""];
}

// ConsensusState defines the consensus state from Tendermint.
message ConsensusState {
  option (gogoproto.goproto_getters) = false;

  // timestamp that corresponds to the block height in which the ConsensusState
  // was stored.
  google.protobuf.Timestamp timestamp = 1
      [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  // commitment root (i.e app hash)
  ibc.commitment.MerkleRoot root = 2 [(gogoproto.nullable) = false];
  // height at which the consensus state was stored.
  uint64 height               = 3;
  bytes  next_validators_hash = 4 [
    (gogoproto.casttype) =
        "github.com/tendermint/tendermint/libs/bytes.HexBytes",
    (gogoproto.moretags) = "yaml:\"next_validators_hash\""
  ];
}

// Evidence is a wrapper over two conflicting Headers
// that implements Evidence interface expected by ICS-02
message Evidence {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;

  string client_id = 1 [(gogoproto.moretags) = "yaml:\"client_id\""];
  string chain_id  = 2 [(gogoproto.moretags) = "yaml:\"chain_id\""];
  Header header_1  = 3 [
    (gogoproto.customname) = "Header1",
    (gogoproto.moretags)   = "yaml:\"header_1\""
  ];
  Header header_2 = 4 [
    (gogoproto.customname) = "Header2",
    (gogoproto.moretags)   = "yaml:\"header_2\""
  ];
}

// Header defines the Tendermint client consensus Header.
// It encapsulates all the information necessary to update from a trusted
// Tendermint ConsensusState. The inclusion of TrustedHeight and
// TrustedValidators allows this update to process correctly, so long as the
// ConsensusState for the TrustedHeight exists, this removes race conditions
// among relayers The SignedHeader and ValidatorSet are the new untrusted update
// fields for the client. The TrustedHeight is the height of a stored
// ConsensusState on the client that will be used to verify the new untrusted
// header. The Trusted ConsensusState must be within the unbonding period of
// current time in order to correctly verify, and the TrustedValidators must
// hash to TrustedConsensusState.NextValidatorsHash since that is the last
// trusted validator set at the TrustedHeight.
message Header {
  .tendermint.types.SignedHeader signed_header = 1 [
    (gogoproto.embed)    = true,
    (gogoproto.moretags) = "yaml:\"signed_header\""
  ];

  .tendermint.types.ValidatorSet validator_set = 2
      [(gogoproto.moretags) = "yaml:\"validator_set\""];
  uint64 trusted_height = 3 [(gogoproto.moretags) = "yaml:\"trusted_height\""];
  .tendermint.types.ValidatorSet trusted_validators = 4
      [(gogoproto.moretags) = "yaml:\"trusted_validators\""];
}

// Fraction defines the protobuf message type for tmmath.Fraction
message Fraction {
  int64 numerator   = 1;
  int64 denominator = 2;
}

// MsgCreateClient defines a message to create a tendermint client.
message MsgCreateClient {
  option (gogoproto.goproto_getters) = false;

  string   client_id   = 1 [(gogoproto.moretags) = "yaml:\"client_id\""];
  Header   header      = 2;
  Fraction trust_level = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"trust_level\""
  ];
  google.protobuf.Duration trusting_period = 4 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags)    = "yaml:\"trusting_period\""
  ];
  google.protobuf.Duration unbonding_period = 5 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags)    = "yaml:\"unbonding_period\""
  ];
  google.protobuf.Duration max_clock_drift = 6 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags)    = "yaml:\"max_clock_drift\""
  ];
  repeated ics23.ProofSpec proof_specs = 8
      [(gogoproto.moretags) = "yaml:\"proof_specs\""];
  bytes signer = 7
      [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

// MsgCreateClient defines an sdk.Msg to update a tendermint client state to
// the given header.
message MsgUpdateClient {
  option (gogoproto.goproto_getters) = false;

  string client_id = 1 [(gogoproto.moretags) = "yaml:\"client_id\""];
  Header header    = 2;
  bytes  signer    = 3
      [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

// MsgSubmitClientMisbehaviour defines an sdk.Msg type that submits Evidence for
// light client misbehaviour.
message MsgSubmitClientMisbehaviour {
  option (gogoproto.goproto_getters) = false;

  Evidence evidence  = 1;
  bytes    submitter = 2
      [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}
