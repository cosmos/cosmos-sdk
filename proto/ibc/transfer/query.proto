syntax = "proto3";
package ibc.transfer;

import "gogoproto/gogo.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "ibc/transfer/transfer.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/ibc-transfer/types";

// Query provides defines the gRPC querier service
service Query {
  // DenomTrace queries a denomination trace info.
  rpc DenomTrace(QueryDenomTraceRequest) returns (QueryDenomTraceResponse) {}

  // DenomTraces queries all denomination traces.
  rpc DenomTraces(QueryDenomTracesRequest) returns (QueryDenomTracesResponse) {}
}

// QueryDenomTraceRequest is the request type for the Query/DenomTrace RPC method
message QueryDenomTraceRequest {
  // hex hash of the denomination trace info
  string hash = 1;
}

// QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC method.
message QueryDenomTraceResponse {
  // denomination trace associated with the request hash
  DenomTrace denom_trace = 1;
}

// QueryConnectionsRequest is the request type for the Query/DenomTraces RPC method
message QueryDenomTracesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryConnectionsResponse is the response type for the Query/DenomTraces RPC method.
message QueryDenomTracesResponse {
  // list of stored connections of the chain.
  repeated DenomTrace denom_traces = 1 [
    (gogoproto.castrepeated) = "Traces",
    (gogoproto.nullable) = false
  ];
  // pagination response
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
