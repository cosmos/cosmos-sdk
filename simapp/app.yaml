modules:
  - name: runtime
    config:
      "@type": cosmos.app.runtime.v1alpha1.Module

      app_name: SimApp

      # During begin block slashing happens after distr.BeginBlocker so that
      # there is nothing left over in the validator fee pool, so as to keep the
      # CanWithdrawInvariant invariant.
      # NOTE: staking module is required if HistoricalEntries param > 0
      # NOTE: capability module's beginblocker must come before any modules using capabilities (e.g. IBC)
      begin_blockers:
        [
          upgrade,
          capability,
          mint,
          distribution,
          slashing,
          evidence,
          staking,
          auth,
          bank,
          gov,
          crisis,
          genutil,
          authz,
          feegrant,
          nft,
          group,
          params,
          vesting,
        ]

      end_blockers:
        [
          crisis,
          gov,
          staking,
          capability,
          auth,
          bank,
          distribution,
          slashing,
          mint,
          genutil,
          evidence,
          authz,
          feegrant,
          nft,
          group,
          params,
          upgrade,
          vesting,
        ]

      override_store_keys:
        - module_name: auth
          kv_store_key: acc

  - name: auth
    config:
      "@type": cosmos.auth.module.v1.Module
      bech32_prefix: cosmos
      module_account_permissions:
        - account: fee_collector
        - account: distribution
        - account: mint
          permissions: [minter]
        - account: bonded_tokens_pool
          permissions: [burner, staking]
        - account: not_bonded_tokens_pool
          permissions: [burner, staking]
        - account: gov
          permissions: [burner]
        - account: nft

  - name: params
    config:
      "@type": cosmos.params.module.v1.Module

  - name: feegrant
    config:
      "@type": cosmos.feegrant.module.v1.Module

  - name: bank
    config:
      "@type": cosmos.bank.module.v1.Module
  
  - name: authz
    config:
      "@type": cosmos.authz.module.v1.Module

  - name: capability
    config:
      "@type": cosmos.capability.module.v1.Module
      seal_keeper: true

  - name: staking
    config:
      "@type": cosmos.staking.module.v1.Module

  - name: nft
    config:
      "@type": cosmos.nft.module.v1.Module
