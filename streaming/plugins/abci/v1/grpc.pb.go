// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: abci/v1/grpc.proto

package v1

import (
	context "context"
	types1 "github.com/cosmos/cosmos-sdk/store/types"
	types "github.com/tendermint/tendermint/abci/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Empty is the response message for incoming requests
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_v1_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_abci_v1_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_abci_v1_grpc_proto_rawDescGZIP(), []int{0}
}

// ListenBeginBlockRequest sends BeginBlock requests and responses to server
type ListenBeginBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req *types.RequestBeginBlock  `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Res *types.ResponseBeginBlock `protobuf:"bytes,2,opt,name=res,proto3" json:"res,omitempty"`
}

func (x *ListenBeginBlockRequest) Reset() {
	*x = ListenBeginBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_v1_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenBeginBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenBeginBlockRequest) ProtoMessage() {}

func (x *ListenBeginBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_abci_v1_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenBeginBlockRequest.ProtoReflect.Descriptor instead.
func (*ListenBeginBlockRequest) Descriptor() ([]byte, []int) {
	return file_abci_v1_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *ListenBeginBlockRequest) GetReq() *types.RequestBeginBlock {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *ListenBeginBlockRequest) GetRes() *types.ResponseBeginBlock {
	if x != nil {
		return x.Res
	}
	return nil
}

// ListenEndBlockRequest sends EndBlock requests and responses to server
type ListenEndBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req *types.RequestEndBlock  `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Res *types.ResponseEndBlock `protobuf:"bytes,2,opt,name=res,proto3" json:"res,omitempty"`
}

func (x *ListenEndBlockRequest) Reset() {
	*x = ListenEndBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_v1_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenEndBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenEndBlockRequest) ProtoMessage() {}

func (x *ListenEndBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_abci_v1_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenEndBlockRequest.ProtoReflect.Descriptor instead.
func (*ListenEndBlockRequest) Descriptor() ([]byte, []int) {
	return file_abci_v1_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *ListenEndBlockRequest) GetReq() *types.RequestEndBlock {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *ListenEndBlockRequest) GetRes() *types.ResponseEndBlock {
	if x != nil {
		return x.Res
	}
	return nil
}

// ListenDeliverTxRequest sends DeliverTx requests and responses to server
type ListenDeliverTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// explicitly pass in block height as neither RequestDeliverTx or ResponseDeliverTx contain it
	BlockHeight int64                    `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Req         *types.RequestDeliverTx  `protobuf:"bytes,2,opt,name=req,proto3" json:"req,omitempty"`
	Res         *types.ResponseDeliverTx `protobuf:"bytes,3,opt,name=res,proto3" json:"res,omitempty"`
}

func (x *ListenDeliverTxRequest) Reset() {
	*x = ListenDeliverTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_v1_grpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenDeliverTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenDeliverTxRequest) ProtoMessage() {}

func (x *ListenDeliverTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_abci_v1_grpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenDeliverTxRequest.ProtoReflect.Descriptor instead.
func (*ListenDeliverTxRequest) Descriptor() ([]byte, []int) {
	return file_abci_v1_grpc_proto_rawDescGZIP(), []int{3}
}

func (x *ListenDeliverTxRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *ListenDeliverTxRequest) GetReq() *types.RequestDeliverTx {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *ListenDeliverTxRequest) GetRes() *types.ResponseDeliverTx {
	if x != nil {
		return x.Res
	}
	return nil
}

// ListenCommitRequest sends Commit responses and state changes to server
type ListenCommitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// explicitly pass in block height as ResponseCommit does not contain this info
	BlockHeight int64                 `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Res         *types.ResponseCommit `protobuf:"bytes,2,opt,name=res,proto3" json:"res,omitempty"`
	ChangeSet   []*types1.StoreKVPair `protobuf:"bytes,3,rep,name=change_set,json=changeSet,proto3" json:"change_set,omitempty"`
}

func (x *ListenCommitRequest) Reset() {
	*x = ListenCommitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abci_v1_grpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenCommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenCommitRequest) ProtoMessage() {}

func (x *ListenCommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_abci_v1_grpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenCommitRequest.ProtoReflect.Descriptor instead.
func (*ListenCommitRequest) Descriptor() ([]byte, []int) {
	return file_abci_v1_grpc_proto_rawDescGZIP(), []int{4}
}

func (x *ListenCommitRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *ListenCommitRequest) GetRes() *types.ResponseCommit {
	if x != nil {
		return x.Res
	}
	return nil
}

func (x *ListenCommitRequest) GetChangeSet() []*types1.StoreKVPair {
	if x != nil {
		return x.ChangeSet
	}
	return nil
}

var File_abci_v1_grpc_proto protoreflect.FileDescriptor

var file_abci_v1_grpc_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x62, 0x63, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x74,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x61, 0x62, 0x63, 0x69, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x86,
	0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x03, 0x72, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x03, 0x72, 0x65, 0x71,
	0x12, 0x35, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x03, 0x72, 0x65, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x32, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x61, 0x62, 0x63, 0x69,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e,
	0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x64,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x03, 0x72, 0x65, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x54, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x74, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x54, 0x78, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x34, 0x0a,
	0x03, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x54, 0x78, 0x52, 0x03,
	0x72, 0x65, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x31,
	0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x03, 0x72, 0x65,
	0x73, 0x12, 0x45, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x56, 0x50, 0x61, 0x69, 0x72, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x74, 0x32, 0x9f, 0x03, 0x0a, 0x13, 0x41, 0x42, 0x43,
	0x49, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x64, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x30, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x60, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2e, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x62, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x54, 0x78, 0x12, 0x2f, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x62,
	0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x61,
	0x62, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5c, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x2c, 0x2e, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x61,
	0x62, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x62, 0x63,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x73, 0x0a, 0x24, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e,
	0x76, 0x31, 0x42, 0x11, 0x41, 0x62, 0x63, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x61, 0x62, 0x63, 0x69, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_abci_v1_grpc_proto_rawDescOnce sync.Once
	file_abci_v1_grpc_proto_rawDescData = file_abci_v1_grpc_proto_rawDesc
)

func file_abci_v1_grpc_proto_rawDescGZIP() []byte {
	file_abci_v1_grpc_proto_rawDescOnce.Do(func() {
		file_abci_v1_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_abci_v1_grpc_proto_rawDescData)
	})
	return file_abci_v1_grpc_proto_rawDescData
}

var file_abci_v1_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_abci_v1_grpc_proto_goTypes = []interface{}{
	(*Empty)(nil),                    // 0: cosmos.sdk.grpc.abci.v1.Empty
	(*ListenBeginBlockRequest)(nil),  // 1: cosmos.sdk.grpc.abci.v1.ListenBeginBlockRequest
	(*ListenEndBlockRequest)(nil),    // 2: cosmos.sdk.grpc.abci.v1.ListenEndBlockRequest
	(*ListenDeliverTxRequest)(nil),   // 3: cosmos.sdk.grpc.abci.v1.ListenDeliverTxRequest
	(*ListenCommitRequest)(nil),      // 4: cosmos.sdk.grpc.abci.v1.ListenCommitRequest
	(*types.RequestBeginBlock)(nil),  // 5: tendermint.abci.RequestBeginBlock
	(*types.ResponseBeginBlock)(nil), // 6: tendermint.abci.ResponseBeginBlock
	(*types.RequestEndBlock)(nil),    // 7: tendermint.abci.RequestEndBlock
	(*types.ResponseEndBlock)(nil),   // 8: tendermint.abci.ResponseEndBlock
	(*types.RequestDeliverTx)(nil),   // 9: tendermint.abci.RequestDeliverTx
	(*types.ResponseDeliverTx)(nil),  // 10: tendermint.abci.ResponseDeliverTx
	(*types.ResponseCommit)(nil),     // 11: tendermint.abci.ResponseCommit
	(*types1.StoreKVPair)(nil),       // 12: cosmos.base.store.v1beta1.StoreKVPair
}
var file_abci_v1_grpc_proto_depIdxs = []int32{
	5,  // 0: cosmos.sdk.grpc.abci.v1.ListenBeginBlockRequest.req:type_name -> tendermint.abci.RequestBeginBlock
	6,  // 1: cosmos.sdk.grpc.abci.v1.ListenBeginBlockRequest.res:type_name -> tendermint.abci.ResponseBeginBlock
	7,  // 2: cosmos.sdk.grpc.abci.v1.ListenEndBlockRequest.req:type_name -> tendermint.abci.RequestEndBlock
	8,  // 3: cosmos.sdk.grpc.abci.v1.ListenEndBlockRequest.res:type_name -> tendermint.abci.ResponseEndBlock
	9,  // 4: cosmos.sdk.grpc.abci.v1.ListenDeliverTxRequest.req:type_name -> tendermint.abci.RequestDeliverTx
	10, // 5: cosmos.sdk.grpc.abci.v1.ListenDeliverTxRequest.res:type_name -> tendermint.abci.ResponseDeliverTx
	11, // 6: cosmos.sdk.grpc.abci.v1.ListenCommitRequest.res:type_name -> tendermint.abci.ResponseCommit
	12, // 7: cosmos.sdk.grpc.abci.v1.ListenCommitRequest.change_set:type_name -> cosmos.base.store.v1beta1.StoreKVPair
	1,  // 8: cosmos.sdk.grpc.abci.v1.ABCIListenerService.ListenBeginBlock:input_type -> cosmos.sdk.grpc.abci.v1.ListenBeginBlockRequest
	2,  // 9: cosmos.sdk.grpc.abci.v1.ABCIListenerService.ListenEndBlock:input_type -> cosmos.sdk.grpc.abci.v1.ListenEndBlockRequest
	3,  // 10: cosmos.sdk.grpc.abci.v1.ABCIListenerService.ListenDeliverTx:input_type -> cosmos.sdk.grpc.abci.v1.ListenDeliverTxRequest
	4,  // 11: cosmos.sdk.grpc.abci.v1.ABCIListenerService.ListenCommit:input_type -> cosmos.sdk.grpc.abci.v1.ListenCommitRequest
	0,  // 12: cosmos.sdk.grpc.abci.v1.ABCIListenerService.ListenBeginBlock:output_type -> cosmos.sdk.grpc.abci.v1.Empty
	0,  // 13: cosmos.sdk.grpc.abci.v1.ABCIListenerService.ListenEndBlock:output_type -> cosmos.sdk.grpc.abci.v1.Empty
	0,  // 14: cosmos.sdk.grpc.abci.v1.ABCIListenerService.ListenDeliverTx:output_type -> cosmos.sdk.grpc.abci.v1.Empty
	0,  // 15: cosmos.sdk.grpc.abci.v1.ABCIListenerService.ListenCommit:output_type -> cosmos.sdk.grpc.abci.v1.Empty
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_abci_v1_grpc_proto_init() }
func file_abci_v1_grpc_proto_init() {
	if File_abci_v1_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_abci_v1_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_v1_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenBeginBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_v1_grpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenEndBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_v1_grpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenDeliverTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abci_v1_grpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenCommitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_abci_v1_grpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_abci_v1_grpc_proto_goTypes,
		DependencyIndexes: file_abci_v1_grpc_proto_depIdxs,
		MessageInfos:      file_abci_v1_grpc_proto_msgTypes,
	}.Build()
	File_abci_v1_grpc_proto = out.File
	file_abci_v1_grpc_proto_rawDesc = nil
	file_abci_v1_grpc_proto_goTypes = nil
	file_abci_v1_grpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ABCIListenerServiceClient is the client API for ABCIListenerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ABCIListenerServiceClient interface {
	ListenBeginBlock(ctx context.Context, in *ListenBeginBlockRequest, opts ...grpc.CallOption) (*Empty, error)
	ListenEndBlock(ctx context.Context, in *ListenEndBlockRequest, opts ...grpc.CallOption) (*Empty, error)
	ListenDeliverTx(ctx context.Context, in *ListenDeliverTxRequest, opts ...grpc.CallOption) (*Empty, error)
	ListenCommit(ctx context.Context, in *ListenCommitRequest, opts ...grpc.CallOption) (*Empty, error)
}

type aBCIListenerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewABCIListenerServiceClient(cc grpc.ClientConnInterface) ABCIListenerServiceClient {
	return &aBCIListenerServiceClient{cc}
}

func (c *aBCIListenerServiceClient) ListenBeginBlock(ctx context.Context, in *ListenBeginBlockRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/cosmos.sdk.grpc.abci.v1.ABCIListenerService/ListenBeginBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBCIListenerServiceClient) ListenEndBlock(ctx context.Context, in *ListenEndBlockRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/cosmos.sdk.grpc.abci.v1.ABCIListenerService/ListenEndBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBCIListenerServiceClient) ListenDeliverTx(ctx context.Context, in *ListenDeliverTxRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/cosmos.sdk.grpc.abci.v1.ABCIListenerService/ListenDeliverTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBCIListenerServiceClient) ListenCommit(ctx context.Context, in *ListenCommitRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/cosmos.sdk.grpc.abci.v1.ABCIListenerService/ListenCommit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ABCIListenerServiceServer is the server API for ABCIListenerService service.
type ABCIListenerServiceServer interface {
	ListenBeginBlock(context.Context, *ListenBeginBlockRequest) (*Empty, error)
	ListenEndBlock(context.Context, *ListenEndBlockRequest) (*Empty, error)
	ListenDeliverTx(context.Context, *ListenDeliverTxRequest) (*Empty, error)
	ListenCommit(context.Context, *ListenCommitRequest) (*Empty, error)
}

// UnimplementedABCIListenerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedABCIListenerServiceServer struct {
}

func (*UnimplementedABCIListenerServiceServer) ListenBeginBlock(context.Context, *ListenBeginBlockRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListenBeginBlock not implemented")
}
func (*UnimplementedABCIListenerServiceServer) ListenEndBlock(context.Context, *ListenEndBlockRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListenEndBlock not implemented")
}
func (*UnimplementedABCIListenerServiceServer) ListenDeliverTx(context.Context, *ListenDeliverTxRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListenDeliverTx not implemented")
}
func (*UnimplementedABCIListenerServiceServer) ListenCommit(context.Context, *ListenCommitRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListenCommit not implemented")
}

func RegisterABCIListenerServiceServer(s *grpc.Server, srv ABCIListenerServiceServer) {
	s.RegisterService(&_ABCIListenerService_serviceDesc, srv)
}

func _ABCIListenerService_ListenBeginBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListenBeginBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABCIListenerServiceServer).ListenBeginBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.sdk.grpc.abci.v1.ABCIListenerService/ListenBeginBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABCIListenerServiceServer).ListenBeginBlock(ctx, req.(*ListenBeginBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABCIListenerService_ListenEndBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListenEndBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABCIListenerServiceServer).ListenEndBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.sdk.grpc.abci.v1.ABCIListenerService/ListenEndBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABCIListenerServiceServer).ListenEndBlock(ctx, req.(*ListenEndBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABCIListenerService_ListenDeliverTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListenDeliverTxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABCIListenerServiceServer).ListenDeliverTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.sdk.grpc.abci.v1.ABCIListenerService/ListenDeliverTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABCIListenerServiceServer).ListenDeliverTx(ctx, req.(*ListenDeliverTxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABCIListenerService_ListenCommit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListenCommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABCIListenerServiceServer).ListenCommit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.sdk.grpc.abci.v1.ABCIListenerService/ListenCommit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABCIListenerServiceServer).ListenCommit(ctx, req.(*ListenCommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ABCIListenerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cosmos.sdk.grpc.abci.v1.ABCIListenerService",
	HandlerType: (*ABCIListenerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListenBeginBlock",
			Handler:    _ABCIListenerService_ListenBeginBlock_Handler,
		},
		{
			MethodName: "ListenEndBlock",
			Handler:    _ABCIListenerService_ListenEndBlock_Handler,
		},
		{
			MethodName: "ListenDeliverTx",
			Handler:    _ABCIListenerService_ListenDeliverTx_Handler,
		},
		{
			MethodName: "ListenCommit",
			Handler:    _ABCIListenerService_ListenCommit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "abci/v1/grpc.proto",
}
