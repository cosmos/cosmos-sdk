syntax = "proto3";

package cosmos.sdk.grpc.abci.v1;

import "tendermint/abci/types.proto";
import "cosmos/base/store/v1beta1/listening.proto";

option go_package           = "github.com/cosmos/cosmos-sdk/streaming/plugins/abci/v1";
option java_multiple_files  = true;
option java_outer_classname = "AbciListenerProto";
option java_package         = "network.cosmos.sdk.streaming.abci.v1";

// Empty is the response message for incoming requests
message Empty {}

// ListenBeginBlockRequest sends BeginBlock requests and responses to server
message ListenBeginBlockRequest {
  tendermint.abci.RequestBeginBlock  req = 1;
  tendermint.abci.ResponseBeginBlock res = 2;
}

// ListenEndBlockRequest sends EndBlock requests and responses to server
message ListenEndBlockRequest {
  tendermint.abci.RequestEndBlock  req = 1;
  tendermint.abci.ResponseEndBlock res = 2;
}

// ListenDeliverTxRequest sends DeliverTx requests and responses to server
message ListenDeliverTxRequest {
  // explicitly pass in block height as neither RequestDeliverTx or ResponseDeliverTx contain it
  int64                             block_height = 1;
  tendermint.abci.RequestDeliverTx  req          = 2;
  tendermint.abci.ResponseDeliverTx res          = 3;
}

// ListenCommitRequest sends Commit responses and state changes to server
message ListenCommitRequest {
  // explicitly pass in block height as ResponseCommit does not contain this info
  int64                                          block_height = 1;
  tendermint.abci.ResponseCommit                 res          = 2;
  repeated cosmos.base.store.v1beta1.StoreKVPair change_set   = 3;
}

service ABCIListenerService {
  rpc ListenBeginBlock(ListenBeginBlockRequest) returns (Empty);
  rpc ListenEndBlock(ListenEndBlockRequest) returns (Empty);
  rpc ListenDeliverTx(ListenDeliverTxRequest) returns (Empty);
  rpc ListenCommit(ListenCommitRequest) returns (Empty);
}
