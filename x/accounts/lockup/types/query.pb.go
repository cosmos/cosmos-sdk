// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cosmos/accounts/vesting/query.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// QueryVestingAccountInfoRequest get vesting account info
type QueryVestingAccountInfoRequest struct {
}

func (m *QueryVestingAccountInfoRequest) Reset()         { *m = QueryVestingAccountInfoRequest{} }
func (m *QueryVestingAccountInfoRequest) String() string { return proto.CompactTextString(m) }
func (*QueryVestingAccountInfoRequest) ProtoMessage()    {}
func (*QueryVestingAccountInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5c108ceb76dc881, []int{0}
}
func (m *QueryVestingAccountInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryVestingAccountInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryVestingAccountInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryVestingAccountInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryVestingAccountInfoRequest.Merge(m, src)
}
func (m *QueryVestingAccountInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryVestingAccountInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryVestingAccountInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryVestingAccountInfoRequest proto.InternalMessageInfo

// QueryVestingAccountInfoResponse return vesting account info
type QueryVestingAccountInfoResponse struct {
	// original_vesting defines the value of the account original vesting.
	OriginalVesting github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,1,rep,name=original_vesting,json=originalVesting,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"original_vesting"`
	// delegated_free defines the value of the account delegated free.
	DelegatedFree github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,2,rep,name=delegated_free,json=delegatedFree,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"delegated_free"`
	// delegated_free defines the value of the account delegated free.
	DelegatedVesting github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=delegated_vesting,json=delegatedVesting,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"delegated_vesting"`
	// end_time defines the value of the account vesting start time.
	StartTime *time.Time `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3,stdtime" json:"start_time,omitempty"`
	// end_time defines the value of the account vesting end time.
	EndTime *time.Time `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3,stdtime" json:"end_time,omitempty"`
	// vesting_coins defines the value of the account vesting coins.
	VestingCoins github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,6,rep,name=vesting_coins,json=vestingCoins,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"vesting_coins"`
	// vested_vesting defines the value of the account vested coins.
	VestedVesting github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,7,rep,name=vested_vesting,json=vestedVesting,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"vested_vesting"`
	// owner defines the value of the owner of the vesting account.
	Owner string `protobuf:"bytes,8,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (m *QueryVestingAccountInfoResponse) Reset()         { *m = QueryVestingAccountInfoResponse{} }
func (m *QueryVestingAccountInfoResponse) String() string { return proto.CompactTextString(m) }
func (*QueryVestingAccountInfoResponse) ProtoMessage()    {}
func (*QueryVestingAccountInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5c108ceb76dc881, []int{1}
}
func (m *QueryVestingAccountInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryVestingAccountInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryVestingAccountInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryVestingAccountInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryVestingAccountInfoResponse.Merge(m, src)
}
func (m *QueryVestingAccountInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryVestingAccountInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryVestingAccountInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryVestingAccountInfoResponse proto.InternalMessageInfo

func (m *QueryVestingAccountInfoResponse) GetOriginalVesting() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.OriginalVesting
	}
	return nil
}

func (m *QueryVestingAccountInfoResponse) GetDelegatedFree() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.DelegatedFree
	}
	return nil
}

func (m *QueryVestingAccountInfoResponse) GetDelegatedVesting() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.DelegatedVesting
	}
	return nil
}

func (m *QueryVestingAccountInfoResponse) GetStartTime() *time.Time {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *QueryVestingAccountInfoResponse) GetEndTime() *time.Time {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *QueryVestingAccountInfoResponse) GetVestingCoins() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.VestingCoins
	}
	return nil
}

func (m *QueryVestingAccountInfoResponse) GetVestedVesting() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.VestedVesting
	}
	return nil
}

func (m *QueryVestingAccountInfoResponse) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

// QueryVestingPeriodsRequest is used to query the periodic vesting account vesting periods.
type QueryVestingPeriodsRequest struct {
}

func (m *QueryVestingPeriodsRequest) Reset()         { *m = QueryVestingPeriodsRequest{} }
func (m *QueryVestingPeriodsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryVestingPeriodsRequest) ProtoMessage()    {}
func (*QueryVestingPeriodsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5c108ceb76dc881, []int{2}
}
func (m *QueryVestingPeriodsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryVestingPeriodsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryVestingPeriodsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryVestingPeriodsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryVestingPeriodsRequest.Merge(m, src)
}
func (m *QueryVestingPeriodsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryVestingPeriodsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryVestingPeriodsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryVestingPeriodsRequest proto.InternalMessageInfo

// QueryVestingPeriodsResponse returns the periodic vesting account vesting periods.
type QueryVestingPeriodsResponse struct {
	// vesting_periods defines the value of the periodic vesting account vesting periods.
	VestingPeriods []*Period `protobuf:"bytes,1,rep,name=vesting_periods,json=vestingPeriods,proto3" json:"vesting_periods,omitempty"`
}

func (m *QueryVestingPeriodsResponse) Reset()         { *m = QueryVestingPeriodsResponse{} }
func (m *QueryVestingPeriodsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryVestingPeriodsResponse) ProtoMessage()    {}
func (*QueryVestingPeriodsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5c108ceb76dc881, []int{3}
}
func (m *QueryVestingPeriodsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryVestingPeriodsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryVestingPeriodsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryVestingPeriodsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryVestingPeriodsResponse.Merge(m, src)
}
func (m *QueryVestingPeriodsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryVestingPeriodsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryVestingPeriodsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryVestingPeriodsResponse proto.InternalMessageInfo

func (m *QueryVestingPeriodsResponse) GetVestingPeriods() []*Period {
	if m != nil {
		return m.VestingPeriods
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryVestingAccountInfoRequest)(nil), "cosmos.accounts.vesting.QueryVestingAccountInfoRequest")
	proto.RegisterType((*QueryVestingAccountInfoResponse)(nil), "cosmos.accounts.vesting.QueryVestingAccountInfoResponse")
	proto.RegisterType((*QueryVestingPeriodsRequest)(nil), "cosmos.accounts.vesting.QueryVestingPeriodsRequest")
	proto.RegisterType((*QueryVestingPeriodsResponse)(nil), "cosmos.accounts.vesting.QueryVestingPeriodsResponse")
}

func init() {
	proto.RegisterFile("cosmos/accounts/vesting/query.proto", fileDescriptor_a5c108ceb76dc881)
}

var fileDescriptor_a5c108ceb76dc881 = []byte{
	// 492 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xcd, 0x6e, 0x13, 0x31,
	0x10, 0xce, 0xd2, 0x36, 0x6d, 0x5d, 0xfa, 0xc3, 0xaa, 0x12, 0x4b, 0x40, 0xbb, 0x51, 0x10, 0x52,
	0x2e, 0xd8, 0xb4, 0x1c, 0x39, 0x54, 0x04, 0x09, 0xc1, 0x0d, 0x56, 0x88, 0x03, 0x97, 0x68, 0x7f,
	0x26, 0x8b, 0xd5, 0xc4, 0xb3, 0xb5, 0xbd, 0xa1, 0x3d, 0xf2, 0x06, 0x7d, 0x0e, 0x9e, 0xa4, 0xc7,
	0x1e, 0x39, 0x51, 0x94, 0xbc, 0x08, 0xda, 0xb5, 0x5d, 0x8a, 0x20, 0x12, 0x87, 0xf4, 0xb4, 0x1e,
	0x7b, 0x3e, 0x7f, 0xf3, 0xf9, 0xdb, 0x19, 0xf2, 0x38, 0x43, 0x35, 0x41, 0xc5, 0x92, 0x2c, 0xc3,
	0x4a, 0x68, 0xc5, 0xa6, 0xa0, 0x34, 0x17, 0x05, 0x3b, 0xa9, 0x40, 0x9e, 0xd1, 0x52, 0xa2, 0x46,
	0xff, 0xbe, 0x49, 0xa2, 0x2e, 0x89, 0xda, 0xa4, 0xce, 0x93, 0x45, 0x68, 0xfb, 0x35, 0xf8, 0x4e,
	0x68, 0xd3, 0xd2, 0x44, 0x01, 0x9b, 0x1e, 0xa4, 0xa0, 0x93, 0x03, 0x96, 0x21, 0x17, 0xf6, 0x7c,
	0xbf, 0xc0, 0x02, 0x9b, 0x25, 0xab, 0x57, 0x76, 0x37, 0x2a, 0x10, 0x8b, 0x31, 0xb0, 0x26, 0x4a,
	0xab, 0x11, 0xd3, 0x7c, 0x02, 0x4a, 0x27, 0x93, 0xd2, 0x24, 0xf4, 0xba, 0x24, 0x7c, 0x5f, 0x57,
	0xf9, 0xd1, 0x90, 0xbd, 0x34, 0x45, 0xbc, 0x15, 0x23, 0x8c, 0xe1, 0xa4, 0x02, 0xa5, 0x7b, 0x5f,
	0xdb, 0x24, 0x5a, 0x98, 0xa2, 0x4a, 0x14, 0x0a, 0xfc, 0x29, 0xd9, 0x43, 0xc9, 0x0b, 0x2e, 0x92,
	0xf1, 0xd0, 0x96, 0x1d, 0x78, 0xdd, 0x95, 0xfe, 0xd6, 0xe1, 0x03, 0x6a, 0x75, 0xd7, 0x75, 0x53,
	0x5b, 0x37, 0x7d, 0x85, 0x5c, 0x0c, 0x9e, 0x5d, 0xfc, 0x88, 0x5a, 0xdf, 0xae, 0xa2, 0x7e, 0xc1,
	0xf5, 0xe7, 0x2a, 0xa5, 0x19, 0x4e, 0x98, 0x15, 0x69, 0x3e, 0x4f, 0x55, 0x7e, 0xcc, 0xf4, 0x59,
	0x09, 0xaa, 0x01, 0xa8, 0x78, 0xd7, 0x91, 0xd8, 0x52, 0x7c, 0x49, 0x76, 0x72, 0x18, 0x43, 0x91,
	0x68, 0xc8, 0x87, 0x23, 0x09, 0x10, 0xdc, 0x59, 0x3e, 0xeb, 0xf6, 0x35, 0xc5, 0x6b, 0x09, 0xe0,
	0x9f, 0x92, 0x7b, 0xbf, 0x39, 0x9d, 0xd8, 0x95, 0xe5, 0xd3, 0xee, 0x5d, 0xb3, 0x38, 0xb5, 0x47,
	0x84, 0x28, 0x9d, 0x48, 0x3d, 0xac, 0x4d, 0x0c, 0x56, 0xbb, 0x5e, 0x7f, 0xeb, 0xb0, 0x43, 0x8d,
	0xc3, 0xd4, 0x39, 0x4c, 0x3f, 0x38, 0x87, 0x07, 0xab, 0xe7, 0x57, 0x91, 0x17, 0x6f, 0x36, 0x98,
	0x7a, 0xd7, 0x7f, 0x41, 0x36, 0x40, 0xe4, 0x06, 0xbe, 0xf6, 0x9f, 0xf0, 0x75, 0x10, 0x79, 0x03,
	0x2e, 0xc9, 0xb6, 0x55, 0x3b, 0xac, 0x7f, 0x3b, 0x15, 0xb4, 0x97, 0xaf, 0xf9, 0xae, 0x65, 0x68,
	0xa2, 0xda, 0xdd, 0x3a, 0xbe, 0xf1, 0xcc, 0xeb, 0xb7, 0xe0, 0xae, 0xa1, 0x70, 0x6f, 0xbc, 0x4f,
	0xd6, 0xf0, 0x8b, 0x00, 0x19, 0x6c, 0x74, 0xbd, 0xfe, 0x66, 0x6c, 0x82, 0xde, 0x23, 0xd2, 0xb9,
	0xd9, 0x02, 0xef, 0x40, 0x72, 0xcc, 0x95, 0xeb, 0x90, 0x82, 0x3c, 0xfc, 0xe7, 0xa9, 0x6d, 0x8e,
	0x37, 0x64, 0xd7, 0x3d, 0x5c, 0x69, 0x8e, 0x6c, 0x6f, 0x44, 0x74, 0xc1, 0x4c, 0xa0, 0xe6, 0x8a,
	0x78, 0x67, 0xfa, 0xc7, 0x8d, 0x83, 0xa3, 0x8b, 0x59, 0xe8, 0x5d, 0xce, 0x42, 0xef, 0xe7, 0x2c,
	0xf4, 0xce, 0xe7, 0x61, 0xeb, 0x72, 0x1e, 0xb6, 0xbe, 0xcf, 0xc3, 0xd6, 0x27, 0x3b, 0x44, 0x54,
	0x7e, 0x4c, 0x39, 0xb2, 0xd3, 0xbf, 0x87, 0x49, 0x23, 0x39, 0x6d, 0x37, 0x36, 0x3f, 0xff, 0x15,
	0x00, 0x00, 0xff, 0xff, 0xeb, 0x2c, 0xa7, 0x72, 0xb2, 0x04, 0x00, 0x00,
}

func (m *QueryVestingAccountInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryVestingAccountInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryVestingAccountInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryVestingAccountInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryVestingAccountInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryVestingAccountInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.VestedVesting) > 0 {
		for iNdEx := len(m.VestedVesting) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.VestedVesting[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.VestingCoins) > 0 {
		for iNdEx := len(m.VestingCoins) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.VestingCoins[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if m.EndTime != nil {
		n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.EndTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.EndTime):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintQuery(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x2a
	}
	if m.StartTime != nil {
		n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.StartTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.StartTime):])
		if err2 != nil {
			return 0, err2
		}
		i -= n2
		i = encodeVarintQuery(dAtA, i, uint64(n2))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DelegatedVesting) > 0 {
		for iNdEx := len(m.DelegatedVesting) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.DelegatedVesting[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.DelegatedFree) > 0 {
		for iNdEx := len(m.DelegatedFree) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.DelegatedFree[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.OriginalVesting) > 0 {
		for iNdEx := len(m.OriginalVesting) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OriginalVesting[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryVestingPeriodsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryVestingPeriodsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryVestingPeriodsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryVestingPeriodsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryVestingPeriodsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryVestingPeriodsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.VestingPeriods) > 0 {
		for iNdEx := len(m.VestingPeriods) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.VestingPeriods[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryVestingAccountInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryVestingAccountInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.OriginalVesting) > 0 {
		for _, e := range m.OriginalVesting {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if len(m.DelegatedFree) > 0 {
		for _, e := range m.DelegatedFree {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if len(m.DelegatedVesting) > 0 {
		for _, e := range m.DelegatedVesting {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.StartTime != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.StartTime)
		n += 1 + l + sovQuery(uint64(l))
	}
	if m.EndTime != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.EndTime)
		n += 1 + l + sovQuery(uint64(l))
	}
	if len(m.VestingCoins) > 0 {
		for _, e := range m.VestingCoins {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if len(m.VestedVesting) > 0 {
		for _, e := range m.VestedVesting {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryVestingPeriodsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryVestingPeriodsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.VestingPeriods) > 0 {
		for _, e := range m.VestingPeriods {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryVestingAccountInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryVestingAccountInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryVestingAccountInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryVestingAccountInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryVestingAccountInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryVestingAccountInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginalVesting", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OriginalVesting = append(m.OriginalVesting, types.Coin{})
			if err := m.OriginalVesting[len(m.OriginalVesting)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegatedFree", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegatedFree = append(m.DelegatedFree, types.Coin{})
			if err := m.DelegatedFree[len(m.DelegatedFree)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegatedVesting", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegatedVesting = append(m.DelegatedVesting, types.Coin{})
			if err := m.DelegatedVesting[len(m.DelegatedVesting)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.StartTime == nil {
				m.StartTime = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.StartTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EndTime == nil {
				m.EndTime = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.EndTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VestingCoins", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VestingCoins = append(m.VestingCoins, types.Coin{})
			if err := m.VestingCoins[len(m.VestingCoins)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VestedVesting", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VestedVesting = append(m.VestedVesting, types.Coin{})
			if err := m.VestedVesting[len(m.VestedVesting)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryVestingPeriodsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryVestingPeriodsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryVestingPeriodsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryVestingPeriodsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryVestingPeriodsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryVestingPeriodsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VestingPeriods", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VestingPeriods = append(m.VestingPeriods, &Period{})
			if err := m.VestingPeriods[len(m.VestingPeriods)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
