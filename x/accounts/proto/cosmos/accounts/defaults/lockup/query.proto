syntax = "proto3";
package cosmos.accounts.defaults.lockup;

import "cosmos/accounts/defaults/lockup/lockup.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "cosmossdk.io/x/accounts/defaults/lockup/types";

// QueryLockupAccountInfoRequest get lockup account info
message QueryLockupAccountInfoRequest {}

// QueryLockupAccountInfoResponse return lockup account info
message QueryLockupAccountInfoResponse {
  // original_locking defines the value of the account original locking coins.
  repeated cosmos.base.v1beta1.Coin original_locking = 1
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];

  // delegated_free defines the value of the account free delegated amount.
  repeated cosmos.base.v1beta1.Coin delegated_free = 2
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];

  // delegated_locking defines the value of the account locking delegated amount.
  repeated cosmos.base.v1beta1.Coin delegated_locking = 3
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];

  // end_time defines the value of the account lockup start time.
  google.protobuf.Timestamp start_time = 4 [(gogoproto.stdtime) = true];

  // end_time defines the value of the account lockup end time.
  google.protobuf.Timestamp end_time = 5 [(gogoproto.stdtime) = true];

  // locked_coins defines the value of the account locking coins.
  repeated cosmos.base.v1beta1.Coin locked_coins = 6
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];

  // unlocked_coins defines the value of the account released coins from lockup.
  repeated cosmos.base.v1beta1.Coin unlocked_coins = 7
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];

  // owner defines the value of the owner of the lockup account.
  string owner = 8;
}

// QueryLockingPeriodsRequest is used to query the periodic lockup account locking periods.
message QueryLockingPeriodsRequest {}

// QueryLockingPeriodsResponse returns the periodic lockup account locking periods.
message QueryLockingPeriodsResponse {
  // lockup_periods defines the value of the periodic lockup account locking periods.
  repeated Period locking_periods = 1;
}
