// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cosmos/distribution/v1beta1/auto_delegation.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// This message is the structure of each auto delegation config to be sotored in the state
type AutoDelegation struct {
	DelegatorAddress string                                   `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	NextRecord       string                                   `protobuf:"bytes,3,opt,name=next_record,json=nextRecord,proto3" json:"next_record,omitempty"`
	PrevRecord       string                                   `protobuf:"bytes,4,opt,name=prev_record,json=prevRecord,proto3" json:"prev_record,omitempty"`
	MinBalance       github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,5,rep,name=min_balance,json=minBalance,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"min_balance"`
}

func (m *AutoDelegation) Reset()         { *m = AutoDelegation{} }
func (m *AutoDelegation) String() string { return proto.CompactTextString(m) }
func (*AutoDelegation) ProtoMessage()    {}
func (*AutoDelegation) Descriptor() ([]byte, []int) {
	return fileDescriptor_772d7df24b39569f, []int{0}
}
func (m *AutoDelegation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AutoDelegation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AutoDelegation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AutoDelegation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutoDelegation.Merge(m, src)
}
func (m *AutoDelegation) XXX_Size() int {
	return m.Size()
}
func (m *AutoDelegation) XXX_DiscardUnknown() {
	xxx_messageInfo_AutoDelegation.DiscardUnknown(m)
}

var xxx_messageInfo_AutoDelegation proto.InternalMessageInfo

func (m *AutoDelegation) GetDelegatorAddress() string {
	if m != nil {
		return m.DelegatorAddress
	}
	return ""
}

func (m *AutoDelegation) GetNextRecord() string {
	if m != nil {
		return m.NextRecord
	}
	return ""
}

func (m *AutoDelegation) GetPrevRecord() string {
	if m != nil {
		return m.PrevRecord
	}
	return ""
}

func (m *AutoDelegation) GetMinBalance() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.MinBalance
	}
	return nil
}

type HeadPointer struct {
	FirstRecord   string `protobuf:"bytes,1,opt,name=first_record,json=firstRecord,proto3" json:"first_record,omitempty"`
	CurrentRecord string `protobuf:"bytes,2,opt,name=current_record,json=currentRecord,proto3" json:"current_record,omitempty"`
}

func (m *HeadPointer) Reset()         { *m = HeadPointer{} }
func (m *HeadPointer) String() string { return proto.CompactTextString(m) }
func (*HeadPointer) ProtoMessage()    {}
func (*HeadPointer) Descriptor() ([]byte, []int) {
	return fileDescriptor_772d7df24b39569f, []int{1}
}
func (m *HeadPointer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HeadPointer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HeadPointer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HeadPointer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeadPointer.Merge(m, src)
}
func (m *HeadPointer) XXX_Size() int {
	return m.Size()
}
func (m *HeadPointer) XXX_DiscardUnknown() {
	xxx_messageInfo_HeadPointer.DiscardUnknown(m)
}

var xxx_messageInfo_HeadPointer proto.InternalMessageInfo

func (m *HeadPointer) GetFirstRecord() string {
	if m != nil {
		return m.FirstRecord
	}
	return ""
}

func (m *HeadPointer) GetCurrentRecord() string {
	if m != nil {
		return m.CurrentRecord
	}
	return ""
}

func init() {
	proto.RegisterType((*AutoDelegation)(nil), "cosmos.distribution.v1beta1.AutoDelegation")
	proto.RegisterType((*HeadPointer)(nil), "cosmos.distribution.v1beta1.HeadPointer")
}

func init() {
	proto.RegisterFile("cosmos/distribution/v1beta1/auto_delegation.proto", fileDescriptor_772d7df24b39569f)
}

var fileDescriptor_772d7df24b39569f = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xc1, 0x6a, 0xdb, 0x30,
	0x1c, 0xc6, 0xed, 0x64, 0x1b, 0x4c, 0xde, 0xc2, 0x66, 0x02, 0x73, 0x32, 0x50, 0xb2, 0xc0, 0x20,
	0x97, 0xd8, 0xf3, 0x76, 0xda, 0x31, 0xde, 0x06, 0xbb, 0x6d, 0x78, 0x87, 0xc1, 0x2e, 0x46, 0xb6,
	0x35, 0x57, 0x34, 0x96, 0x82, 0x24, 0x87, 0xf4, 0x2d, 0xfa, 0x18, 0xa5, 0xe7, 0xde, 0xfa, 0x02,
	0x39, 0x86, 0x9e, 0x7a, 0x6a, 0x8b, 0xf3, 0x22, 0xc5, 0x92, 0x62, 0xda, 0x4b, 0x73, 0x92, 0xf9,
	0xff, 0xbf, 0xdf, 0xe7, 0xcf, 0x9f, 0x05, 0xc2, 0x8c, 0x89, 0x92, 0x89, 0x20, 0x27, 0x42, 0x72,
	0x92, 0x56, 0x92, 0x30, 0x1a, 0xac, 0xc2, 0x14, 0x4b, 0x14, 0x06, 0xa8, 0x92, 0x2c, 0xc9, 0xf1,
	0x02, 0x17, 0xa8, 0x99, 0xfb, 0x4b, 0xce, 0x24, 0x73, 0xdf, 0x6b, 0xc4, 0x7f, 0x88, 0xf8, 0x06,
	0x19, 0xf6, 0x0b, 0x56, 0x30, 0xa5, 0x0b, 0x9a, 0x27, 0x8d, 0x0c, 0xa1, 0x79, 0x4b, 0x8a, 0x04,
	0x6e, 0xdd, 0x33, 0x46, 0x8c, 0xe5, 0x70, 0xa0, 0xf7, 0x89, 0x06, 0x8d, 0xbf, 0x5e, 0xbd, 0x33,
	0x68, 0x29, 0x8a, 0x60, 0x15, 0x36, 0x87, 0x5e, 0x4c, 0x2e, 0x3b, 0xa0, 0x37, 0xaf, 0x24, 0xfb,
	0xde, 0xe6, 0x73, 0x7f, 0x80, 0xb7, 0x26, 0x2d, 0xe3, 0x09, 0xca, 0x73, 0x8e, 0x85, 0xf0, 0xec,
	0xb1, 0x3d, 0x7d, 0x19, 0x79, 0x57, 0x17, 0xb3, 0xbe, 0x31, 0x9e, 0xeb, 0xcd, 0x1f, 0xc9, 0x09,
	0x2d, 0xe2, 0x37, 0x2d, 0x62, 0xe6, 0xee, 0x57, 0xe0, 0x50, 0xbc, 0x96, 0x09, 0xc7, 0x19, 0xe3,
	0xb9, 0xd7, 0x3d, 0x60, 0x00, 0x1a, 0x71, 0xac, 0xb4, 0x0d, 0xba, 0xe4, 0x78, 0xb5, 0x47, 0x9f,
	0x1d, 0x42, 0x1b, 0xb1, 0x41, 0x17, 0xc0, 0x29, 0x09, 0x4d, 0x52, 0xb4, 0x40, 0x34, 0xc3, 0xde,
	0xf3, 0x71, 0x77, 0xea, 0x7c, 0x1e, 0xf8, 0x86, 0x6b, 0x9a, 0xdb, 0x97, 0xec, 0x7f, 0x63, 0x84,
	0x46, 0x9f, 0x36, 0x37, 0x23, 0xeb, 0xfc, 0x76, 0x34, 0x2d, 0x88, 0x3c, 0xaa, 0x52, 0x3f, 0x63,
	0xa5, 0x69, 0xce, 0x1c, 0x33, 0x91, 0x1f, 0x07, 0xf2, 0x64, 0x89, 0x85, 0x02, 0x44, 0x0c, 0x4a,
	0x42, 0x23, 0x6d, 0x3f, 0xf9, 0x0b, 0x9c, 0x9f, 0x18, 0xe5, 0xbf, 0x19, 0xa1, 0x12, 0x73, 0xf7,
	0x03, 0x78, 0xf5, 0x9f, 0x70, 0xd1, 0x7e, 0xb3, 0x2a, 0x2d, 0x76, 0xd4, 0xcc, 0xe4, 0xfb, 0x08,
	0x7a, 0x59, 0xc5, 0x39, 0xa6, 0xad, 0xa8, 0xa3, 0x44, 0xaf, 0xcd, 0x54, 0xcb, 0xa2, 0x5f, 0x67,
	0x35, 0xb4, 0x37, 0x35, 0xb4, 0xb7, 0x35, 0xb4, 0xef, 0x6a, 0x68, 0x9f, 0xee, 0xa0, 0xb5, 0xdd,
	0x41, 0xeb, 0x7a, 0x07, 0xad, 0x7f, 0xe1, 0x93, 0x61, 0xd7, 0x8f, 0xaf, 0xa1, 0xca, 0x9e, 0xbe,
	0x50, 0xbf, 0xfb, 0xcb, 0x7d, 0x00, 0x00, 0x00, 0xff, 0xff, 0x67, 0x93, 0x23, 0x4f, 0xaa, 0x02,
	0x00, 0x00,
}

func (this *AutoDelegation) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AutoDelegation)
	if !ok {
		that2, ok := that.(AutoDelegation)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.DelegatorAddress != that1.DelegatorAddress {
		return false
	}
	if this.NextRecord != that1.NextRecord {
		return false
	}
	if this.PrevRecord != that1.PrevRecord {
		return false
	}
	if len(this.MinBalance) != len(that1.MinBalance) {
		return false
	}
	for i := range this.MinBalance {
		if !this.MinBalance[i].Equal(&that1.MinBalance[i]) {
			return false
		}
	}
	return true
}
func (this *HeadPointer) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*HeadPointer)
	if !ok {
		that2, ok := that.(HeadPointer)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.FirstRecord != that1.FirstRecord {
		return false
	}
	if this.CurrentRecord != that1.CurrentRecord {
		return false
	}
	return true
}
func (m *AutoDelegation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AutoDelegation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AutoDelegation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MinBalance) > 0 {
		for iNdEx := len(m.MinBalance) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MinBalance[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintAutoDelegation(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.PrevRecord) > 0 {
		i -= len(m.PrevRecord)
		copy(dAtA[i:], m.PrevRecord)
		i = encodeVarintAutoDelegation(dAtA, i, uint64(len(m.PrevRecord)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.NextRecord) > 0 {
		i -= len(m.NextRecord)
		copy(dAtA[i:], m.NextRecord)
		i = encodeVarintAutoDelegation(dAtA, i, uint64(len(m.NextRecord)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.DelegatorAddress) > 0 {
		i -= len(m.DelegatorAddress)
		copy(dAtA[i:], m.DelegatorAddress)
		i = encodeVarintAutoDelegation(dAtA, i, uint64(len(m.DelegatorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HeadPointer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeadPointer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HeadPointer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CurrentRecord) > 0 {
		i -= len(m.CurrentRecord)
		copy(dAtA[i:], m.CurrentRecord)
		i = encodeVarintAutoDelegation(dAtA, i, uint64(len(m.CurrentRecord)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.FirstRecord) > 0 {
		i -= len(m.FirstRecord)
		copy(dAtA[i:], m.FirstRecord)
		i = encodeVarintAutoDelegation(dAtA, i, uint64(len(m.FirstRecord)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintAutoDelegation(dAtA []byte, offset int, v uint64) int {
	offset -= sovAutoDelegation(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AutoDelegation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DelegatorAddress)
	if l > 0 {
		n += 1 + l + sovAutoDelegation(uint64(l))
	}
	l = len(m.NextRecord)
	if l > 0 {
		n += 1 + l + sovAutoDelegation(uint64(l))
	}
	l = len(m.PrevRecord)
	if l > 0 {
		n += 1 + l + sovAutoDelegation(uint64(l))
	}
	if len(m.MinBalance) > 0 {
		for _, e := range m.MinBalance {
			l = e.Size()
			n += 1 + l + sovAutoDelegation(uint64(l))
		}
	}
	return n
}

func (m *HeadPointer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FirstRecord)
	if l > 0 {
		n += 1 + l + sovAutoDelegation(uint64(l))
	}
	l = len(m.CurrentRecord)
	if l > 0 {
		n += 1 + l + sovAutoDelegation(uint64(l))
	}
	return n
}

func sovAutoDelegation(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAutoDelegation(x uint64) (n int) {
	return sovAutoDelegation(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AutoDelegation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAutoDelegation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AutoDelegation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AutoDelegation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAutoDelegation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAutoDelegation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAutoDelegation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextRecord", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAutoDelegation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAutoDelegation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAutoDelegation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NextRecord = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrevRecord", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAutoDelegation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAutoDelegation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAutoDelegation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PrevRecord = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinBalance", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAutoDelegation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAutoDelegation
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAutoDelegation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MinBalance = append(m.MinBalance, types.Coin{})
			if err := m.MinBalance[len(m.MinBalance)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAutoDelegation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAutoDelegation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeadPointer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAutoDelegation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeadPointer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeadPointer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstRecord", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAutoDelegation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAutoDelegation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAutoDelegation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstRecord = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentRecord", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAutoDelegation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAutoDelegation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAutoDelegation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrentRecord = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAutoDelegation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAutoDelegation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAutoDelegation(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAutoDelegation
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAutoDelegation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAutoDelegation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAutoDelegation
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAutoDelegation
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAutoDelegation
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAutoDelegation        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAutoDelegation          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAutoDelegation = fmt.Errorf("proto: unexpected end of group")
)
